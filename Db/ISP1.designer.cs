#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Db
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="ISPTEST")]
	public partial class ISPDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertBranch(Branch instance);
    partial void UpdateBranch(Branch instance);
    partial void DeleteBranch(Branch instance);
    partial void InsertWorkOrderStatus(WorkOrderStatus instance);
    partial void UpdateWorkOrderStatus(WorkOrderStatus instance);
    partial void DeleteWorkOrderStatus(WorkOrderStatus instance);
    partial void InsertBranchesBank(BranchesBank instance);
    partial void UpdateBranchesBank(BranchesBank instance);
    partial void DeleteBranchesBank(BranchesBank instance);
    partial void InsertBranchesBanksHistory(BranchesBanksHistory instance);
    partial void UpdateBranchesBanksHistory(BranchesBanksHistory instance);
    partial void DeleteBranchesBanksHistory(BranchesBanksHistory instance);
    partial void InsertBranchesDiscount(BranchesDiscount instance);
    partial void UpdateBranchesDiscount(BranchesDiscount instance);
    partial void DeleteBranchesDiscount(BranchesDiscount instance);
    partial void InsertBranchesSave(BranchesSave instance);
    partial void UpdateBranchesSave(BranchesSave instance);
    partial void DeleteBranchesSave(BranchesSave instance);
    partial void InsertGovernorate(Governorate instance);
    partial void UpdateGovernorate(Governorate instance);
    partial void DeleteGovernorate(Governorate instance);
    partial void InsertIpPackage(IpPackage instance);
    partial void UpdateIpPackage(IpPackage instance);
    partial void DeleteIpPackage(IpPackage instance);
    partial void InsertNew(New instance);
    partial void UpdateNew(New instance);
    partial void DeleteNew(New instance);
    partial void InsertOutgoingType(OutgoingType instance);
    partial void UpdateOutgoingType(OutgoingType instance);
    partial void DeleteOutgoingType(OutgoingType instance);
    partial void InsertPaymentType(PaymentType instance);
    partial void UpdatePaymentType(PaymentType instance);
    partial void DeletePaymentType(PaymentType instance);
    partial void InsertPricing(Pricing instance);
    partial void UpdatePricing(Pricing instance);
    partial void DeletePricing(Pricing instance);
    partial void InsertRequest(Request instance);
    partial void UpdateRequest(Request instance);
    partial void DeleteRequest(Request instance);
    partial void InsertRequestStatus(RequestStatus instance);
    partial void UpdateRequestStatus(RequestStatus instance);
    partial void DeleteRequestStatus(RequestStatus instance);
    partial void InsertServicePackage(ServicePackage instance);
    partial void UpdateServicePackage(ServicePackage instance);
    partial void DeleteServicePackage(ServicePackage instance);
    partial void InsertServicePackagesType(ServicePackagesType instance);
    partial void UpdateServicePackagesType(ServicePackagesType instance);
    partial void DeleteServicePackagesType(ServicePackagesType instance);
    partial void InsertServiceProvider(ServiceProvider instance);
    partial void UpdateServiceProvider(ServiceProvider instance);
    partial void DeleteServiceProvider(ServiceProvider instance);
    partial void InsertStatus(Status instance);
    partial void UpdateStatus(Status instance);
    partial void DeleteStatus(Status instance);
    partial void InsertTicketComment(TicketComment instance);
    partial void UpdateTicketComment(TicketComment instance);
    partial void DeleteTicketComment(TicketComment instance);
    partial void InsertTicketReason(TicketReason instance);
    partial void UpdateTicketReason(TicketReason instance);
    partial void DeleteTicketReason(TicketReason instance);
    partial void InsertTicket(Ticket instance);
    partial void UpdateTicket(Ticket instance);
    partial void DeleteTicket(Ticket instance);
    partial void InsertTicketStatus(TicketStatus instance);
    partial void UpdateTicketStatus(TicketStatus instance);
    partial void DeleteTicketStatus(TicketStatus instance);
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    partial void InsertWorkOrderFile(WorkOrderFile instance);
    partial void UpdateWorkOrderFile(WorkOrderFile instance);
    partial void DeleteWorkOrderFile(WorkOrderFile instance);
    partial void InsertWorkOrderHistory(WorkOrderHistory instance);
    partial void UpdateWorkOrderHistory(WorkOrderHistory instance);
    partial void DeleteWorkOrderHistory(WorkOrderHistory instance);
    partial void InsertWorkOrder(WorkOrder instance);
    partial void UpdateWorkOrder(WorkOrder instance);
    partial void DeleteWorkOrder(WorkOrder instance);
    partial void InsertReceipt(Receipt instance);
    partial void UpdateReceipt(Receipt instance);
    partial void DeleteReceipt(Receipt instance);
    partial void InsertUserBranch(UserBranch instance);
    partial void UpdateUserBranch(UserBranch instance);
    partial void DeleteUserBranch(UserBranch instance);
    partial void InsertCall(Call instance);
    partial void UpdateCall(Call instance);
    partial void DeleteCall(Call instance);
    partial void InsertCentral(Central instance);
    partial void UpdateCentral(Central instance);
    partial void DeleteCentral(Central instance);
    partial void InsertResellerRouter(ResellerRouter instance);
    partial void UpdateResellerRouter(ResellerRouter instance);
    partial void DeleteResellerRouter(ResellerRouter instance);
    partial void InsertRouter(Router instance);
    partial void UpdateRouter(Router instance);
    partial void DeleteRouter(Router instance);
    partial void InsertRouterOperation(RouterOperation instance);
    partial void UpdateRouterOperation(RouterOperation instance);
    partial void DeleteRouterOperation(RouterOperation instance);
    partial void InsertWorkOrderRouter(WorkOrderRouter instance);
    partial void UpdateWorkOrderRouter(WorkOrderRouter instance);
    partial void DeleteWorkOrderRouter(WorkOrderRouter instance);
    partial void InsertUserCulture(UserCulture instance);
    partial void UpdateUserCulture(UserCulture instance);
    partial void DeleteUserCulture(UserCulture instance);
    partial void InsertCulture(Culture instance);
    partial void UpdateCulture(Culture instance);
    partial void DeleteCulture(Culture instance);
    partial void InsertAutomatedProcess(AutomatedProcess instance);
    partial void UpdateAutomatedProcess(AutomatedProcess instance);
    partial void DeleteAutomatedProcess(AutomatedProcess instance);
    partial void InsertMessage(Message instance);
    partial void UpdateMessage(Message instance);
    partial void DeleteMessage(Message instance);
    partial void InsertComplaint(Complaint instance);
    partial void UpdateComplaint(Complaint instance);
    partial void DeleteComplaint(Complaint instance);
    partial void InsertCallState(CallState instance);
    partial void UpdateCallState(CallState instance);
    partial void DeleteCallState(CallState instance);
    partial void InsertPhoneData(PhoneData instance);
    partial void UpdatePhoneData(PhoneData instance);
    partial void DeletePhoneData(PhoneData instance);
    partial void InsertRejectionReason(RejectionReason instance);
    partial void UpdateRejectionReason(RejectionReason instance);
    partial void DeleteRejectionReason(RejectionReason instance);
    partial void InsertEmailCnfg(EmailCnfg instance);
    partial void UpdateEmailCnfg(EmailCnfg instance);
    partial void DeleteEmailCnfg(EmailCnfg instance);
    partial void InsertLogoPosition(LogoPosition instance);
    partial void UpdateLogoPosition(LogoPosition instance);
    partial void DeleteLogoPosition(LogoPosition instance);
    partial void InsertReceiptCnfg(ReceiptCnfg instance);
    partial void UpdateReceiptCnfg(ReceiptCnfg instance);
    partial void DeleteReceiptCnfg(ReceiptCnfg instance);
    partial void InsertUserProvider(UserProvider instance);
    partial void UpdateUserProvider(UserProvider instance);
    partial void DeleteUserProvider(UserProvider instance);
    partial void InsertOfferReseller(OfferReseller instance);
    partial void UpdateOfferReseller(OfferReseller instance);
    partial void DeleteOfferReseller(OfferReseller instance);
    partial void InsertOfferProvider(OfferProvider instance);
    partial void UpdateOfferProvider(OfferProvider instance);
    partial void DeleteOfferProvider(OfferProvider instance);
    partial void InsertOffer(Offer instance);
    partial void UpdateOffer(Offer instance);
    partial void DeleteOffer(Offer instance);
    partial void InsertReminder(Reminder instance);
    partial void UpdateReminder(Reminder instance);
    partial void DeleteReminder(Reminder instance);
    partial void InsertQuickSupport(QuickSupport instance);
    partial void UpdateQuickSupport(QuickSupport instance);
    partial void DeleteQuickSupport(QuickSupport instance);
    partial void InsertPaymentType1(PaymentType1 instance);
    partial void UpdatePaymentType1(PaymentType1 instance);
    partial void DeletePaymentType1(PaymentType1 instance);
    partial void Insertprivilege(privilege instance);
    partial void Updateprivilege(privilege instance);
    partial void Deleteprivilege(privilege instance);
    partial void InsertGroup(Group instance);
    partial void UpdateGroup(Group instance);
    partial void DeleteGroup(Group instance);
    partial void InsertGroupPrivilege(GroupPrivilege instance);
    partial void UpdateGroupPrivilege(GroupPrivilege instance);
    partial void DeleteGroupPrivilege(GroupPrivilege instance);
    partial void InsertDataLevel(DataLevel instance);
    partial void UpdateDataLevel(DataLevel instance);
    partial void DeleteDataLevel(DataLevel instance);
    partial void InsertExtraGiga(ExtraGiga instance);
    partial void UpdateExtraGiga(ExtraGiga instance);
    partial void DeleteExtraGiga(ExtraGiga instance);
    partial void InsertResellerPackagesDiscount(ResellerPackagesDiscount instance);
    partial void UpdateResellerPackagesDiscount(ResellerPackagesDiscount instance);
    partial void DeleteResellerPackagesDiscount(ResellerPackagesDiscount instance);
    partial void InsertDemand(Demand instance);
    partial void UpdateDemand(Demand instance);
    partial void DeleteDemand(Demand instance);
    partial void InsertOfferProviderPackage(OfferProviderPackage instance);
    partial void UpdateOfferProviderPackage(OfferProviderPackage instance);
    partial void DeleteOfferProviderPackage(OfferProviderPackage instance);
    partial void InsertOfferBranch(OfferBranch instance);
    partial void UpdateOfferBranch(OfferBranch instance);
    partial void DeleteOfferBranch(OfferBranch instance);
    partial void InsertOutgoingExpense(OutgoingExpense instance);
    partial void UpdateOutgoingExpense(OutgoingExpense instance);
    partial void DeleteOutgoingExpense(OutgoingExpense instance);
    partial void InsertBranchPackagesDiscount(BranchPackagesDiscount instance);
    partial void UpdateBranchPackagesDiscount(BranchPackagesDiscount instance);
    partial void DeleteBranchPackagesDiscount(BranchPackagesDiscount instance);
    partial void InsertWorkOrderNote(WorkOrderNote instance);
    partial void UpdateWorkOrderNote(WorkOrderNote instance);
    partial void DeleteWorkOrderNote(WorkOrderNote instance);
    partial void InsertOffersDetail(OffersDetail instance);
    partial void UpdateOffersDetail(OffersDetail instance);
    partial void DeleteOffersDetail(OffersDetail instance);
    partial void InsertNumberAttachment(NumberAttachment instance);
    partial void UpdateNumberAttachment(NumberAttachment instance);
    partial void DeleteNumberAttachment(NumberAttachment instance);
    partial void InsertResellerAttachment(ResellerAttachment instance);
    partial void UpdateResellerAttachment(ResellerAttachment instance);
    partial void DeleteResellerAttachment(ResellerAttachment instance);
    partial void InsertOptionProvider(OptionProvider instance);
    partial void UpdateOptionProvider(OptionProvider instance);
    partial void DeleteOptionProvider(OptionProvider instance);
    partial void InsertResellerCreditsVoice(ResellerCreditsVoice instance);
    partial void UpdateResellerCreditsVoice(ResellerCreditsVoice instance);
    partial void DeleteResellerCreditsVoice(ResellerCreditsVoice instance);
    partial void InsertUpdatedResellerB(UpdatedResellerB instance);
    partial void UpdateUpdatedResellerB(UpdatedResellerB instance);
    partial void DeleteUpdatedResellerB(UpdatedResellerB instance);
    partial void InsertUpdatedResellerPayment(UpdatedResellerPayment instance);
    partial void UpdateUpdatedResellerPayment(UpdatedResellerPayment instance);
    partial void DeleteUpdatedResellerPayment(UpdatedResellerPayment instance);
    partial void InsertRechargeClientRequest(RechargeClientRequest instance);
    partial void UpdateRechargeClientRequest(RechargeClientRequest instance);
    partial void DeleteRechargeClientRequest(RechargeClientRequest instance);
    partial void InsertRechargeBranchRequest(RechargeBranchRequest instance);
    partial void UpdateRechargeBranchRequest(RechargeBranchRequest instance);
    partial void DeleteRechargeBranchRequest(RechargeBranchRequest instance);
    partial void InsertBranchCreditVoice(BranchCreditVoice instance);
    partial void UpdateBranchCreditVoice(BranchCreditVoice instance);
    partial void DeleteBranchCreditVoice(BranchCreditVoice instance);
    partial void InsertFriendlyLink(FriendlyLink instance);
    partial void UpdateFriendlyLink(FriendlyLink instance);
    partial void DeleteFriendlyLink(FriendlyLink instance);
    partial void InsertDebtsInvoice(DebtsInvoice instance);
    partial void UpdateDebtsInvoice(DebtsInvoice instance);
    partial void DeleteDebtsInvoice(DebtsInvoice instance);
    partial void InsertResellerCredit(ResellerCredit instance);
    partial void UpdateResellerCredit(ResellerCredit instance);
    partial void DeleteResellerCredit(ResellerCredit instance);
    partial void InsertRechargeRequest(RechargeRequest instance);
    partial void UpdateRechargeRequest(RechargeRequest instance);
    partial void DeleteRechargeRequest(RechargeRequest instance);
    partial void InsertTextOfRechargeAccount(TextOfRechargeAccount instance);
    partial void UpdateTextOfRechargeAccount(TextOfRechargeAccount instance);
    partial void DeleteTextOfRechargeAccount(TextOfRechargeAccount instance);
    partial void InsertBox(Box instance);
    partial void UpdateBox(Box instance);
    partial void DeleteBox(Box instance);
    partial void InsertRechargeRequestBranch(RechargeRequestBranch instance);
    partial void UpdateRechargeRequestBranch(RechargeRequestBranch instance);
    partial void DeleteRechargeRequestBranch(RechargeRequestBranch instance);
    partial void InsertBranchCredit(BranchCredit instance);
    partial void UpdateBranchCredit(BranchCredit instance);
    partial void DeleteBranchCredit(BranchCredit instance);
    partial void InsertUpdatedResellerBSPrivilage(UpdatedResellerBSPrivilage instance);
    partial void UpdateUpdatedResellerBSPrivilage(UpdatedResellerBSPrivilage instance);
    partial void DeleteUpdatedResellerBSPrivilage(UpdatedResellerBSPrivilage instance);
    partial void InsertArrangedInvoice(ArrangedInvoice instance);
    partial void UpdateArrangedInvoice(ArrangedInvoice instance);
    partial void DeleteArrangedInvoice(ArrangedInvoice instance);
    partial void InsertCenterCredit(CenterCredit instance);
    partial void UpdateCenterCredit(CenterCredit instance);
    partial void DeleteCenterCredit(CenterCredit instance);
    partial void InsertSiteData(SiteData instance);
    partial void UpdateSiteData(SiteData instance);
    partial void DeleteSiteData(SiteData instance);
    partial void InsertBoxCredit(BoxCredit instance);
    partial void UpdateBoxCredit(BoxCredit instance);
    partial void DeleteBoxCredit(BoxCredit instance);
    partial void InsertSMSCaseNotification(SMSCaseNotification instance);
    partial void UpdateSMSCaseNotification(SMSCaseNotification instance);
    partial void DeleteSMSCaseNotification(SMSCaseNotification instance);
    partial void InsertSMSCnfg(SMSCnfg instance);
    partial void UpdateSMSCnfg(SMSCnfg instance);
    partial void DeleteSMSCnfg(SMSCnfg instance);
    partial void InsertOptionInvoiceProvider(OptionInvoiceProvider instance);
    partial void UpdateOptionInvoiceProvider(OptionInvoiceProvider instance);
    partial void DeleteOptionInvoiceProvider(OptionInvoiceProvider instance);
    partial void InsertIncomingExpense(IncomingExpense instance);
    partial void UpdateIncomingExpense(IncomingExpense instance);
    partial void DeleteIncomingExpense(IncomingExpense instance);
    partial void InsertRevenueType(RevenueType instance);
    partial void UpdateRevenueType(RevenueType instance);
    partial void DeleteRevenueType(RevenueType instance);
    partial void InsertCustomerPayment(CustomerPayment instance);
    partial void UpdateCustomerPayment(CustomerPayment instance);
    partial void DeleteCustomerPayment(CustomerPayment instance);
    partial void InsertVoiceCompany(VoiceCompany instance);
    partial void UpdateVoiceCompany(VoiceCompany instance);
    partial void DeleteVoiceCompany(VoiceCompany instance);
    partial void InsertStore(Store instance);
    partial void UpdateStore(Store instance);
    partial void DeleteStore(Store instance);
    partial void InsertUserSave(UserSave instance);
    partial void UpdateUserSave(UserSave instance);
    partial void DeleteUserSave(UserSave instance);
    partial void InsertUserSavesHistory(UserSavesHistory instance);
    partial void UpdateUserSavesHistory(UserSavesHistory instance);
    partial void DeleteUserSavesHistory(UserSavesHistory instance);
    partial void InsertSave(Save instance);
    partial void UpdateSave(Save instance);
    partial void DeleteSave(Save instance);
    partial void InsertCompareTEData(CompareTEData instance);
    partial void UpdateCompareTEData(CompareTEData instance);
    partial void DeleteCompareTEData(CompareTEData instance);
    partial void InsertCallMessage(CallMessage instance);
    partial void UpdateCallMessage(CallMessage instance);
    partial void DeleteCallMessage(CallMessage instance);
    partial void InsertPayingCustomersReseller(PayingCustomersReseller instance);
    partial void UpdatePayingCustomersReseller(PayingCustomersReseller instance);
    partial void DeletePayingCustomersReseller(PayingCustomersReseller instance);
    partial void InsertUsersTransaction(UsersTransaction instance);
    partial void UpdateUsersTransaction(UsersTransaction instance);
    partial void DeleteUsersTransaction(UsersTransaction instance);
    partial void InsertOptionSuspendProvider(OptionSuspendProvider instance);
    partial void UpdateOptionSuspendProvider(OptionSuspendProvider instance);
    partial void DeleteOptionSuspendProvider(OptionSuspendProvider instance);
    partial void InsertRequestDateHistory(RequestDateHistory instance);
    partial void UpdateRequestDateHistory(RequestDateHistory instance);
    partial void DeleteRequestDateHistory(RequestDateHistory instance);
    partial void InsertInvoiceType(InvoiceType instance);
    partial void UpdateInvoiceType(InvoiceType instance);
    partial void DeleteInvoiceType(InvoiceType instance);
    partial void InsertInvoiceHeader(InvoiceHeader instance);
    partial void UpdateInvoiceHeader(InvoiceHeader instance);
    partial void DeleteInvoiceHeader(InvoiceHeader instance);
    partial void InsertCustomer(Customer instance);
    partial void UpdateCustomer(Customer instance);
    partial void DeleteCustomer(Customer instance);
    partial void InsertSupplier(Supplier instance);
    partial void UpdateSupplier(Supplier instance);
    partial void DeleteSupplier(Supplier instance);
    partial void InsertStoreTransaction(StoreTransaction instance);
    partial void UpdateStoreTransaction(StoreTransaction instance);
    partial void DeleteStoreTransaction(StoreTransaction instance);
    partial void InsertAccount(Account instance);
    partial void UpdateAccount(Account instance);
    partial void DeleteAccount(Account instance);
    partial void InsertNewResellerRequest(NewResellerRequest instance);
    partial void UpdateNewResellerRequest(NewResellerRequest instance);
    partial void DeleteNewResellerRequest(NewResellerRequest instance);
    partial void InsertPhone(Phone instance);
    partial void UpdatePhone(Phone instance);
    partial void DeletePhone(Phone instance);
    partial void InsertCalender(Calender instance);
    partial void UpdateCalender(Calender instance);
    partial void DeleteCalender(Calender instance);
    partial void InsertResellerTransformationRequest(ResellerTransformationRequest instance);
    partial void UpdateResellerTransformationRequest(ResellerTransformationRequest instance);
    partial void DeleteResellerTransformationRequest(ResellerTransformationRequest instance);
    partial void InsertWorkOrderCredit(WorkOrderCredit instance);
    partial void UpdateWorkOrderCredit(WorkOrderCredit instance);
    partial void DeleteWorkOrderCredit(WorkOrderCredit instance);
    partial void InsertPersonalEmail(PersonalEmail instance);
    partial void UpdatePersonalEmail(PersonalEmail instance);
    partial void DeletePersonalEmail(PersonalEmail instance);
    partial void InsertFawry(Fawry instance);
    partial void UpdateFawry(Fawry instance);
    partial void DeleteFawry(Fawry instance);
    partial void InsertSPoptionReselleraccount(SPoptionReselleraccount instance);
    partial void UpdateSPoptionReselleraccount(SPoptionReselleraccount instance);
    partial void DeleteSPoptionReselleraccount(SPoptionReselleraccount instance);
    partial void InsertRecieveRouter(RecieveRouter instance);
    partial void UpdateRecieveRouter(RecieveRouter instance);
    partial void DeleteRecieveRouter(RecieveRouter instance);
    partial void Insertevent(@event instance);
    partial void Updateevent(@event instance);
    partial void Deleteevent(@event instance);
    partial void InsertDisType(DisType instance);
    partial void UpdateDisType(DisType instance);
    partial void DeleteDisType(DisType instance);
    partial void InsertDisCard(DisCard instance);
    partial void UpdateDisCard(DisCard instance);
    partial void DeleteDisCard(DisCard instance);
    partial void InsertEmpDayAbsType(EmpDayAbsType instance);
    partial void UpdateEmpDayAbsType(EmpDayAbsType instance);
    partial void DeleteEmpDayAbsType(EmpDayAbsType instance);
    partial void InsertEmphalfAbsType(EmphalfAbsType instance);
    partial void UpdateEmphalfAbsType(EmphalfAbsType instance);
    partial void DeleteEmphalfAbsType(EmphalfAbsType instance);
    partial void InsertEmployeeAssemply(EmployeeAssemply instance);
    partial void UpdateEmployeeAssemply(EmployeeAssemply instance);
    partial void DeleteEmployeeAssemply(EmployeeAssemply instance);
    partial void InsertEmployeeDebit(EmployeeDebit instance);
    partial void UpdateEmployeeDebit(EmployeeDebit instance);
    partial void DeleteEmployeeDebit(EmployeeDebit instance);
    partial void InsertEmployeeSalary(EmployeeSalary instance);
    partial void UpdateEmployeeSalary(EmployeeSalary instance);
    partial void DeleteEmployeeSalary(EmployeeSalary instance);
    partial void InsertEmployeeSetting(EmployeeSetting instance);
    partial void UpdateEmployeeSetting(EmployeeSetting instance);
    partial void DeleteEmployeeSetting(EmployeeSetting instance);
    partial void InsertEmployeeState(EmployeeState instance);
    partial void UpdateEmployeeState(EmployeeState instance);
    partial void DeleteEmployeeState(EmployeeState instance);
    partial void InsertEmploye(Employe instance);
    partial void UpdateEmploye(Employe instance);
    partial void DeleteEmploye(Employe instance);
    partial void InsertHrDaye(HrDaye instance);
    partial void UpdateHrDaye(HrDaye instance);
    partial void DeleteHrDaye(HrDaye instance);
    partial void InsertReward(Reward instance);
    partial void UpdateReward(Reward instance);
    partial void DeleteReward(Reward instance);
    partial void InsertRequestsNotitfication(RequestsNotitfication instance);
    partial void UpdateRequestsNotitfication(RequestsNotitfication instance);
    partial void DeleteRequestsNotitfication(RequestsNotitfication instance);
    partial void InsertBranchesForResellerPayment(BranchesForResellerPayment instance);
    partial void UpdateBranchesForResellerPayment(BranchesForResellerPayment instance);
    partial void DeleteBranchesForResellerPayment(BranchesForResellerPayment instance);
    partial void InsertOptionPortalProvider(OptionPortalProvider instance);
    partial void UpdateOptionPortalProvider(OptionPortalProvider instance);
    partial void DeleteOptionPortalProvider(OptionPortalProvider instance);
    partial void InsertBackup(Backup instance);
    partial void UpdateBackup(Backup instance);
    partial void DeleteBackup(Backup instance);
    partial void InsertBranchTransformationRequest(BranchTransformationRequest instance);
    partial void UpdateBranchTransformationRequest(BranchTransformationRequest instance);
    partial void DeleteBranchTransformationRequest(BranchTransformationRequest instance);
    partial void InsertResellerUnpaidDemandComment(ResellerUnpaidDemandComment instance);
    partial void UpdateResellerUnpaidDemandComment(ResellerUnpaidDemandComment instance);
    partial void DeleteResellerUnpaidDemandComment(ResellerUnpaidDemandComment instance);
    partial void InsertBranchInvoiceComment(BranchInvoiceComment instance);
    partial void UpdateBranchInvoiceComment(BranchInvoiceComment instance);
    partial void DeleteBranchInvoiceComment(BranchInvoiceComment instance);
    partial void InsertDeletedCustomersHistory(DeletedCustomersHistory instance);
    partial void UpdateDeletedCustomersHistory(DeletedCustomersHistory instance);
    partial void DeleteDeletedCustomersHistory(DeletedCustomersHistory instance);
    partial void InsertDistributorOption(DistributorOption instance);
    partial void UpdateDistributorOption(DistributorOption instance);
    partial void DeleteDistributorOption(DistributorOption instance);
    partial void InsertDistributorProvider(DistributorProvider instance);
    partial void UpdateDistributorProvider(DistributorProvider instance);
    partial void DeleteDistributorProvider(DistributorProvider instance);
    partial void Insertauthentication(authentication instance);
    partial void Updateauthentication(authentication instance);
    partial void Deleteauthentication(authentication instance);
    partial void InsertShowPendingRequestsOption(ShowPendingRequestsOption instance);
    partial void UpdateShowPendingRequestsOption(ShowPendingRequestsOption instance);
    partial void DeleteShowPendingRequestsOption(ShowPendingRequestsOption instance);
    partial void InsertDistributorPaymentRecord(DistributorPaymentRecord instance);
    partial void UpdateDistributorPaymentRecord(DistributorPaymentRecord instance);
    partial void DeleteDistributorPaymentRecord(DistributorPaymentRecord instance);
    partial void InsertResellerDistributorCommision(ResellerDistributorCommision instance);
    partial void UpdateResellerDistributorCommision(ResellerDistributorCommision instance);
    partial void DeleteResellerDistributorCommision(ResellerDistributorCommision instance);
    partial void InsertProcessType(ProcessType instance);
    partial void UpdateProcessType(ProcessType instance);
    partial void DeleteProcessType(ProcessType instance);
    partial void InsertUserTracking(UserTracking instance);
    partial void UpdateUserTracking(UserTracking instance);
    partial void DeleteUserTracking(UserTracking instance);
    partial void InsertPeriod(Period instance);
    partial void UpdatePeriod(Period instance);
    partial void DeletePeriod(Period instance);
    partial void InsertWorkOrderRequest(WorkOrderRequest instance);
    partial void UpdateWorkOrderRequest(WorkOrderRequest instance);
    partial void DeleteWorkOrderRequest(WorkOrderRequest instance);
    partial void InsertTransferBetweenSavesRequest(TransferBetweenSavesRequest instance);
    partial void UpdateTransferBetweenSavesRequest(TransferBetweenSavesRequest instance);
    partial void DeleteTransferBetweenSavesRequest(TransferBetweenSavesRequest instance);
    partial void InsertOption(Option instance);
    partial void UpdateOption(Option instance);
    partial void DeleteOption(Option instance);
    partial void InsertItem(Item instance);
    partial void UpdateItem(Item instance);
    partial void DeleteItem(Item instance);
    partial void InsertInvoiceDetail(InvoiceDetail instance);
    partial void UpdateInvoiceDetail(InvoiceDetail instance);
    partial void DeleteInvoiceDetail(InvoiceDetail instance);
    partial void InsertFawryPaymentRecord(FawryPaymentRecord instance);
    partial void UpdateFawryPaymentRecord(FawryPaymentRecord instance);
    partial void DeleteFawryPaymentRecord(FawryPaymentRecord instance);
    #endregion
		
		public ISPDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["ISPTestConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public ISPDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ISPDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ISPDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ISPDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Branch> Branches
		{
			get
			{
				return this.GetTable<Branch>();
			}
		}
		
		public System.Data.Linq.Table<WorkOrderStatus> WorkOrderStatus
		{
			get
			{
				return this.GetTable<WorkOrderStatus>();
			}
		}
		
		public System.Data.Linq.Table<BranchesBank> BranchesBanks
		{
			get
			{
				return this.GetTable<BranchesBank>();
			}
		}
		
		public System.Data.Linq.Table<BranchesBanksHistory> BranchesBanksHistories
		{
			get
			{
				return this.GetTable<BranchesBanksHistory>();
			}
		}
		
		public System.Data.Linq.Table<BranchesDiscount> BranchesDiscounts
		{
			get
			{
				return this.GetTable<BranchesDiscount>();
			}
		}
		
		public System.Data.Linq.Table<BranchesSave> BranchesSaves
		{
			get
			{
				return this.GetTable<BranchesSave>();
			}
		}
		
		public System.Data.Linq.Table<Governorate> Governorates
		{
			get
			{
				return this.GetTable<Governorate>();
			}
		}
		
		public System.Data.Linq.Table<IpPackage> IpPackages
		{
			get
			{
				return this.GetTable<IpPackage>();
			}
		}
		
		public System.Data.Linq.Table<New> News
		{
			get
			{
				return this.GetTable<New>();
			}
		}
		
		public System.Data.Linq.Table<OutgoingType> OutgoingTypes
		{
			get
			{
				return this.GetTable<OutgoingType>();
			}
		}
		
		public System.Data.Linq.Table<PaymentType> PaymentTypes
		{
			get
			{
				return this.GetTable<PaymentType>();
			}
		}
		
		public System.Data.Linq.Table<Pricing> Pricings
		{
			get
			{
				return this.GetTable<Pricing>();
			}
		}
		
		public System.Data.Linq.Table<Request> Requests
		{
			get
			{
				return this.GetTable<Request>();
			}
		}
		
		public System.Data.Linq.Table<RequestStatus> RequestStatus
		{
			get
			{
				return this.GetTable<RequestStatus>();
			}
		}
		
		public System.Data.Linq.Table<ServicePackage> ServicePackages
		{
			get
			{
				return this.GetTable<ServicePackage>();
			}
		}
		
		public System.Data.Linq.Table<ServicePackagesType> ServicePackagesTypes
		{
			get
			{
				return this.GetTable<ServicePackagesType>();
			}
		}
		
		public System.Data.Linq.Table<ServiceProvider> ServiceProviders
		{
			get
			{
				return this.GetTable<ServiceProvider>();
			}
		}
		
		public System.Data.Linq.Table<Status> Status
		{
			get
			{
				return this.GetTable<Status>();
			}
		}
		
		public System.Data.Linq.Table<TicketComment> TicketComments
		{
			get
			{
				return this.GetTable<TicketComment>();
			}
		}
		
		public System.Data.Linq.Table<TicketReason> TicketReasons
		{
			get
			{
				return this.GetTable<TicketReason>();
			}
		}
		
		public System.Data.Linq.Table<Ticket> Tickets
		{
			get
			{
				return this.GetTable<Ticket>();
			}
		}
		
		public System.Data.Linq.Table<TicketStatus> TicketStatus
		{
			get
			{
				return this.GetTable<TicketStatus>();
			}
		}
		
		public System.Data.Linq.Table<User> Users
		{
			get
			{
				return this.GetTable<User>();
			}
		}
		
		public System.Data.Linq.Table<WorkOrderFile> WorkOrderFiles
		{
			get
			{
				return this.GetTable<WorkOrderFile>();
			}
		}
		
		public System.Data.Linq.Table<WorkOrderHistory> WorkOrderHistories
		{
			get
			{
				return this.GetTable<WorkOrderHistory>();
			}
		}
		
		public System.Data.Linq.Table<WorkOrder> WorkOrders
		{
			get
			{
				return this.GetTable<WorkOrder>();
			}
		}
		
		public System.Data.Linq.Table<Receipt> Receipts
		{
			get
			{
				return this.GetTable<Receipt>();
			}
		}
		
		public System.Data.Linq.Table<UserBranch> UserBranches
		{
			get
			{
				return this.GetTable<UserBranch>();
			}
		}
		
		public System.Data.Linq.Table<Call> Calls
		{
			get
			{
				return this.GetTable<Call>();
			}
		}
		
		public System.Data.Linq.Table<Central> Centrals
		{
			get
			{
				return this.GetTable<Central>();
			}
		}
		
		public System.Data.Linq.Table<ResellerRouter> ResellerRouters
		{
			get
			{
				return this.GetTable<ResellerRouter>();
			}
		}
		
		public System.Data.Linq.Table<Router> Routers
		{
			get
			{
				return this.GetTable<Router>();
			}
		}
		
		public System.Data.Linq.Table<RouterOperation> RouterOperations
		{
			get
			{
				return this.GetTable<RouterOperation>();
			}
		}
		
		public System.Data.Linq.Table<WorkOrderRouter> WorkOrderRouters
		{
			get
			{
				return this.GetTable<WorkOrderRouter>();
			}
		}
		
		public System.Data.Linq.Table<UserCulture> UserCultures
		{
			get
			{
				return this.GetTable<UserCulture>();
			}
		}
		
		public System.Data.Linq.Table<Culture> Cultures
		{
			get
			{
				return this.GetTable<Culture>();
			}
		}
		
		public System.Data.Linq.Table<AutomatedProcess> AutomatedProcesses
		{
			get
			{
				return this.GetTable<AutomatedProcess>();
			}
		}
		
		public System.Data.Linq.Table<Message> Messages
		{
			get
			{
				return this.GetTable<Message>();
			}
		}
		
		public System.Data.Linq.Table<Complaint> Complaints
		{
			get
			{
				return this.GetTable<Complaint>();
			}
		}
		
		public System.Data.Linq.Table<CallState> CallStates
		{
			get
			{
				return this.GetTable<CallState>();
			}
		}
		
		public System.Data.Linq.Table<PhoneData> PhoneDatas
		{
			get
			{
				return this.GetTable<PhoneData>();
			}
		}
		
		public System.Data.Linq.Table<RejectionReason> RejectionReasons
		{
			get
			{
				return this.GetTable<RejectionReason>();
			}
		}
		
		public System.Data.Linq.Table<EmailCnfg> EmailCnfgs
		{
			get
			{
				return this.GetTable<EmailCnfg>();
			}
		}
		
		public System.Data.Linq.Table<LogoPosition> LogoPositions
		{
			get
			{
				return this.GetTable<LogoPosition>();
			}
		}
		
		public System.Data.Linq.Table<ReceiptCnfg> ReceiptCnfgs
		{
			get
			{
				return this.GetTable<ReceiptCnfg>();
			}
		}
		
		public System.Data.Linq.Table<UserProvider> UserProviders
		{
			get
			{
				return this.GetTable<UserProvider>();
			}
		}
		
		public System.Data.Linq.Table<OfferReseller> OfferResellers
		{
			get
			{
				return this.GetTable<OfferReseller>();
			}
		}
		
		public System.Data.Linq.Table<OfferProvider> OfferProviders
		{
			get
			{
				return this.GetTable<OfferProvider>();
			}
		}
		
		public System.Data.Linq.Table<Offer> Offers
		{
			get
			{
				return this.GetTable<Offer>();
			}
		}
		
		public System.Data.Linq.Table<Reminder> Reminders
		{
			get
			{
				return this.GetTable<Reminder>();
			}
		}
		
		public System.Data.Linq.Table<QuickSupport> QuickSupports
		{
			get
			{
				return this.GetTable<QuickSupport>();
			}
		}
		
		public System.Data.Linq.Table<PaymentType1> PaymentType1s
		{
			get
			{
				return this.GetTable<PaymentType1>();
			}
		}
		
		public System.Data.Linq.Table<privilege> privileges
		{
			get
			{
				return this.GetTable<privilege>();
			}
		}
		
		public System.Data.Linq.Table<Group> Groups
		{
			get
			{
				return this.GetTable<Group>();
			}
		}
		
		public System.Data.Linq.Table<GroupPrivilege> GroupPrivileges
		{
			get
			{
				return this.GetTable<GroupPrivilege>();
			}
		}
		
		public System.Data.Linq.Table<DataLevel> DataLevels
		{
			get
			{
				return this.GetTable<DataLevel>();
			}
		}
		
		public System.Data.Linq.Table<ExtraGiga> ExtraGigas
		{
			get
			{
				return this.GetTable<ExtraGiga>();
			}
		}
		
		public System.Data.Linq.Table<ResellerPackagesDiscount> ResellerPackagesDiscounts
		{
			get
			{
				return this.GetTable<ResellerPackagesDiscount>();
			}
		}
		
		public System.Data.Linq.Table<Demand> Demands
		{
			get
			{
				return this.GetTable<Demand>();
			}
		}
		
		public System.Data.Linq.Table<OfferProviderPackage> OfferProviderPackages
		{
			get
			{
				return this.GetTable<OfferProviderPackage>();
			}
		}
		
		public System.Data.Linq.Table<OfferBranch> OfferBranches
		{
			get
			{
				return this.GetTable<OfferBranch>();
			}
		}
		
		public System.Data.Linq.Table<OutgoingExpense> OutgoingExpenses
		{
			get
			{
				return this.GetTable<OutgoingExpense>();
			}
		}
		
		public System.Data.Linq.Table<BranchPackagesDiscount> BranchPackagesDiscounts
		{
			get
			{
				return this.GetTable<BranchPackagesDiscount>();
			}
		}
		
		public System.Data.Linq.Table<WorkOrderNote> WorkOrderNotes
		{
			get
			{
				return this.GetTable<WorkOrderNote>();
			}
		}
		
		public System.Data.Linq.Table<OffersDetail> OffersDetails
		{
			get
			{
				return this.GetTable<OffersDetail>();
			}
		}
		
		public System.Data.Linq.Table<NumberAttachment> NumberAttachments
		{
			get
			{
				return this.GetTable<NumberAttachment>();
			}
		}
		
		public System.Data.Linq.Table<ResellerAttachment> ResellerAttachments
		{
			get
			{
				return this.GetTable<ResellerAttachment>();
			}
		}
		
		public System.Data.Linq.Table<OptionProvider> OptionProviders
		{
			get
			{
				return this.GetTable<OptionProvider>();
			}
		}
		
		public System.Data.Linq.Table<ResellerCreditsVoice> ResellerCreditsVoices
		{
			get
			{
				return this.GetTable<ResellerCreditsVoice>();
			}
		}
		
		public System.Data.Linq.Table<UpdatedResellerB> UpdatedResellerBs
		{
			get
			{
				return this.GetTable<UpdatedResellerB>();
			}
		}
		
		public System.Data.Linq.Table<UpdatedResellerPayment> UpdatedResellerPayments
		{
			get
			{
				return this.GetTable<UpdatedResellerPayment>();
			}
		}
		
		public System.Data.Linq.Table<RechargeClientRequest> RechargeClientRequests
		{
			get
			{
				return this.GetTable<RechargeClientRequest>();
			}
		}
		
		public System.Data.Linq.Table<RechargeBranchRequest> RechargeBranchRequests
		{
			get
			{
				return this.GetTable<RechargeBranchRequest>();
			}
		}
		
		public System.Data.Linq.Table<BranchCreditVoice> BranchCreditVoices
		{
			get
			{
				return this.GetTable<BranchCreditVoice>();
			}
		}
		
		public System.Data.Linq.Table<FriendlyLink> FriendlyLinks
		{
			get
			{
				return this.GetTable<FriendlyLink>();
			}
		}
		
		public System.Data.Linq.Table<DebtsInvoice> DebtsInvoices
		{
			get
			{
				return this.GetTable<DebtsInvoice>();
			}
		}
		
		public System.Data.Linq.Table<ResellerCredit> ResellerCredits
		{
			get
			{
				return this.GetTable<ResellerCredit>();
			}
		}
		
		public System.Data.Linq.Table<RechargeRequest> RechargeRequests
		{
			get
			{
				return this.GetTable<RechargeRequest>();
			}
		}
		
		public System.Data.Linq.Table<TextOfRechargeAccount> TextOfRechargeAccounts
		{
			get
			{
				return this.GetTable<TextOfRechargeAccount>();
			}
		}
		
		public System.Data.Linq.Table<Box> Boxes
		{
			get
			{
				return this.GetTable<Box>();
			}
		}
		
		public System.Data.Linq.Table<RechargeRequestBranch> RechargeRequestBranches
		{
			get
			{
				return this.GetTable<RechargeRequestBranch>();
			}
		}
		
		public System.Data.Linq.Table<BranchCredit> BranchCredits
		{
			get
			{
				return this.GetTable<BranchCredit>();
			}
		}
		
		public System.Data.Linq.Table<UpdatedResellerBSPrivilage> UpdatedResellerBSPrivilages
		{
			get
			{
				return this.GetTable<UpdatedResellerBSPrivilage>();
			}
		}
		
		public System.Data.Linq.Table<ArrangedInvoice> ArrangedInvoices
		{
			get
			{
				return this.GetTable<ArrangedInvoice>();
			}
		}
		
		public System.Data.Linq.Table<CenterCredit> CenterCredits
		{
			get
			{
				return this.GetTable<CenterCredit>();
			}
		}
		
		public System.Data.Linq.Table<SiteData> SiteDatas
		{
			get
			{
				return this.GetTable<SiteData>();
			}
		}
		
		public System.Data.Linq.Table<BoxCredit> BoxCredits
		{
			get
			{
				return this.GetTable<BoxCredit>();
			}
		}
		
		public System.Data.Linq.Table<SMSCaseNotification> SMSCaseNotifications
		{
			get
			{
				return this.GetTable<SMSCaseNotification>();
			}
		}
		
		public System.Data.Linq.Table<SMSCnfg> SMSCnfgs
		{
			get
			{
				return this.GetTable<SMSCnfg>();
			}
		}
		
		public System.Data.Linq.Table<OptionInvoiceProvider> OptionInvoiceProviders
		{
			get
			{
				return this.GetTable<OptionInvoiceProvider>();
			}
		}
		
		public System.Data.Linq.Table<IncomingExpense> IncomingExpenses
		{
			get
			{
				return this.GetTable<IncomingExpense>();
			}
		}
		
		public System.Data.Linq.Table<RevenueType> RevenueTypes
		{
			get
			{
				return this.GetTable<RevenueType>();
			}
		}
		
		public System.Data.Linq.Table<CustomerPayment> CustomerPayments
		{
			get
			{
				return this.GetTable<CustomerPayment>();
			}
		}
		
		public System.Data.Linq.Table<VoiceCompany> VoiceCompanies
		{
			get
			{
				return this.GetTable<VoiceCompany>();
			}
		}
		
		public System.Data.Linq.Table<Store> Stores
		{
			get
			{
				return this.GetTable<Store>();
			}
		}
		
		public System.Data.Linq.Table<UserSave> UserSaves
		{
			get
			{
				return this.GetTable<UserSave>();
			}
		}
		
		public System.Data.Linq.Table<UserSavesHistory> UserSavesHistories
		{
			get
			{
				return this.GetTable<UserSavesHistory>();
			}
		}
		
		public System.Data.Linq.Table<Save> Saves
		{
			get
			{
				return this.GetTable<Save>();
			}
		}
		
		public System.Data.Linq.Table<CompareTEData> CompareTEDatas
		{
			get
			{
				return this.GetTable<CompareTEData>();
			}
		}
		
		public System.Data.Linq.Table<CallMessage> CallMessages
		{
			get
			{
				return this.GetTable<CallMessage>();
			}
		}
		
		public System.Data.Linq.Table<PayingCustomersReseller> PayingCustomersResellers
		{
			get
			{
				return this.GetTable<PayingCustomersReseller>();
			}
		}
		
		public System.Data.Linq.Table<UsersTransaction> UsersTransactions
		{
			get
			{
				return this.GetTable<UsersTransaction>();
			}
		}
		
		public System.Data.Linq.Table<OptionSuspendProvider> OptionSuspendProviders
		{
			get
			{
				return this.GetTable<OptionSuspendProvider>();
			}
		}
		
		public System.Data.Linq.Table<RequestDateHistory> RequestDateHistories
		{
			get
			{
				return this.GetTable<RequestDateHistory>();
			}
		}
		
		public System.Data.Linq.Table<InvoiceType> InvoiceTypes
		{
			get
			{
				return this.GetTable<InvoiceType>();
			}
		}
		
		public System.Data.Linq.Table<InvoiceHeader> InvoiceHeaders
		{
			get
			{
				return this.GetTable<InvoiceHeader>();
			}
		}
		
		public System.Data.Linq.Table<Customer> Customers
		{
			get
			{
				return this.GetTable<Customer>();
			}
		}
		
		public System.Data.Linq.Table<Supplier> Suppliers
		{
			get
			{
				return this.GetTable<Supplier>();
			}
		}
		
		public System.Data.Linq.Table<StoreTransaction> StoreTransactions
		{
			get
			{
				return this.GetTable<StoreTransaction>();
			}
		}
		
		public System.Data.Linq.Table<Account> Accounts
		{
			get
			{
				return this.GetTable<Account>();
			}
		}
		
		public System.Data.Linq.Table<NewResellerRequest> NewResellerRequests
		{
			get
			{
				return this.GetTable<NewResellerRequest>();
			}
		}
		
		public System.Data.Linq.Table<Phone> Phones
		{
			get
			{
				return this.GetTable<Phone>();
			}
		}
		
		public System.Data.Linq.Table<Calender> Calenders
		{
			get
			{
				return this.GetTable<Calender>();
			}
		}
		
		public System.Data.Linq.Table<ResellerTransformationRequest> ResellerTransformationRequests
		{
			get
			{
				return this.GetTable<ResellerTransformationRequest>();
			}
		}
		
		public System.Data.Linq.Table<WorkOrderCredit> WorkOrderCredits
		{
			get
			{
				return this.GetTable<WorkOrderCredit>();
			}
		}
		
		public System.Data.Linq.Table<PersonalEmail> PersonalEmails
		{
			get
			{
				return this.GetTable<PersonalEmail>();
			}
		}
		
		public System.Data.Linq.Table<Fawry> Fawries
		{
			get
			{
				return this.GetTable<Fawry>();
			}
		}
		
		public System.Data.Linq.Table<SPoptionReselleraccount> SPoptionReselleraccounts
		{
			get
			{
				return this.GetTable<SPoptionReselleraccount>();
			}
		}
		
		public System.Data.Linq.Table<RecieveRouter> RecieveRouters
		{
			get
			{
				return this.GetTable<RecieveRouter>();
			}
		}
		
		public System.Data.Linq.Table<@event> events
		{
			get
			{
				return this.GetTable<@event>();
			}
		}
		
		public System.Data.Linq.Table<DisType> DisTypes
		{
			get
			{
				return this.GetTable<DisType>();
			}
		}
		
		public System.Data.Linq.Table<DisCard> DisCards
		{
			get
			{
				return this.GetTable<DisCard>();
			}
		}
		
		public System.Data.Linq.Table<EmpDayAbsType> EmpDayAbsTypes
		{
			get
			{
				return this.GetTable<EmpDayAbsType>();
			}
		}
		
		public System.Data.Linq.Table<EmphalfAbsType> EmphalfAbsTypes
		{
			get
			{
				return this.GetTable<EmphalfAbsType>();
			}
		}
		
		public System.Data.Linq.Table<EmployeeAssemply> EmployeeAssemplies
		{
			get
			{
				return this.GetTable<EmployeeAssemply>();
			}
		}
		
		public System.Data.Linq.Table<EmployeeDebit> EmployeeDebits
		{
			get
			{
				return this.GetTable<EmployeeDebit>();
			}
		}
		
		public System.Data.Linq.Table<EmployeeSalary> EmployeeSalaries
		{
			get
			{
				return this.GetTable<EmployeeSalary>();
			}
		}
		
		public System.Data.Linq.Table<EmployeeSetting> EmployeeSettings
		{
			get
			{
				return this.GetTable<EmployeeSetting>();
			}
		}
		
		public System.Data.Linq.Table<EmployeeState> EmployeeStates
		{
			get
			{
				return this.GetTable<EmployeeState>();
			}
		}
		
		public System.Data.Linq.Table<Employe> Employes
		{
			get
			{
				return this.GetTable<Employe>();
			}
		}
		
		public System.Data.Linq.Table<HrDaye> HrDayes
		{
			get
			{
				return this.GetTable<HrDaye>();
			}
		}
		
		public System.Data.Linq.Table<Reward> Rewards
		{
			get
			{
				return this.GetTable<Reward>();
			}
		}
		
		public System.Data.Linq.Table<RequestsNotitfication> RequestsNotitfications
		{
			get
			{
				return this.GetTable<RequestsNotitfication>();
			}
		}
		
		public System.Data.Linq.Table<BranchesForResellerPayment> BranchesForResellerPayments
		{
			get
			{
				return this.GetTable<BranchesForResellerPayment>();
			}
		}
		
		public System.Data.Linq.Table<OptionPortalProvider> OptionPortalProviders
		{
			get
			{
				return this.GetTable<OptionPortalProvider>();
			}
		}
		
		public System.Data.Linq.Table<Backup> Backups
		{
			get
			{
				return this.GetTable<Backup>();
			}
		}
		
		public System.Data.Linq.Table<BranchTransformationRequest> BranchTransformationRequests
		{
			get
			{
				return this.GetTable<BranchTransformationRequest>();
			}
		}
		
		public System.Data.Linq.Table<ResellerUnpaidDemandComment> ResellerUnpaidDemandComments
		{
			get
			{
				return this.GetTable<ResellerUnpaidDemandComment>();
			}
		}
		
		public System.Data.Linq.Table<BranchInvoiceComment> BranchInvoiceComments
		{
			get
			{
				return this.GetTable<BranchInvoiceComment>();
			}
		}
		
		public System.Data.Linq.Table<DeletedCustomersHistory> DeletedCustomersHistories
		{
			get
			{
				return this.GetTable<DeletedCustomersHistory>();
			}
		}
		
		public System.Data.Linq.Table<DistributorOption> DistributorOptions
		{
			get
			{
				return this.GetTable<DistributorOption>();
			}
		}
		
		public System.Data.Linq.Table<DistributorProvider> DistributorProviders
		{
			get
			{
				return this.GetTable<DistributorProvider>();
			}
		}
		
		public System.Data.Linq.Table<authentication> authentications
		{
			get
			{
				return this.GetTable<authentication>();
			}
		}
		
		public System.Data.Linq.Table<ShowPendingRequestsOption> ShowPendingRequestsOptions
		{
			get
			{
				return this.GetTable<ShowPendingRequestsOption>();
			}
		}
		
		public System.Data.Linq.Table<DistributorPaymentRecord> DistributorPaymentRecords
		{
			get
			{
				return this.GetTable<DistributorPaymentRecord>();
			}
		}
		
		public System.Data.Linq.Table<ResellerDistributorCommision> ResellerDistributorCommisions
		{
			get
			{
				return this.GetTable<ResellerDistributorCommision>();
			}
		}
		
		public System.Data.Linq.Table<ProcessType> ProcessTypes
		{
			get
			{
				return this.GetTable<ProcessType>();
			}
		}
		
		public System.Data.Linq.Table<UserTracking> UserTrackings
		{
			get
			{
				return this.GetTable<UserTracking>();
			}
		}
		
		public System.Data.Linq.Table<Period> Periods
		{
			get
			{
				return this.GetTable<Period>();
			}
		}
		
		public System.Data.Linq.Table<WorkOrderRequest> WorkOrderRequests
		{
			get
			{
				return this.GetTable<WorkOrderRequest>();
			}
		}
		
		public System.Data.Linq.Table<TransferBetweenSavesRequest> TransferBetweenSavesRequests
		{
			get
			{
				return this.GetTable<TransferBetweenSavesRequest>();
			}
		}
		
		public System.Data.Linq.Table<Option> Options
		{
			get
			{
				return this.GetTable<Option>();
			}
		}
		
		public System.Data.Linq.Table<Item> Items
		{
			get
			{
				return this.GetTable<Item>();
			}
		}
		
		public System.Data.Linq.Table<InvoiceDetail> InvoiceDetails
		{
			get
			{
				return this.GetTable<InvoiceDetail>();
			}
		}
		
		public System.Data.Linq.Table<FawryPaymentRecord> FawryPaymentRecords
		{
			get
			{
				return this.GetTable<FawryPaymentRecord>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Branches")]
	public partial class Branch : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _BranchName;
		
		private string _BranchAddress;
		
		private string _Phone1;
		
		private string _Phone2;
		
		private string _Mobile1;
		
		private string _Mobile2;
		
		private string _Fax;
		
		private System.Nullable<int> _AdminID;
		
		private string _Notes;
		
		private EntitySet<BranchesBank> _BranchesBanks;
		
		private EntitySet<BranchesBanksHistory> _BranchesBanksHistories;
		
		private EntitySet<BranchesDiscount> _BranchesDiscounts;
		
		private EntitySet<BranchesSave> _BranchesSaves;
		
		private EntitySet<User> _Users;
		
		private EntitySet<WorkOrderHistory> _WorkOrderHistories;
		
		private EntitySet<WorkOrder> _WorkOrders;
		
		private EntitySet<UserBranch> _UserBranches;
		
		private EntitySet<ReceiptCnfg> _ReceiptCnfgs;
		
		private EntitySet<OfferBranch> _OfferBranches;
		
		private EntitySet<OutgoingExpense> _OutgoingExpenses;
		
		private EntitySet<BranchPackagesDiscount> _BranchPackagesDiscounts;
		
		private EntitySet<RechargeBranchRequest> _RechargeBranchRequests;
		
		private EntitySet<BranchCreditVoice> _BranchCreditVoices;
		
		private EntitySet<RechargeRequestBranch> _RechargeRequestBranches;
		
		private EntitySet<BranchCredit> _BranchCredits;
		
		private EntitySet<IncomingExpense> _IncomingExpenses;
		
		private EntitySet<Save> _Saves;
		
		private EntitySet<UsersTransaction> _UsersTransactions;
		
		private EntitySet<BranchesForResellerPayment> _BranchesForResellerPayments;
		
		private EntitySet<BranchTransformationRequest> _BranchTransformationRequests;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnBranchNameChanging(string value);
    partial void OnBranchNameChanged();
    partial void OnBranchAddressChanging(string value);
    partial void OnBranchAddressChanged();
    partial void OnPhone1Changing(string value);
    partial void OnPhone1Changed();
    partial void OnPhone2Changing(string value);
    partial void OnPhone2Changed();
    partial void OnMobile1Changing(string value);
    partial void OnMobile1Changed();
    partial void OnMobile2Changing(string value);
    partial void OnMobile2Changed();
    partial void OnFaxChanging(string value);
    partial void OnFaxChanged();
    partial void OnAdminIDChanging(System.Nullable<int> value);
    partial void OnAdminIDChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    #endregion
		
		public Branch()
		{
			this._BranchesBanks = new EntitySet<BranchesBank>(new Action<BranchesBank>(this.attach_BranchesBanks), new Action<BranchesBank>(this.detach_BranchesBanks));
			this._BranchesBanksHistories = new EntitySet<BranchesBanksHistory>(new Action<BranchesBanksHistory>(this.attach_BranchesBanksHistories), new Action<BranchesBanksHistory>(this.detach_BranchesBanksHistories));
			this._BranchesDiscounts = new EntitySet<BranchesDiscount>(new Action<BranchesDiscount>(this.attach_BranchesDiscounts), new Action<BranchesDiscount>(this.detach_BranchesDiscounts));
			this._BranchesSaves = new EntitySet<BranchesSave>(new Action<BranchesSave>(this.attach_BranchesSaves), new Action<BranchesSave>(this.detach_BranchesSaves));
			this._Users = new EntitySet<User>(new Action<User>(this.attach_Users), new Action<User>(this.detach_Users));
			this._WorkOrderHistories = new EntitySet<WorkOrderHistory>(new Action<WorkOrderHistory>(this.attach_WorkOrderHistories), new Action<WorkOrderHistory>(this.detach_WorkOrderHistories));
			this._WorkOrders = new EntitySet<WorkOrder>(new Action<WorkOrder>(this.attach_WorkOrders), new Action<WorkOrder>(this.detach_WorkOrders));
			this._UserBranches = new EntitySet<UserBranch>(new Action<UserBranch>(this.attach_UserBranches), new Action<UserBranch>(this.detach_UserBranches));
			this._ReceiptCnfgs = new EntitySet<ReceiptCnfg>(new Action<ReceiptCnfg>(this.attach_ReceiptCnfgs), new Action<ReceiptCnfg>(this.detach_ReceiptCnfgs));
			this._OfferBranches = new EntitySet<OfferBranch>(new Action<OfferBranch>(this.attach_OfferBranches), new Action<OfferBranch>(this.detach_OfferBranches));
			this._OutgoingExpenses = new EntitySet<OutgoingExpense>(new Action<OutgoingExpense>(this.attach_OutgoingExpenses), new Action<OutgoingExpense>(this.detach_OutgoingExpenses));
			this._BranchPackagesDiscounts = new EntitySet<BranchPackagesDiscount>(new Action<BranchPackagesDiscount>(this.attach_BranchPackagesDiscounts), new Action<BranchPackagesDiscount>(this.detach_BranchPackagesDiscounts));
			this._RechargeBranchRequests = new EntitySet<RechargeBranchRequest>(new Action<RechargeBranchRequest>(this.attach_RechargeBranchRequests), new Action<RechargeBranchRequest>(this.detach_RechargeBranchRequests));
			this._BranchCreditVoices = new EntitySet<BranchCreditVoice>(new Action<BranchCreditVoice>(this.attach_BranchCreditVoices), new Action<BranchCreditVoice>(this.detach_BranchCreditVoices));
			this._RechargeRequestBranches = new EntitySet<RechargeRequestBranch>(new Action<RechargeRequestBranch>(this.attach_RechargeRequestBranches), new Action<RechargeRequestBranch>(this.detach_RechargeRequestBranches));
			this._BranchCredits = new EntitySet<BranchCredit>(new Action<BranchCredit>(this.attach_BranchCredits), new Action<BranchCredit>(this.detach_BranchCredits));
			this._IncomingExpenses = new EntitySet<IncomingExpense>(new Action<IncomingExpense>(this.attach_IncomingExpenses), new Action<IncomingExpense>(this.detach_IncomingExpenses));
			this._Saves = new EntitySet<Save>(new Action<Save>(this.attach_Saves), new Action<Save>(this.detach_Saves));
			this._UsersTransactions = new EntitySet<UsersTransaction>(new Action<UsersTransaction>(this.attach_UsersTransactions), new Action<UsersTransaction>(this.detach_UsersTransactions));
			this._BranchesForResellerPayments = new EntitySet<BranchesForResellerPayment>(new Action<BranchesForResellerPayment>(this.attach_BranchesForResellerPayments), new Action<BranchesForResellerPayment>(this.detach_BranchesForResellerPayments));
			this._BranchTransformationRequests = new EntitySet<BranchTransformationRequest>(new Action<BranchTransformationRequest>(this.attach_BranchTransformationRequests), new Action<BranchTransformationRequest>(this.detach_BranchTransformationRequests));
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchName", DbType="NVarChar(255)")]
		public string BranchName
		{
			get
			{
				return this._BranchName;
			}
			set
			{
				if ((this._BranchName != value))
				{
					this.OnBranchNameChanging(value);
					this.SendPropertyChanging();
					this._BranchName = value;
					this.SendPropertyChanged("BranchName");
					this.OnBranchNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchAddress", DbType="NVarChar(255)")]
		public string BranchAddress
		{
			get
			{
				return this._BranchAddress;
			}
			set
			{
				if ((this._BranchAddress != value))
				{
					this.OnBranchAddressChanging(value);
					this.SendPropertyChanging();
					this._BranchAddress = value;
					this.SendPropertyChanged("BranchAddress");
					this.OnBranchAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone1", DbType="NVarChar(50)")]
		public string Phone1
		{
			get
			{
				return this._Phone1;
			}
			set
			{
				if ((this._Phone1 != value))
				{
					this.OnPhone1Changing(value);
					this.SendPropertyChanging();
					this._Phone1 = value;
					this.SendPropertyChanged("Phone1");
					this.OnPhone1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone2", DbType="NVarChar(50)")]
		public string Phone2
		{
			get
			{
				return this._Phone2;
			}
			set
			{
				if ((this._Phone2 != value))
				{
					this.OnPhone2Changing(value);
					this.SendPropertyChanging();
					this._Phone2 = value;
					this.SendPropertyChanged("Phone2");
					this.OnPhone2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mobile1", DbType="NVarChar(50)")]
		public string Mobile1
		{
			get
			{
				return this._Mobile1;
			}
			set
			{
				if ((this._Mobile1 != value))
				{
					this.OnMobile1Changing(value);
					this.SendPropertyChanging();
					this._Mobile1 = value;
					this.SendPropertyChanged("Mobile1");
					this.OnMobile1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mobile2", DbType="NVarChar(50)")]
		public string Mobile2
		{
			get
			{
				return this._Mobile2;
			}
			set
			{
				if ((this._Mobile2 != value))
				{
					this.OnMobile2Changing(value);
					this.SendPropertyChanging();
					this._Mobile2 = value;
					this.SendPropertyChanged("Mobile2");
					this.OnMobile2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fax", DbType="NVarChar(50)")]
		public string Fax
		{
			get
			{
				return this._Fax;
			}
			set
			{
				if ((this._Fax != value))
				{
					this.OnFaxChanging(value);
					this.SendPropertyChanging();
					this._Fax = value;
					this.SendPropertyChanged("Fax");
					this.OnFaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminID", DbType="Int")]
		public System.Nullable<int> AdminID
		{
			get
			{
				return this._AdminID;
			}
			set
			{
				if ((this._AdminID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAdminIDChanging(value);
					this.SendPropertyChanging();
					this._AdminID = value;
					this.SendPropertyChanged("AdminID");
					this.OnAdminIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Branch_BranchesBank", Storage="_BranchesBanks", ThisKey="ID", OtherKey="BranchID")]
		public EntitySet<BranchesBank> BranchesBanks
		{
			get
			{
				return this._BranchesBanks;
			}
			set
			{
				this._BranchesBanks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Branch_BranchesBanksHistory", Storage="_BranchesBanksHistories", ThisKey="ID", OtherKey="BranchID")]
		public EntitySet<BranchesBanksHistory> BranchesBanksHistories
		{
			get
			{
				return this._BranchesBanksHistories;
			}
			set
			{
				this._BranchesBanksHistories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Branch_BranchesDiscount", Storage="_BranchesDiscounts", ThisKey="ID", OtherKey="BranchID")]
		public EntitySet<BranchesDiscount> BranchesDiscounts
		{
			get
			{
				return this._BranchesDiscounts;
			}
			set
			{
				this._BranchesDiscounts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Branch_BranchesSave", Storage="_BranchesSaves", ThisKey="ID", OtherKey="BranchID")]
		public EntitySet<BranchesSave> BranchesSaves
		{
			get
			{
				return this._BranchesSaves;
			}
			set
			{
				this._BranchesSaves.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Branch_User", Storage="_Users", ThisKey="ID", OtherKey="BranchID")]
		public EntitySet<User> Users
		{
			get
			{
				return this._Users;
			}
			set
			{
				this._Users.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Branch_WorkOrderHistory", Storage="_WorkOrderHistories", ThisKey="ID", OtherKey="BranchID")]
		public EntitySet<WorkOrderHistory> WorkOrderHistories
		{
			get
			{
				return this._WorkOrderHistories;
			}
			set
			{
				this._WorkOrderHistories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Branch_WorkOrder", Storage="_WorkOrders", ThisKey="ID", OtherKey="BranchID")]
		public EntitySet<WorkOrder> WorkOrders
		{
			get
			{
				return this._WorkOrders;
			}
			set
			{
				this._WorkOrders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Branch_UserBranch", Storage="_UserBranches", ThisKey="ID", OtherKey="BranchID")]
		public EntitySet<UserBranch> UserBranches
		{
			get
			{
				return this._UserBranches;
			}
			set
			{
				this._UserBranches.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Branch_ReceiptCnfg", Storage="_ReceiptCnfgs", ThisKey="ID", OtherKey="BranchId")]
		public EntitySet<ReceiptCnfg> ReceiptCnfgs
		{
			get
			{
				return this._ReceiptCnfgs;
			}
			set
			{
				this._ReceiptCnfgs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Branch_OfferBranch", Storage="_OfferBranches", ThisKey="ID", OtherKey="BranchId")]
		public EntitySet<OfferBranch> OfferBranches
		{
			get
			{
				return this._OfferBranches;
			}
			set
			{
				this._OfferBranches.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Branch_OutgoingExpense", Storage="_OutgoingExpenses", ThisKey="ID", OtherKey="BranchID")]
		public EntitySet<OutgoingExpense> OutgoingExpenses
		{
			get
			{
				return this._OutgoingExpenses;
			}
			set
			{
				this._OutgoingExpenses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Branch_BranchPackagesDiscount", Storage="_BranchPackagesDiscounts", ThisKey="ID", OtherKey="BranchId")]
		public EntitySet<BranchPackagesDiscount> BranchPackagesDiscounts
		{
			get
			{
				return this._BranchPackagesDiscounts;
			}
			set
			{
				this._BranchPackagesDiscounts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Branch_RechargeBranchRequest", Storage="_RechargeBranchRequests", ThisKey="ID", OtherKey="BranchId")]
		public EntitySet<RechargeBranchRequest> RechargeBranchRequests
		{
			get
			{
				return this._RechargeBranchRequests;
			}
			set
			{
				this._RechargeBranchRequests.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Branch_BranchCreditVoice", Storage="_BranchCreditVoices", ThisKey="ID", OtherKey="BranchId")]
		public EntitySet<BranchCreditVoice> BranchCreditVoices
		{
			get
			{
				return this._BranchCreditVoices;
			}
			set
			{
				this._BranchCreditVoices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Branch_RechargeRequestBranch", Storage="_RechargeRequestBranches", ThisKey="ID", OtherKey="BranchId")]
		public EntitySet<RechargeRequestBranch> RechargeRequestBranches
		{
			get
			{
				return this._RechargeRequestBranches;
			}
			set
			{
				this._RechargeRequestBranches.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Branch_BranchCredit", Storage="_BranchCredits", ThisKey="ID", OtherKey="BranchId")]
		public EntitySet<BranchCredit> BranchCredits
		{
			get
			{
				return this._BranchCredits;
			}
			set
			{
				this._BranchCredits.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Branch_IncomingExpense", Storage="_IncomingExpenses", ThisKey="ID", OtherKey="BranchID")]
		public EntitySet<IncomingExpense> IncomingExpenses
		{
			get
			{
				return this._IncomingExpenses;
			}
			set
			{
				this._IncomingExpenses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Branch_Save", Storage="_Saves", ThisKey="ID", OtherKey="BranchId")]
		public EntitySet<Save> Saves
		{
			get
			{
				return this._Saves;
			}
			set
			{
				this._Saves.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Branch_UsersTransaction", Storage="_UsersTransactions", ThisKey="ID", OtherKey="BranchID")]
		public EntitySet<UsersTransaction> UsersTransactions
		{
			get
			{
				return this._UsersTransactions;
			}
			set
			{
				this._UsersTransactions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Branch_BranchesForResellerPayment", Storage="_BranchesForResellerPayments", ThisKey="ID", OtherKey="BranchId")]
		public EntitySet<BranchesForResellerPayment> BranchesForResellerPayments
		{
			get
			{
				return this._BranchesForResellerPayments;
			}
			set
			{
				this._BranchesForResellerPayments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Branch_BranchTransformationRequest", Storage="_BranchTransformationRequests", ThisKey="ID", OtherKey="BranchId")]
		public EntitySet<BranchTransformationRequest> BranchTransformationRequests
		{
			get
			{
				return this._BranchTransformationRequests;
			}
			set
			{
				this._BranchTransformationRequests.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Branch", Storage="_User", ThisKey="AdminID", OtherKey="ID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Branches.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Branches.Add(this);
						this._AdminID = value.ID;
					}
					else
					{
						this._AdminID = default(Nullable<int>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BranchesBanks(BranchesBank entity)
		{
			this.SendPropertyChanging();
			entity.Branch = this;
		}
		
		private void detach_BranchesBanks(BranchesBank entity)
		{
			this.SendPropertyChanging();
			entity.Branch = null;
		}
		
		private void attach_BranchesBanksHistories(BranchesBanksHistory entity)
		{
			this.SendPropertyChanging();
			entity.Branch = this;
		}
		
		private void detach_BranchesBanksHistories(BranchesBanksHistory entity)
		{
			this.SendPropertyChanging();
			entity.Branch = null;
		}
		
		private void attach_BranchesDiscounts(BranchesDiscount entity)
		{
			this.SendPropertyChanging();
			entity.Branch = this;
		}
		
		private void detach_BranchesDiscounts(BranchesDiscount entity)
		{
			this.SendPropertyChanging();
			entity.Branch = null;
		}
		
		private void attach_BranchesSaves(BranchesSave entity)
		{
			this.SendPropertyChanging();
			entity.Branch = this;
		}
		
		private void detach_BranchesSaves(BranchesSave entity)
		{
			this.SendPropertyChanging();
			entity.Branch = null;
		}
		
		private void attach_Users(User entity)
		{
			this.SendPropertyChanging();
			entity.Branch = this;
		}
		
		private void detach_Users(User entity)
		{
			this.SendPropertyChanging();
			entity.Branch = null;
		}
		
		private void attach_WorkOrderHistories(WorkOrderHistory entity)
		{
			this.SendPropertyChanging();
			entity.Branch = this;
		}
		
		private void detach_WorkOrderHistories(WorkOrderHistory entity)
		{
			this.SendPropertyChanging();
			entity.Branch = null;
		}
		
		private void attach_WorkOrders(WorkOrder entity)
		{
			this.SendPropertyChanging();
			entity.Branch = this;
		}
		
		private void detach_WorkOrders(WorkOrder entity)
		{
			this.SendPropertyChanging();
			entity.Branch = null;
		}
		
		private void attach_UserBranches(UserBranch entity)
		{
			this.SendPropertyChanging();
			entity.Branch = this;
		}
		
		private void detach_UserBranches(UserBranch entity)
		{
			this.SendPropertyChanging();
			entity.Branch = null;
		}
		
		private void attach_ReceiptCnfgs(ReceiptCnfg entity)
		{
			this.SendPropertyChanging();
			entity.Branch = this;
		}
		
		private void detach_ReceiptCnfgs(ReceiptCnfg entity)
		{
			this.SendPropertyChanging();
			entity.Branch = null;
		}
		
		private void attach_OfferBranches(OfferBranch entity)
		{
			this.SendPropertyChanging();
			entity.Branch = this;
		}
		
		private void detach_OfferBranches(OfferBranch entity)
		{
			this.SendPropertyChanging();
			entity.Branch = null;
		}
		
		private void attach_OutgoingExpenses(OutgoingExpense entity)
		{
			this.SendPropertyChanging();
			entity.Branch = this;
		}
		
		private void detach_OutgoingExpenses(OutgoingExpense entity)
		{
			this.SendPropertyChanging();
			entity.Branch = null;
		}
		
		private void attach_BranchPackagesDiscounts(BranchPackagesDiscount entity)
		{
			this.SendPropertyChanging();
			entity.Branch = this;
		}
		
		private void detach_BranchPackagesDiscounts(BranchPackagesDiscount entity)
		{
			this.SendPropertyChanging();
			entity.Branch = null;
		}
		
		private void attach_RechargeBranchRequests(RechargeBranchRequest entity)
		{
			this.SendPropertyChanging();
			entity.Branch = this;
		}
		
		private void detach_RechargeBranchRequests(RechargeBranchRequest entity)
		{
			this.SendPropertyChanging();
			entity.Branch = null;
		}
		
		private void attach_BranchCreditVoices(BranchCreditVoice entity)
		{
			this.SendPropertyChanging();
			entity.Branch = this;
		}
		
		private void detach_BranchCreditVoices(BranchCreditVoice entity)
		{
			this.SendPropertyChanging();
			entity.Branch = null;
		}
		
		private void attach_RechargeRequestBranches(RechargeRequestBranch entity)
		{
			this.SendPropertyChanging();
			entity.Branch = this;
		}
		
		private void detach_RechargeRequestBranches(RechargeRequestBranch entity)
		{
			this.SendPropertyChanging();
			entity.Branch = null;
		}
		
		private void attach_BranchCredits(BranchCredit entity)
		{
			this.SendPropertyChanging();
			entity.Branch = this;
		}
		
		private void detach_BranchCredits(BranchCredit entity)
		{
			this.SendPropertyChanging();
			entity.Branch = null;
		}
		
		private void attach_IncomingExpenses(IncomingExpense entity)
		{
			this.SendPropertyChanging();
			entity.Branch = this;
		}
		
		private void detach_IncomingExpenses(IncomingExpense entity)
		{
			this.SendPropertyChanging();
			entity.Branch = null;
		}
		
		private void attach_Saves(Save entity)
		{
			this.SendPropertyChanging();
			entity.Branch = this;
		}
		
		private void detach_Saves(Save entity)
		{
			this.SendPropertyChanging();
			entity.Branch = null;
		}
		
		private void attach_UsersTransactions(UsersTransaction entity)
		{
			this.SendPropertyChanging();
			entity.Branch = this;
		}
		
		private void detach_UsersTransactions(UsersTransaction entity)
		{
			this.SendPropertyChanging();
			entity.Branch = null;
		}
		
		private void attach_BranchesForResellerPayments(BranchesForResellerPayment entity)
		{
			this.SendPropertyChanging();
			entity.Branch = this;
		}
		
		private void detach_BranchesForResellerPayments(BranchesForResellerPayment entity)
		{
			this.SendPropertyChanging();
			entity.Branch = null;
		}
		
		private void attach_BranchTransformationRequests(BranchTransformationRequest entity)
		{
			this.SendPropertyChanging();
			entity.Branch = this;
		}
		
		private void detach_BranchTransformationRequests(BranchTransformationRequest entity)
		{
			this.SendPropertyChanging();
			entity.Branch = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WorkOrderStatus")]
	public partial class WorkOrderStatus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _WorkOrderID;
		
		private System.Nullable<int> _StatusID;
		
		private string _Notes;
		
		private System.Nullable<int> _UserID;
		
		private System.Nullable<System.DateTime> _UpdateDate;
		
		private System.Nullable<bool> _IsNew;
		
		private EntityRef<Status> _Status;
		
		private EntityRef<User> _User;
		
		private EntityRef<WorkOrder> _WorkOrder;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnWorkOrderIDChanging(System.Nullable<int> value);
    partial void OnWorkOrderIDChanged();
    partial void OnStatusIDChanging(System.Nullable<int> value);
    partial void OnStatusIDChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnUserIDChanging(System.Nullable<int> value);
    partial void OnUserIDChanged();
    partial void OnUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateDateChanged();
    partial void OnIsNewChanging(System.Nullable<bool> value);
    partial void OnIsNewChanged();
    #endregion
		
		public WorkOrderStatus()
		{
			this._Status = default(EntityRef<Status>);
			this._User = default(EntityRef<User>);
			this._WorkOrder = default(EntityRef<WorkOrder>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkOrderID", DbType="Int")]
		public System.Nullable<int> WorkOrderID
		{
			get
			{
				return this._WorkOrderID;
			}
			set
			{
				if ((this._WorkOrderID != value))
				{
					if (this._WorkOrder.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWorkOrderIDChanging(value);
					this.SendPropertyChanging();
					this._WorkOrderID = value;
					this.SendPropertyChanged("WorkOrderID");
					this.OnWorkOrderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusID", DbType="Int")]
		public System.Nullable<int> StatusID
		{
			get
			{
				return this._StatusID;
			}
			set
			{
				if ((this._StatusID != value))
				{
					if (this._Status.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStatusIDChanging(value);
					this.SendPropertyChanging();
					this._StatusID = value;
					this.SendPropertyChanged("StatusID");
					this.OnStatusIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int")]
		public System.Nullable<int> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsNew", DbType="bit")]
		public System.Nullable<bool> IsNew
		{
			get
			{
				return this._IsNew;
			}
			set
			{
				if ((this._IsNew != value))
				{
					this.OnIsNewChanging(value);
					this.SendPropertyChanging();
					this._IsNew = value;
					this.SendPropertyChanged("IsNew");
					this.OnIsNewChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Status_WorkOrderStatus", Storage="_Status", ThisKey="StatusID", OtherKey="ID", IsForeignKey=true)]
		public Status Status
		{
			get
			{
				return this._Status.Entity;
			}
			set
			{
				Status previousValue = this._Status.Entity;
				if (((previousValue != value) 
							|| (this._Status.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Status.Entity = null;
						previousValue.WorkOrderStatus.Remove(this);
					}
					this._Status.Entity = value;
					if ((value != null))
					{
						value.WorkOrderStatus.Add(this);
						this._StatusID = value.ID;
					}
					else
					{
						this._StatusID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Status");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_WorkOrderStatus", Storage="_User", ThisKey="UserID", OtherKey="ID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.WorkOrderStatus.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.WorkOrderStatus.Add(this);
						this._UserID = value.ID;
					}
					else
					{
						this._UserID = default(Nullable<int>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WorkOrder_WorkOrderStatus", Storage="_WorkOrder", ThisKey="WorkOrderID", OtherKey="ID", IsForeignKey=true)]
		public WorkOrder WorkOrder
		{
			get
			{
				return this._WorkOrder.Entity;
			}
			set
			{
				WorkOrder previousValue = this._WorkOrder.Entity;
				if (((previousValue != value) 
							|| (this._WorkOrder.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WorkOrder.Entity = null;
						previousValue.WorkOrderStatus.Remove(this);
					}
					this._WorkOrder.Entity = value;
					if ((value != null))
					{
						value.WorkOrderStatus.Add(this);
						this._WorkOrderID = value.ID;
					}
					else
					{
						this._WorkOrderID = default(Nullable<int>);
					}
					this.SendPropertyChanged("WorkOrder");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BranchesBanks")]
	public partial class BranchesBank : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _BranchID;
		
		private string _BankName;
		
		private System.Nullable<double> _BankValue;
		
		private System.Nullable<System.DateTime> _UpdateDate;
		
		private string _Notes;
		
		private EntitySet<BranchesBanksHistory> _BranchesBanksHistories;
		
		private EntityRef<Branch> _Branch;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnBranchIDChanging(System.Nullable<int> value);
    partial void OnBranchIDChanged();
    partial void OnBankNameChanging(string value);
    partial void OnBankNameChanged();
    partial void OnBankValueChanging(System.Nullable<double> value);
    partial void OnBankValueChanged();
    partial void OnUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateDateChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    #endregion
		
		public BranchesBank()
		{
			this._BranchesBanksHistories = new EntitySet<BranchesBanksHistory>(new Action<BranchesBanksHistory>(this.attach_BranchesBanksHistories), new Action<BranchesBanksHistory>(this.detach_BranchesBanksHistories));
			this._Branch = default(EntityRef<Branch>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchID", DbType="Int")]
		public System.Nullable<int> BranchID
		{
			get
			{
				return this._BranchID;
			}
			set
			{
				if ((this._BranchID != value))
				{
					if (this._Branch.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBranchIDChanging(value);
					this.SendPropertyChanging();
					this._BranchID = value;
					this.SendPropertyChanged("BranchID");
					this.OnBranchIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankName", DbType="NVarChar(255)")]
		public string BankName
		{
			get
			{
				return this._BankName;
			}
			set
			{
				if ((this._BankName != value))
				{
					this.OnBankNameChanging(value);
					this.SendPropertyChanging();
					this._BankName = value;
					this.SendPropertyChanged("BankName");
					this.OnBankNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankValue", DbType="Float")]
		public System.Nullable<double> BankValue
		{
			get
			{
				return this._BankValue;
			}
			set
			{
				if ((this._BankValue != value))
				{
					this.OnBankValueChanging(value);
					this.SendPropertyChanging();
					this._BankValue = value;
					this.SendPropertyChanged("BankValue");
					this.OnBankValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(MAX)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BranchesBank_BranchesBanksHistory", Storage="_BranchesBanksHistories", ThisKey="ID", OtherKey="BranchBankID")]
		public EntitySet<BranchesBanksHistory> BranchesBanksHistories
		{
			get
			{
				return this._BranchesBanksHistories;
			}
			set
			{
				this._BranchesBanksHistories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Branch_BranchesBank", Storage="_Branch", ThisKey="BranchID", OtherKey="ID", IsForeignKey=true)]
		public Branch Branch
		{
			get
			{
				return this._Branch.Entity;
			}
			set
			{
				Branch previousValue = this._Branch.Entity;
				if (((previousValue != value) 
							|| (this._Branch.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Branch.Entity = null;
						previousValue.BranchesBanks.Remove(this);
					}
					this._Branch.Entity = value;
					if ((value != null))
					{
						value.BranchesBanks.Add(this);
						this._BranchID = value.ID;
					}
					else
					{
						this._BranchID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Branch");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BranchesBanksHistories(BranchesBanksHistory entity)
		{
			this.SendPropertyChanging();
			entity.BranchesBank = this;
		}
		
		private void detach_BranchesBanksHistories(BranchesBanksHistory entity)
		{
			this.SendPropertyChanging();
			entity.BranchesBank = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BranchesBanksHistory")]
	public partial class BranchesBanksHistory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _BranchBankID;
		
		private System.Nullable<double> _OldValue;
		
		private System.Nullable<double> _IssueAmmount;
		
		private System.Nullable<System.DateTime> _UpdateDate;
		
		private System.Nullable<int> _BranchID;
		
		private string _Notes;
		
		private string _Notes2;
		
		private EntityRef<Branch> _Branch;
		
		private EntityRef<BranchesBank> _BranchesBank;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnBranchBankIDChanging(System.Nullable<int> value);
    partial void OnBranchBankIDChanged();
    partial void OnOldValueChanging(System.Nullable<double> value);
    partial void OnOldValueChanged();
    partial void OnIssueAmmountChanging(System.Nullable<double> value);
    partial void OnIssueAmmountChanged();
    partial void OnUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateDateChanged();
    partial void OnBranchIDChanging(System.Nullable<int> value);
    partial void OnBranchIDChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnNotes2Changing(string value);
    partial void OnNotes2Changed();
    #endregion
		
		public BranchesBanksHistory()
		{
			this._Branch = default(EntityRef<Branch>);
			this._BranchesBank = default(EntityRef<BranchesBank>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchBankID", DbType="Int")]
		public System.Nullable<int> BranchBankID
		{
			get
			{
				return this._BranchBankID;
			}
			set
			{
				if ((this._BranchBankID != value))
				{
					if (this._BranchesBank.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBranchBankIDChanging(value);
					this.SendPropertyChanging();
					this._BranchBankID = value;
					this.SendPropertyChanged("BranchBankID");
					this.OnBranchBankIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldValue", DbType="Float")]
		public System.Nullable<double> OldValue
		{
			get
			{
				return this._OldValue;
			}
			set
			{
				if ((this._OldValue != value))
				{
					this.OnOldValueChanging(value);
					this.SendPropertyChanging();
					this._OldValue = value;
					this.SendPropertyChanged("OldValue");
					this.OnOldValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IssueAmmount", DbType="Float")]
		public System.Nullable<double> IssueAmmount
		{
			get
			{
				return this._IssueAmmount;
			}
			set
			{
				if ((this._IssueAmmount != value))
				{
					this.OnIssueAmmountChanging(value);
					this.SendPropertyChanging();
					this._IssueAmmount = value;
					this.SendPropertyChanged("IssueAmmount");
					this.OnIssueAmmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchID", DbType="Int")]
		public System.Nullable<int> BranchID
		{
			get
			{
				return this._BranchID;
			}
			set
			{
				if ((this._BranchID != value))
				{
					if (this._Branch.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBranchIDChanging(value);
					this.SendPropertyChanging();
					this._BranchID = value;
					this.SendPropertyChanged("BranchID");
					this.OnBranchIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(MAX)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes2", DbType="NVarChar(MAX)")]
		public string Notes2
		{
			get
			{
				return this._Notes2;
			}
			set
			{
				if ((this._Notes2 != value))
				{
					this.OnNotes2Changing(value);
					this.SendPropertyChanging();
					this._Notes2 = value;
					this.SendPropertyChanged("Notes2");
					this.OnNotes2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Branch_BranchesBanksHistory", Storage="_Branch", ThisKey="BranchID", OtherKey="ID", IsForeignKey=true)]
		public Branch Branch
		{
			get
			{
				return this._Branch.Entity;
			}
			set
			{
				Branch previousValue = this._Branch.Entity;
				if (((previousValue != value) 
							|| (this._Branch.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Branch.Entity = null;
						previousValue.BranchesBanksHistories.Remove(this);
					}
					this._Branch.Entity = value;
					if ((value != null))
					{
						value.BranchesBanksHistories.Add(this);
						this._BranchID = value.ID;
					}
					else
					{
						this._BranchID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Branch");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BranchesBank_BranchesBanksHistory", Storage="_BranchesBank", ThisKey="BranchBankID", OtherKey="ID", IsForeignKey=true)]
		public BranchesBank BranchesBank
		{
			get
			{
				return this._BranchesBank.Entity;
			}
			set
			{
				BranchesBank previousValue = this._BranchesBank.Entity;
				if (((previousValue != value) 
							|| (this._BranchesBank.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BranchesBank.Entity = null;
						previousValue.BranchesBanksHistories.Remove(this);
					}
					this._BranchesBank.Entity = value;
					if ((value != null))
					{
						value.BranchesBanksHistories.Add(this);
						this._BranchBankID = value.ID;
					}
					else
					{
						this._BranchBankID = default(Nullable<int>);
					}
					this.SendPropertyChanged("BranchesBank");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BranchesDiscount")]
	public partial class BranchesDiscount : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _BranchID;
		
		private System.Nullable<int> _ServiceProviderID;
		
		private System.Nullable<int> _ServicePackagesTypeID;
		
		private System.Nullable<double> _DiscountPercent;
		
		private string _Notes;
		
		private EntityRef<Branch> _Branch;
		
		private EntityRef<ServicePackagesType> _ServicePackagesType;
		
		private EntityRef<ServiceProvider> _ServiceProvider;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnBranchIDChanging(System.Nullable<int> value);
    partial void OnBranchIDChanged();
    partial void OnServiceProviderIDChanging(System.Nullable<int> value);
    partial void OnServiceProviderIDChanged();
    partial void OnServicePackagesTypeIDChanging(System.Nullable<int> value);
    partial void OnServicePackagesTypeIDChanged();
    partial void OnDiscountPercentChanging(System.Nullable<double> value);
    partial void OnDiscountPercentChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    #endregion
		
		public BranchesDiscount()
		{
			this._Branch = default(EntityRef<Branch>);
			this._ServicePackagesType = default(EntityRef<ServicePackagesType>);
			this._ServiceProvider = default(EntityRef<ServiceProvider>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchID", DbType="Int")]
		public System.Nullable<int> BranchID
		{
			get
			{
				return this._BranchID;
			}
			set
			{
				if ((this._BranchID != value))
				{
					if (this._Branch.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBranchIDChanging(value);
					this.SendPropertyChanging();
					this._BranchID = value;
					this.SendPropertyChanged("BranchID");
					this.OnBranchIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceProviderID", DbType="Int")]
		public System.Nullable<int> ServiceProviderID
		{
			get
			{
				return this._ServiceProviderID;
			}
			set
			{
				if ((this._ServiceProviderID != value))
				{
					if (this._ServiceProvider.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnServiceProviderIDChanging(value);
					this.SendPropertyChanging();
					this._ServiceProviderID = value;
					this.SendPropertyChanged("ServiceProviderID");
					this.OnServiceProviderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServicePackagesTypeID", DbType="Int")]
		public System.Nullable<int> ServicePackagesTypeID
		{
			get
			{
				return this._ServicePackagesTypeID;
			}
			set
			{
				if ((this._ServicePackagesTypeID != value))
				{
					if (this._ServicePackagesType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnServicePackagesTypeIDChanging(value);
					this.SendPropertyChanging();
					this._ServicePackagesTypeID = value;
					this.SendPropertyChanged("ServicePackagesTypeID");
					this.OnServicePackagesTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscountPercent", DbType="Float")]
		public System.Nullable<double> DiscountPercent
		{
			get
			{
				return this._DiscountPercent;
			}
			set
			{
				if ((this._DiscountPercent != value))
				{
					this.OnDiscountPercentChanging(value);
					this.SendPropertyChanging();
					this._DiscountPercent = value;
					this.SendPropertyChanged("DiscountPercent");
					this.OnDiscountPercentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(MAX)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Branch_BranchesDiscount", Storage="_Branch", ThisKey="BranchID", OtherKey="ID", IsForeignKey=true)]
		public Branch Branch
		{
			get
			{
				return this._Branch.Entity;
			}
			set
			{
				Branch previousValue = this._Branch.Entity;
				if (((previousValue != value) 
							|| (this._Branch.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Branch.Entity = null;
						previousValue.BranchesDiscounts.Remove(this);
					}
					this._Branch.Entity = value;
					if ((value != null))
					{
						value.BranchesDiscounts.Add(this);
						this._BranchID = value.ID;
					}
					else
					{
						this._BranchID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Branch");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ServicePackagesType_BranchesDiscount", Storage="_ServicePackagesType", ThisKey="ServicePackagesTypeID", OtherKey="ID", IsForeignKey=true)]
		public ServicePackagesType ServicePackagesType
		{
			get
			{
				return this._ServicePackagesType.Entity;
			}
			set
			{
				ServicePackagesType previousValue = this._ServicePackagesType.Entity;
				if (((previousValue != value) 
							|| (this._ServicePackagesType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ServicePackagesType.Entity = null;
						previousValue.BranchesDiscounts.Remove(this);
					}
					this._ServicePackagesType.Entity = value;
					if ((value != null))
					{
						value.BranchesDiscounts.Add(this);
						this._ServicePackagesTypeID = value.ID;
					}
					else
					{
						this._ServicePackagesTypeID = default(Nullable<int>);
					}
					this.SendPropertyChanged("ServicePackagesType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ServiceProvider_BranchesDiscount", Storage="_ServiceProvider", ThisKey="ServiceProviderID", OtherKey="ID", IsForeignKey=true)]
		public ServiceProvider ServiceProvider
		{
			get
			{
				return this._ServiceProvider.Entity;
			}
			set
			{
				ServiceProvider previousValue = this._ServiceProvider.Entity;
				if (((previousValue != value) 
							|| (this._ServiceProvider.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ServiceProvider.Entity = null;
						previousValue.BranchesDiscounts.Remove(this);
					}
					this._ServiceProvider.Entity = value;
					if ((value != null))
					{
						value.BranchesDiscounts.Add(this);
						this._ServiceProviderID = value.ID;
					}
					else
					{
						this._ServiceProviderID = default(Nullable<int>);
					}
					this.SendPropertyChanged("ServiceProvider");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BranchesSaves")]
	public partial class BranchesSave : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _BranchID;
		
		private System.Nullable<double> _SaveValue;
		
		private System.Nullable<System.DateTime> _UpdateDate;
		
		private string _Notes;
		
		private EntityRef<Branch> _Branch;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnBranchIDChanging(System.Nullable<int> value);
    partial void OnBranchIDChanged();
    partial void OnSaveValueChanging(System.Nullable<double> value);
    partial void OnSaveValueChanged();
    partial void OnUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateDateChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    #endregion
		
		public BranchesSave()
		{
			this._Branch = default(EntityRef<Branch>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchID", DbType="Int")]
		public System.Nullable<int> BranchID
		{
			get
			{
				return this._BranchID;
			}
			set
			{
				if ((this._BranchID != value))
				{
					if (this._Branch.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBranchIDChanging(value);
					this.SendPropertyChanging();
					this._BranchID = value;
					this.SendPropertyChanged("BranchID");
					this.OnBranchIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SaveValue", DbType="Float")]
		public System.Nullable<double> SaveValue
		{
			get
			{
				return this._SaveValue;
			}
			set
			{
				if ((this._SaveValue != value))
				{
					this.OnSaveValueChanging(value);
					this.SendPropertyChanging();
					this._SaveValue = value;
					this.SendPropertyChanged("SaveValue");
					this.OnSaveValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(MAX)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Branch_BranchesSave", Storage="_Branch", ThisKey="BranchID", OtherKey="ID", IsForeignKey=true)]
		public Branch Branch
		{
			get
			{
				return this._Branch.Entity;
			}
			set
			{
				Branch previousValue = this._Branch.Entity;
				if (((previousValue != value) 
							|| (this._Branch.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Branch.Entity = null;
						previousValue.BranchesSaves.Remove(this);
					}
					this._Branch.Entity = value;
					if ((value != null))
					{
						value.BranchesSaves.Add(this);
						this._BranchID = value.ID;
					}
					else
					{
						this._BranchID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Branch");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Governorates")]
	public partial class Governorate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _GovernorateName;
		
		private string _Notes;
		
		private string _Code;
		
		private EntitySet<WorkOrderHistory> _WorkOrderHistories;
		
		private EntitySet<WorkOrder> _WorkOrders;
		
		private EntitySet<Central> _Centrals;
		
		private EntitySet<Customer> _Customers;
		
		private EntitySet<Supplier> _Suppliers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnGovernorateNameChanging(string value);
    partial void OnGovernorateNameChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    #endregion
		
		public Governorate()
		{
			this._WorkOrderHistories = new EntitySet<WorkOrderHistory>(new Action<WorkOrderHistory>(this.attach_WorkOrderHistories), new Action<WorkOrderHistory>(this.detach_WorkOrderHistories));
			this._WorkOrders = new EntitySet<WorkOrder>(new Action<WorkOrder>(this.attach_WorkOrders), new Action<WorkOrder>(this.detach_WorkOrders));
			this._Centrals = new EntitySet<Central>(new Action<Central>(this.attach_Centrals), new Action<Central>(this.detach_Centrals));
			this._Customers = new EntitySet<Customer>(new Action<Customer>(this.attach_Customers), new Action<Customer>(this.detach_Customers));
			this._Suppliers = new EntitySet<Supplier>(new Action<Supplier>(this.attach_Suppliers), new Action<Supplier>(this.detach_Suppliers));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GovernorateName", DbType="NVarChar(255)")]
		public string GovernorateName
		{
			get
			{
				return this._GovernorateName;
			}
			set
			{
				if ((this._GovernorateName != value))
				{
					this.OnGovernorateNameChanging(value);
					this.SendPropertyChanging();
					this._GovernorateName = value;
					this.SendPropertyChanged("GovernorateName");
					this.OnGovernorateNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="nvarchar(55)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Governorate_WorkOrderHistory", Storage="_WorkOrderHistories", ThisKey="ID", OtherKey="CustomerGovernorateID")]
		public EntitySet<WorkOrderHistory> WorkOrderHistories
		{
			get
			{
				return this._WorkOrderHistories;
			}
			set
			{
				this._WorkOrderHistories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Governorate_WorkOrder", Storage="_WorkOrders", ThisKey="ID", OtherKey="CustomerGovernorateID")]
		public EntitySet<WorkOrder> WorkOrders
		{
			get
			{
				return this._WorkOrders;
			}
			set
			{
				this._WorkOrders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Governorate_Central", Storage="_Centrals", ThisKey="ID", OtherKey="GovernateId")]
		public EntitySet<Central> Centrals
		{
			get
			{
				return this._Centrals;
			}
			set
			{
				this._Centrals.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Governorate_Customer", Storage="_Customers", ThisKey="ID", OtherKey="CustomerGovernerateId")]
		public EntitySet<Customer> Customers
		{
			get
			{
				return this._Customers;
			}
			set
			{
				this._Customers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Governorate_Supplier", Storage="_Suppliers", ThisKey="ID", OtherKey="SupplierGovernerateId")]
		public EntitySet<Supplier> Suppliers
		{
			get
			{
				return this._Suppliers;
			}
			set
			{
				this._Suppliers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_WorkOrderHistories(WorkOrderHistory entity)
		{
			this.SendPropertyChanging();
			entity.Governorate = this;
		}
		
		private void detach_WorkOrderHistories(WorkOrderHistory entity)
		{
			this.SendPropertyChanging();
			entity.Governorate = null;
		}
		
		private void attach_WorkOrders(WorkOrder entity)
		{
			this.SendPropertyChanging();
			entity.Governorate = this;
		}
		
		private void detach_WorkOrders(WorkOrder entity)
		{
			this.SendPropertyChanging();
			entity.Governorate = null;
		}
		
		private void attach_Centrals(Central entity)
		{
			this.SendPropertyChanging();
			entity.Governorate = this;
		}
		
		private void detach_Centrals(Central entity)
		{
			this.SendPropertyChanging();
			entity.Governorate = null;
		}
		
		private void attach_Customers(Customer entity)
		{
			this.SendPropertyChanging();
			entity.Governorate = this;
		}
		
		private void detach_Customers(Customer entity)
		{
			this.SendPropertyChanging();
			entity.Governorate = null;
		}
		
		private void attach_Suppliers(Supplier entity)
		{
			this.SendPropertyChanging();
			entity.Governorate = this;
		}
		
		private void detach_Suppliers(Supplier entity)
		{
			this.SendPropertyChanging();
			entity.Governorate = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.IpPackages")]
	public partial class IpPackage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _IpPackageName;
		
		private string _Notes;
		
		private EntitySet<WorkOrder> _WorkOrders;
		
		private EntitySet<WorkOrderRequest> _WorkOrderRequests;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnIpPackageNameChanging(string value);
    partial void OnIpPackageNameChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    #endregion
		
		public IpPackage()
		{
			this._WorkOrders = new EntitySet<WorkOrder>(new Action<WorkOrder>(this.attach_WorkOrders), new Action<WorkOrder>(this.detach_WorkOrders));
			this._WorkOrderRequests = new EntitySet<WorkOrderRequest>(new Action<WorkOrderRequest>(this.attach_WorkOrderRequests), new Action<WorkOrderRequest>(this.detach_WorkOrderRequests));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IpPackageName", DbType="NVarChar(255)")]
		public string IpPackageName
		{
			get
			{
				return this._IpPackageName;
			}
			set
			{
				if ((this._IpPackageName != value))
				{
					this.OnIpPackageNameChanging(value);
					this.SendPropertyChanging();
					this._IpPackageName = value;
					this.SendPropertyChanged("IpPackageName");
					this.OnIpPackageNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="IpPackage_WorkOrder", Storage="_WorkOrders", ThisKey="ID", OtherKey="IpPackageID")]
		public EntitySet<WorkOrder> WorkOrders
		{
			get
			{
				return this._WorkOrders;
			}
			set
			{
				this._WorkOrders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="IpPackage_WorkOrderRequest", Storage="_WorkOrderRequests", ThisKey="ID", OtherKey="NewIpPackageID")]
		public EntitySet<WorkOrderRequest> WorkOrderRequests
		{
			get
			{
				return this._WorkOrderRequests;
			}
			set
			{
				this._WorkOrderRequests.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_WorkOrders(WorkOrder entity)
		{
			this.SendPropertyChanging();
			entity.IpPackage = this;
		}
		
		private void detach_WorkOrders(WorkOrder entity)
		{
			this.SendPropertyChanging();
			entity.IpPackage = null;
		}
		
		private void attach_WorkOrderRequests(WorkOrderRequest entity)
		{
			this.SendPropertyChanging();
			entity.IpPackage = this;
		}
		
		private void detach_WorkOrderRequests(WorkOrderRequest entity)
		{
			this.SendPropertyChanging();
			entity.IpPackage = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.News")]
	public partial class New : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Title;
		
		private string _Details;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnDetailsChanging(string value);
    partial void OnDetailsChanged();
    #endregion
		
		public New()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(255)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Details", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Details
		{
			get
			{
				return this._Details;
			}
			set
			{
				if ((this._Details != value))
				{
					this.OnDetailsChanging(value);
					this.SendPropertyChanging();
					this._Details = value;
					this.SendPropertyChanged("Details");
					this.OnDetailsChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OutgoingTypes")]
	public partial class OutgoingType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private string _Notes;
		
		private EntitySet<OutgoingExpense> _OutgoingExpenses;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    #endregion
		
		public OutgoingType()
		{
			this._OutgoingExpenses = new EntitySet<OutgoingExpense>(new Action<OutgoingExpense>(this.attach_OutgoingExpenses), new Action<OutgoingExpense>(this.detach_OutgoingExpenses));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(400)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(MAX)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OutgoingType_OutgoingExpense", Storage="_OutgoingExpenses", ThisKey="ID", OtherKey="OutgoingTypeID")]
		public EntitySet<OutgoingExpense> OutgoingExpenses
		{
			get
			{
				return this._OutgoingExpenses;
			}
			set
			{
				this._OutgoingExpenses.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_OutgoingExpenses(OutgoingExpense entity)
		{
			this.SendPropertyChanging();
			entity.OutgoingType = this;
		}
		
		private void detach_OutgoingExpenses(OutgoingExpense entity)
		{
			this.SendPropertyChanging();
			entity.OutgoingType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PaymentTypes")]
	public partial class PaymentType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _PaymentTypeName;
		
		private System.Nullable<double> _Amount;
		
		private string _Notes;
		
		private EntitySet<WorkOrder> _WorkOrders;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnPaymentTypeNameChanging(string value);
    partial void OnPaymentTypeNameChanged();
    partial void OnAmountChanging(System.Nullable<double> value);
    partial void OnAmountChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    #endregion
		
		public PaymentType()
		{
			this._WorkOrders = new EntitySet<WorkOrder>(new Action<WorkOrder>(this.attach_WorkOrders), new Action<WorkOrder>(this.detach_WorkOrders));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentTypeName", DbType="NVarChar(255)")]
		public string PaymentTypeName
		{
			get
			{
				return this._PaymentTypeName;
			}
			set
			{
				if ((this._PaymentTypeName != value))
				{
					this.OnPaymentTypeNameChanging(value);
					this.SendPropertyChanging();
					this._PaymentTypeName = value;
					this.SendPropertyChanged("PaymentTypeName");
					this.OnPaymentTypeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Float")]
		public System.Nullable<double> Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NChar(10)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PaymentType_WorkOrder", Storage="_WorkOrders", ThisKey="ID", OtherKey="PaymentTypeID")]
		public EntitySet<WorkOrder> WorkOrders
		{
			get
			{
				return this._WorkOrders;
			}
			set
			{
				this._WorkOrders.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_WorkOrders(WorkOrder entity)
		{
			this.SendPropertyChanging();
			entity.PaymentType = this;
		}
		
		private void detach_WorkOrders(WorkOrder entity)
		{
			this.SendPropertyChanging();
			entity.PaymentType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Pricing")]
	public partial class Pricing : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _ServiceProvidersID;
		
		private System.Nullable<int> _ServicePackagesID;
		
		private System.Nullable<double> _Price;
		
		private string _Notes;
		
		private EntityRef<ServicePackage> _ServicePackage;
		
		private EntityRef<ServiceProvider> _ServiceProvider;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnServiceProvidersIDChanging(System.Nullable<int> value);
    partial void OnServiceProvidersIDChanged();
    partial void OnServicePackagesIDChanging(System.Nullable<int> value);
    partial void OnServicePackagesIDChanged();
    partial void OnPriceChanging(System.Nullable<double> value);
    partial void OnPriceChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    #endregion
		
		public Pricing()
		{
			this._ServicePackage = default(EntityRef<ServicePackage>);
			this._ServiceProvider = default(EntityRef<ServiceProvider>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceProvidersID", DbType="Int")]
		public System.Nullable<int> ServiceProvidersID
		{
			get
			{
				return this._ServiceProvidersID;
			}
			set
			{
				if ((this._ServiceProvidersID != value))
				{
					if (this._ServiceProvider.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnServiceProvidersIDChanging(value);
					this.SendPropertyChanging();
					this._ServiceProvidersID = value;
					this.SendPropertyChanged("ServiceProvidersID");
					this.OnServiceProvidersIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServicePackagesID", DbType="Int")]
		public System.Nullable<int> ServicePackagesID
		{
			get
			{
				return this._ServicePackagesID;
			}
			set
			{
				if ((this._ServicePackagesID != value))
				{
					if (this._ServicePackage.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnServicePackagesIDChanging(value);
					this.SendPropertyChanging();
					this._ServicePackagesID = value;
					this.SendPropertyChanged("ServicePackagesID");
					this.OnServicePackagesIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Float")]
		public System.Nullable<double> Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(MAX)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ServicePackage_Pricing", Storage="_ServicePackage", ThisKey="ServicePackagesID", OtherKey="ID", IsForeignKey=true)]
		public ServicePackage ServicePackage
		{
			get
			{
				return this._ServicePackage.Entity;
			}
			set
			{
				ServicePackage previousValue = this._ServicePackage.Entity;
				if (((previousValue != value) 
							|| (this._ServicePackage.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ServicePackage.Entity = null;
						previousValue.Pricings.Remove(this);
					}
					this._ServicePackage.Entity = value;
					if ((value != null))
					{
						value.Pricings.Add(this);
						this._ServicePackagesID = value.ID;
					}
					else
					{
						this._ServicePackagesID = default(Nullable<int>);
					}
					this.SendPropertyChanged("ServicePackage");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ServiceProvider_Pricing", Storage="_ServiceProvider", ThisKey="ServiceProvidersID", OtherKey="ID", IsForeignKey=true)]
		public ServiceProvider ServiceProvider
		{
			get
			{
				return this._ServiceProvider.Entity;
			}
			set
			{
				ServiceProvider previousValue = this._ServiceProvider.Entity;
				if (((previousValue != value) 
							|| (this._ServiceProvider.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ServiceProvider.Entity = null;
						previousValue.Pricings.Remove(this);
					}
					this._ServiceProvider.Entity = value;
					if ((value != null))
					{
						value.Pricings.Add(this);
						this._ServiceProvidersID = value.ID;
					}
					else
					{
						this._ServiceProvidersID = default(Nullable<int>);
					}
					this.SendPropertyChanged("ServiceProvider");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Requests")]
	public partial class Request : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _RequestName;
		
		private string _Notes;
		
		private EntitySet<RequestsNotitfication> _RequestsNotitfications;
		
		private EntitySet<WorkOrderRequest> _WorkOrderRequests;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnRequestNameChanging(string value);
    partial void OnRequestNameChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    #endregion
		
		public Request()
		{
			this._RequestsNotitfications = new EntitySet<RequestsNotitfication>(new Action<RequestsNotitfication>(this.attach_RequestsNotitfications), new Action<RequestsNotitfication>(this.detach_RequestsNotitfications));
			this._WorkOrderRequests = new EntitySet<WorkOrderRequest>(new Action<WorkOrderRequest>(this.attach_WorkOrderRequests), new Action<WorkOrderRequest>(this.detach_WorkOrderRequests));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestName", DbType="NVarChar(255)")]
		public string RequestName
		{
			get
			{
				return this._RequestName;
			}
			set
			{
				if ((this._RequestName != value))
				{
					this.OnRequestNameChanging(value);
					this.SendPropertyChanging();
					this._RequestName = value;
					this.SendPropertyChanged("RequestName");
					this.OnRequestNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_RequestsNotitfication", Storage="_RequestsNotitfications", ThisKey="ID", OtherKey="RequestId")]
		public EntitySet<RequestsNotitfication> RequestsNotitfications
		{
			get
			{
				return this._RequestsNotitfications;
			}
			set
			{
				this._RequestsNotitfications.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_WorkOrderRequest", Storage="_WorkOrderRequests", ThisKey="ID", OtherKey="RequestID")]
		public EntitySet<WorkOrderRequest> WorkOrderRequests
		{
			get
			{
				return this._WorkOrderRequests;
			}
			set
			{
				this._WorkOrderRequests.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_RequestsNotitfications(RequestsNotitfication entity)
		{
			this.SendPropertyChanging();
			entity.Request = this;
		}
		
		private void detach_RequestsNotitfications(RequestsNotitfication entity)
		{
			this.SendPropertyChanging();
			entity.Request = null;
		}
		
		private void attach_WorkOrderRequests(WorkOrderRequest entity)
		{
			this.SendPropertyChanging();
			entity.Request = this;
		}
		
		private void detach_WorkOrderRequests(WorkOrderRequest entity)
		{
			this.SendPropertyChanging();
			entity.Request = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RequestStatus")]
	public partial class RequestStatus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _RSName;
		
		private string _Notes;
		
		private EntitySet<WorkOrderRequest> _WorkOrderRequests;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnRSNameChanging(string value);
    partial void OnRSNameChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    #endregion
		
		public RequestStatus()
		{
			this._WorkOrderRequests = new EntitySet<WorkOrderRequest>(new Action<WorkOrderRequest>(this.attach_WorkOrderRequests), new Action<WorkOrderRequest>(this.detach_WorkOrderRequests));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RSName", DbType="NVarChar(255)")]
		public string RSName
		{
			get
			{
				return this._RSName;
			}
			set
			{
				if ((this._RSName != value))
				{
					this.OnRSNameChanging(value);
					this.SendPropertyChanging();
					this._RSName = value;
					this.SendPropertyChanged("RSName");
					this.OnRSNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RequestStatus_WorkOrderRequest", Storage="_WorkOrderRequests", ThisKey="ID", OtherKey="RSID")]
		public EntitySet<WorkOrderRequest> WorkOrderRequests
		{
			get
			{
				return this._WorkOrderRequests;
			}
			set
			{
				this._WorkOrderRequests.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_WorkOrderRequests(WorkOrderRequest entity)
		{
			this.SendPropertyChanging();
			entity.RequestStatus = this;
		}
		
		private void detach_WorkOrderRequests(WorkOrderRequest entity)
		{
			this.SendPropertyChanging();
			entity.RequestStatus = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ServicePackages")]
	public partial class ServicePackage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _ServicePackageName;
		
		private string _Notes;
		
		private System.Nullable<int> _ServicePackageTypeID;
		
		private int _ProviderId;
		
		private System.Nullable<bool> _Active;
		
		private decimal _PurchasePrice;
		
		private EntitySet<Pricing> _Pricings;
		
		private EntitySet<WorkOrder> _WorkOrders;
		
		private EntitySet<ResellerPackagesDiscount> _ResellerPackagesDiscounts;
		
		private EntitySet<OfferProviderPackage> _OfferProviderPackages;
		
		private EntitySet<BranchPackagesDiscount> _BranchPackagesDiscounts;
		
		private EntitySet<WorkOrderRequest> _WorkOrderRequests;
		
		private EntitySet<WorkOrderRequest> _WorkOrderRequests1;
		
		private EntityRef<ServicePackagesType> _ServicePackagesType;
		
		private EntityRef<ServiceProvider> _ServiceProvider;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnServicePackageNameChanging(string value);
    partial void OnServicePackageNameChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnServicePackageTypeIDChanging(System.Nullable<int> value);
    partial void OnServicePackageTypeIDChanged();
    partial void OnProviderIdChanging(int value);
    partial void OnProviderIdChanged();
    partial void OnActiveChanging(System.Nullable<bool> value);
    partial void OnActiveChanged();
    partial void OnPurchasePriceChanging(decimal value);
    partial void OnPurchasePriceChanged();
    #endregion
		
		public ServicePackage()
		{
			this._Pricings = new EntitySet<Pricing>(new Action<Pricing>(this.attach_Pricings), new Action<Pricing>(this.detach_Pricings));
			this._WorkOrders = new EntitySet<WorkOrder>(new Action<WorkOrder>(this.attach_WorkOrders), new Action<WorkOrder>(this.detach_WorkOrders));
			this._ResellerPackagesDiscounts = new EntitySet<ResellerPackagesDiscount>(new Action<ResellerPackagesDiscount>(this.attach_ResellerPackagesDiscounts), new Action<ResellerPackagesDiscount>(this.detach_ResellerPackagesDiscounts));
			this._OfferProviderPackages = new EntitySet<OfferProviderPackage>(new Action<OfferProviderPackage>(this.attach_OfferProviderPackages), new Action<OfferProviderPackage>(this.detach_OfferProviderPackages));
			this._BranchPackagesDiscounts = new EntitySet<BranchPackagesDiscount>(new Action<BranchPackagesDiscount>(this.attach_BranchPackagesDiscounts), new Action<BranchPackagesDiscount>(this.detach_BranchPackagesDiscounts));
			this._WorkOrderRequests = new EntitySet<WorkOrderRequest>(new Action<WorkOrderRequest>(this.attach_WorkOrderRequests), new Action<WorkOrderRequest>(this.detach_WorkOrderRequests));
			this._WorkOrderRequests1 = new EntitySet<WorkOrderRequest>(new Action<WorkOrderRequest>(this.attach_WorkOrderRequests1), new Action<WorkOrderRequest>(this.detach_WorkOrderRequests1));
			this._ServicePackagesType = default(EntityRef<ServicePackagesType>);
			this._ServiceProvider = default(EntityRef<ServiceProvider>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServicePackageName", DbType="NVarChar(255)")]
		public string ServicePackageName
		{
			get
			{
				return this._ServicePackageName;
			}
			set
			{
				if ((this._ServicePackageName != value))
				{
					this.OnServicePackageNameChanging(value);
					this.SendPropertyChanging();
					this._ServicePackageName = value;
					this.SendPropertyChanged("ServicePackageName");
					this.OnServicePackageNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServicePackageTypeID", DbType="Int")]
		public System.Nullable<int> ServicePackageTypeID
		{
			get
			{
				return this._ServicePackageTypeID;
			}
			set
			{
				if ((this._ServicePackageTypeID != value))
				{
					if (this._ServicePackagesType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnServicePackageTypeIDChanging(value);
					this.SendPropertyChanging();
					this._ServicePackageTypeID = value;
					this.SendPropertyChanged("ServicePackageTypeID");
					this.OnServicePackageTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProviderId", DbType="int")]
		public int ProviderId
		{
			get
			{
				return this._ProviderId;
			}
			set
			{
				if ((this._ProviderId != value))
				{
					if (this._ServiceProvider.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProviderIdChanging(value);
					this.SendPropertyChanging();
					this._ProviderId = value;
					this.SendPropertyChanged("ProviderId");
					this.OnProviderIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="bit")]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchasePrice", DbType="money")]
		public decimal PurchasePrice
		{
			get
			{
				return this._PurchasePrice;
			}
			set
			{
				if ((this._PurchasePrice != value))
				{
					this.OnPurchasePriceChanging(value);
					this.SendPropertyChanging();
					this._PurchasePrice = value;
					this.SendPropertyChanged("PurchasePrice");
					this.OnPurchasePriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ServicePackage_Pricing", Storage="_Pricings", ThisKey="ID", OtherKey="ServicePackagesID")]
		public EntitySet<Pricing> Pricings
		{
			get
			{
				return this._Pricings;
			}
			set
			{
				this._Pricings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ServicePackage_WorkOrder", Storage="_WorkOrders", ThisKey="ID", OtherKey="ServicePackageID")]
		public EntitySet<WorkOrder> WorkOrders
		{
			get
			{
				return this._WorkOrders;
			}
			set
			{
				this._WorkOrders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ServicePackage_ResellerPackagesDiscount", Storage="_ResellerPackagesDiscounts", ThisKey="ID", OtherKey="PackageId")]
		public EntitySet<ResellerPackagesDiscount> ResellerPackagesDiscounts
		{
			get
			{
				return this._ResellerPackagesDiscounts;
			}
			set
			{
				this._ResellerPackagesDiscounts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ServicePackage_OfferProviderPackage", Storage="_OfferProviderPackages", ThisKey="ID", OtherKey="PackageId")]
		public EntitySet<OfferProviderPackage> OfferProviderPackages
		{
			get
			{
				return this._OfferProviderPackages;
			}
			set
			{
				this._OfferProviderPackages.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ServicePackage_BranchPackagesDiscount", Storage="_BranchPackagesDiscounts", ThisKey="ID", OtherKey="PackageId")]
		public EntitySet<BranchPackagesDiscount> BranchPackagesDiscounts
		{
			get
			{
				return this._BranchPackagesDiscounts;
			}
			set
			{
				this._BranchPackagesDiscounts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ServicePackage_WorkOrderRequest", Storage="_WorkOrderRequests", ThisKey="ID", OtherKey="CurrentPackageID")]
		public EntitySet<WorkOrderRequest> WorkOrderRequests
		{
			get
			{
				return this._WorkOrderRequests;
			}
			set
			{
				this._WorkOrderRequests.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ServicePackage_WorkOrderRequest1", Storage="_WorkOrderRequests1", ThisKey="ID", OtherKey="NewPackageID")]
		public EntitySet<WorkOrderRequest> WorkOrderRequests1
		{
			get
			{
				return this._WorkOrderRequests1;
			}
			set
			{
				this._WorkOrderRequests1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ServicePackagesType_ServicePackage", Storage="_ServicePackagesType", ThisKey="ServicePackageTypeID", OtherKey="ID", IsForeignKey=true)]
		public ServicePackagesType ServicePackagesType
		{
			get
			{
				return this._ServicePackagesType.Entity;
			}
			set
			{
				ServicePackagesType previousValue = this._ServicePackagesType.Entity;
				if (((previousValue != value) 
							|| (this._ServicePackagesType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ServicePackagesType.Entity = null;
						previousValue.ServicePackages.Remove(this);
					}
					this._ServicePackagesType.Entity = value;
					if ((value != null))
					{
						value.ServicePackages.Add(this);
						this._ServicePackageTypeID = value.ID;
					}
					else
					{
						this._ServicePackageTypeID = default(Nullable<int>);
					}
					this.SendPropertyChanged("ServicePackagesType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ServiceProvider_ServicePackage", Storage="_ServiceProvider", ThisKey="ProviderId", OtherKey="ID", IsForeignKey=true)]
		public ServiceProvider ServiceProvider
		{
			get
			{
				return this._ServiceProvider.Entity;
			}
			set
			{
				ServiceProvider previousValue = this._ServiceProvider.Entity;
				if (((previousValue != value) 
							|| (this._ServiceProvider.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ServiceProvider.Entity = null;
						previousValue.ServicePackages.Remove(this);
					}
					this._ServiceProvider.Entity = value;
					if ((value != null))
					{
						value.ServicePackages.Add(this);
						this._ProviderId = value.ID;
					}
					else
					{
						this._ProviderId = default(int);
					}
					this.SendPropertyChanged("ServiceProvider");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Pricings(Pricing entity)
		{
			this.SendPropertyChanging();
			entity.ServicePackage = this;
		}
		
		private void detach_Pricings(Pricing entity)
		{
			this.SendPropertyChanging();
			entity.ServicePackage = null;
		}
		
		private void attach_WorkOrders(WorkOrder entity)
		{
			this.SendPropertyChanging();
			entity.ServicePackage = this;
		}
		
		private void detach_WorkOrders(WorkOrder entity)
		{
			this.SendPropertyChanging();
			entity.ServicePackage = null;
		}
		
		private void attach_ResellerPackagesDiscounts(ResellerPackagesDiscount entity)
		{
			this.SendPropertyChanging();
			entity.ServicePackage = this;
		}
		
		private void detach_ResellerPackagesDiscounts(ResellerPackagesDiscount entity)
		{
			this.SendPropertyChanging();
			entity.ServicePackage = null;
		}
		
		private void attach_OfferProviderPackages(OfferProviderPackage entity)
		{
			this.SendPropertyChanging();
			entity.ServicePackage = this;
		}
		
		private void detach_OfferProviderPackages(OfferProviderPackage entity)
		{
			this.SendPropertyChanging();
			entity.ServicePackage = null;
		}
		
		private void attach_BranchPackagesDiscounts(BranchPackagesDiscount entity)
		{
			this.SendPropertyChanging();
			entity.ServicePackage = this;
		}
		
		private void detach_BranchPackagesDiscounts(BranchPackagesDiscount entity)
		{
			this.SendPropertyChanging();
			entity.ServicePackage = null;
		}
		
		private void attach_WorkOrderRequests(WorkOrderRequest entity)
		{
			this.SendPropertyChanging();
			entity.ServicePackage = this;
		}
		
		private void detach_WorkOrderRequests(WorkOrderRequest entity)
		{
			this.SendPropertyChanging();
			entity.ServicePackage = null;
		}
		
		private void attach_WorkOrderRequests1(WorkOrderRequest entity)
		{
			this.SendPropertyChanging();
			entity.ServicePackage1 = this;
		}
		
		private void detach_WorkOrderRequests1(WorkOrderRequest entity)
		{
			this.SendPropertyChanging();
			entity.ServicePackage1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ServicePackagesType")]
	public partial class ServicePackagesType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _SPTName;
		
		private string _Notes;
		
		private EntitySet<BranchesDiscount> _BranchesDiscounts;
		
		private EntitySet<ServicePackage> _ServicePackages;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnSPTNameChanging(string value);
    partial void OnSPTNameChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    #endregion
		
		public ServicePackagesType()
		{
			this._BranchesDiscounts = new EntitySet<BranchesDiscount>(new Action<BranchesDiscount>(this.attach_BranchesDiscounts), new Action<BranchesDiscount>(this.detach_BranchesDiscounts));
			this._ServicePackages = new EntitySet<ServicePackage>(new Action<ServicePackage>(this.attach_ServicePackages), new Action<ServicePackage>(this.detach_ServicePackages));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SPTName", DbType="NVarChar(255)")]
		public string SPTName
		{
			get
			{
				return this._SPTName;
			}
			set
			{
				if ((this._SPTName != value))
				{
					this.OnSPTNameChanging(value);
					this.SendPropertyChanging();
					this._SPTName = value;
					this.SendPropertyChanged("SPTName");
					this.OnSPTNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ServicePackagesType_BranchesDiscount", Storage="_BranchesDiscounts", ThisKey="ID", OtherKey="ServicePackagesTypeID")]
		public EntitySet<BranchesDiscount> BranchesDiscounts
		{
			get
			{
				return this._BranchesDiscounts;
			}
			set
			{
				this._BranchesDiscounts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ServicePackagesType_ServicePackage", Storage="_ServicePackages", ThisKey="ID", OtherKey="ServicePackageTypeID")]
		public EntitySet<ServicePackage> ServicePackages
		{
			get
			{
				return this._ServicePackages;
			}
			set
			{
				this._ServicePackages.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BranchesDiscounts(BranchesDiscount entity)
		{
			this.SendPropertyChanging();
			entity.ServicePackagesType = this;
		}
		
		private void detach_BranchesDiscounts(BranchesDiscount entity)
		{
			this.SendPropertyChanging();
			entity.ServicePackagesType = null;
		}
		
		private void attach_ServicePackages(ServicePackage entity)
		{
			this.SendPropertyChanging();
			entity.ServicePackagesType = this;
		}
		
		private void detach_ServicePackages(ServicePackage entity)
		{
			this.SendPropertyChanging();
			entity.ServicePackagesType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ServiceProviders")]
	public partial class ServiceProvider : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _SPName;
		
		private string _Notes;
		
		private System.Nullable<bool> _Active;
		
		private EntitySet<BranchesDiscount> _BranchesDiscounts;
		
		private EntitySet<Pricing> _Pricings;
		
		private EntitySet<ServicePackage> _ServicePackages;
		
		private EntitySet<WorkOrderHistory> _WorkOrderHistories;
		
		private EntitySet<WorkOrder> _WorkOrders;
		
		private EntitySet<UserProvider> _UserProviders;
		
		private EntitySet<OfferProvider> _OfferProviders;
		
		private EntitySet<ResellerPackagesDiscount> _ResellerPackagesDiscounts;
		
		private EntitySet<BranchPackagesDiscount> _BranchPackagesDiscounts;
		
		private EntitySet<OptionProvider> _OptionProviders;
		
		private EntitySet<OptionInvoiceProvider> _OptionInvoiceProviders;
		
		private EntitySet<OptionSuspendProvider> _OptionSuspendProviders;
		
		private EntitySet<SPoptionReselleraccount> _SPoptionReselleraccounts;
		
		private EntitySet<OptionPortalProvider> _OptionPortalProviders;
		
		private EntitySet<DistributorProvider> _DistributorProviders;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnSPNameChanging(string value);
    partial void OnSPNameChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnActiveChanging(System.Nullable<bool> value);
    partial void OnActiveChanged();
    #endregion
		
		public ServiceProvider()
		{
			this._BranchesDiscounts = new EntitySet<BranchesDiscount>(new Action<BranchesDiscount>(this.attach_BranchesDiscounts), new Action<BranchesDiscount>(this.detach_BranchesDiscounts));
			this._Pricings = new EntitySet<Pricing>(new Action<Pricing>(this.attach_Pricings), new Action<Pricing>(this.detach_Pricings));
			this._ServicePackages = new EntitySet<ServicePackage>(new Action<ServicePackage>(this.attach_ServicePackages), new Action<ServicePackage>(this.detach_ServicePackages));
			this._WorkOrderHistories = new EntitySet<WorkOrderHistory>(new Action<WorkOrderHistory>(this.attach_WorkOrderHistories), new Action<WorkOrderHistory>(this.detach_WorkOrderHistories));
			this._WorkOrders = new EntitySet<WorkOrder>(new Action<WorkOrder>(this.attach_WorkOrders), new Action<WorkOrder>(this.detach_WorkOrders));
			this._UserProviders = new EntitySet<UserProvider>(new Action<UserProvider>(this.attach_UserProviders), new Action<UserProvider>(this.detach_UserProviders));
			this._OfferProviders = new EntitySet<OfferProvider>(new Action<OfferProvider>(this.attach_OfferProviders), new Action<OfferProvider>(this.detach_OfferProviders));
			this._ResellerPackagesDiscounts = new EntitySet<ResellerPackagesDiscount>(new Action<ResellerPackagesDiscount>(this.attach_ResellerPackagesDiscounts), new Action<ResellerPackagesDiscount>(this.detach_ResellerPackagesDiscounts));
			this._BranchPackagesDiscounts = new EntitySet<BranchPackagesDiscount>(new Action<BranchPackagesDiscount>(this.attach_BranchPackagesDiscounts), new Action<BranchPackagesDiscount>(this.detach_BranchPackagesDiscounts));
			this._OptionProviders = new EntitySet<OptionProvider>(new Action<OptionProvider>(this.attach_OptionProviders), new Action<OptionProvider>(this.detach_OptionProviders));
			this._OptionInvoiceProviders = new EntitySet<OptionInvoiceProvider>(new Action<OptionInvoiceProvider>(this.attach_OptionInvoiceProviders), new Action<OptionInvoiceProvider>(this.detach_OptionInvoiceProviders));
			this._OptionSuspendProviders = new EntitySet<OptionSuspendProvider>(new Action<OptionSuspendProvider>(this.attach_OptionSuspendProviders), new Action<OptionSuspendProvider>(this.detach_OptionSuspendProviders));
			this._SPoptionReselleraccounts = new EntitySet<SPoptionReselleraccount>(new Action<SPoptionReselleraccount>(this.attach_SPoptionReselleraccounts), new Action<SPoptionReselleraccount>(this.detach_SPoptionReselleraccounts));
			this._OptionPortalProviders = new EntitySet<OptionPortalProvider>(new Action<OptionPortalProvider>(this.attach_OptionPortalProviders), new Action<OptionPortalProvider>(this.detach_OptionPortalProviders));
			this._DistributorProviders = new EntitySet<DistributorProvider>(new Action<DistributorProvider>(this.attach_DistributorProviders), new Action<DistributorProvider>(this.detach_DistributorProviders));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SPName", DbType="NVarChar(255)")]
		public string SPName
		{
			get
			{
				return this._SPName;
			}
			set
			{
				if ((this._SPName != value))
				{
					this.OnSPNameChanging(value);
					this.SendPropertyChanging();
					this._SPName = value;
					this.SendPropertyChanged("SPName");
					this.OnSPNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="bit")]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ServiceProvider_BranchesDiscount", Storage="_BranchesDiscounts", ThisKey="ID", OtherKey="ServiceProviderID")]
		public EntitySet<BranchesDiscount> BranchesDiscounts
		{
			get
			{
				return this._BranchesDiscounts;
			}
			set
			{
				this._BranchesDiscounts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ServiceProvider_Pricing", Storage="_Pricings", ThisKey="ID", OtherKey="ServiceProvidersID")]
		public EntitySet<Pricing> Pricings
		{
			get
			{
				return this._Pricings;
			}
			set
			{
				this._Pricings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ServiceProvider_ServicePackage", Storage="_ServicePackages", ThisKey="ID", OtherKey="ProviderId")]
		public EntitySet<ServicePackage> ServicePackages
		{
			get
			{
				return this._ServicePackages;
			}
			set
			{
				this._ServicePackages.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ServiceProvider_WorkOrderHistory", Storage="_WorkOrderHistories", ThisKey="ID", OtherKey="ServiceProviderID")]
		public EntitySet<WorkOrderHistory> WorkOrderHistories
		{
			get
			{
				return this._WorkOrderHistories;
			}
			set
			{
				this._WorkOrderHistories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ServiceProvider_WorkOrder", Storage="_WorkOrders", ThisKey="ID", OtherKey="ServiceProviderID")]
		public EntitySet<WorkOrder> WorkOrders
		{
			get
			{
				return this._WorkOrders;
			}
			set
			{
				this._WorkOrders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ServiceProvider_UserProvider", Storage="_UserProviders", ThisKey="ID", OtherKey="Provider")]
		public EntitySet<UserProvider> UserProviders
		{
			get
			{
				return this._UserProviders;
			}
			set
			{
				this._UserProviders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ServiceProvider_OfferProvider", Storage="_OfferProviders", ThisKey="ID", OtherKey="ProviderId")]
		public EntitySet<OfferProvider> OfferProviders
		{
			get
			{
				return this._OfferProviders;
			}
			set
			{
				this._OfferProviders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ServiceProvider_ResellerPackagesDiscount", Storage="_ResellerPackagesDiscounts", ThisKey="ID", OtherKey="ProviderId")]
		public EntitySet<ResellerPackagesDiscount> ResellerPackagesDiscounts
		{
			get
			{
				return this._ResellerPackagesDiscounts;
			}
			set
			{
				this._ResellerPackagesDiscounts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ServiceProvider_BranchPackagesDiscount", Storage="_BranchPackagesDiscounts", ThisKey="ID", OtherKey="ProviderId")]
		public EntitySet<BranchPackagesDiscount> BranchPackagesDiscounts
		{
			get
			{
				return this._BranchPackagesDiscounts;
			}
			set
			{
				this._BranchPackagesDiscounts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ServiceProvider_OptionProvider", Storage="_OptionProviders", ThisKey="ID", OtherKey="ProviderId")]
		public EntitySet<OptionProvider> OptionProviders
		{
			get
			{
				return this._OptionProviders;
			}
			set
			{
				this._OptionProviders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ServiceProvider_OptionInvoiceProvider", Storage="_OptionInvoiceProviders", ThisKey="ID", OtherKey="ProviderId")]
		public EntitySet<OptionInvoiceProvider> OptionInvoiceProviders
		{
			get
			{
				return this._OptionInvoiceProviders;
			}
			set
			{
				this._OptionInvoiceProviders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ServiceProvider_OptionSuspendProvider", Storage="_OptionSuspendProviders", ThisKey="ID", OtherKey="ProviderId")]
		public EntitySet<OptionSuspendProvider> OptionSuspendProviders
		{
			get
			{
				return this._OptionSuspendProviders;
			}
			set
			{
				this._OptionSuspendProviders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ServiceProvider_SPoptionReselleraccount", Storage="_SPoptionReselleraccounts", ThisKey="ID", OtherKey="ProviderId")]
		public EntitySet<SPoptionReselleraccount> SPoptionReselleraccounts
		{
			get
			{
				return this._SPoptionReselleraccounts;
			}
			set
			{
				this._SPoptionReselleraccounts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ServiceProvider_OptionPortalProvider", Storage="_OptionPortalProviders", ThisKey="ID", OtherKey="PortalProvidersId")]
		public EntitySet<OptionPortalProvider> OptionPortalProviders
		{
			get
			{
				return this._OptionPortalProviders;
			}
			set
			{
				this._OptionPortalProviders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ServiceProvider_DistributorProvider", Storage="_DistributorProviders", ThisKey="ID", OtherKey="ProviderForDistributorID")]
		public EntitySet<DistributorProvider> DistributorProviders
		{
			get
			{
				return this._DistributorProviders;
			}
			set
			{
				this._DistributorProviders.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BranchesDiscounts(BranchesDiscount entity)
		{
			this.SendPropertyChanging();
			entity.ServiceProvider = this;
		}
		
		private void detach_BranchesDiscounts(BranchesDiscount entity)
		{
			this.SendPropertyChanging();
			entity.ServiceProvider = null;
		}
		
		private void attach_Pricings(Pricing entity)
		{
			this.SendPropertyChanging();
			entity.ServiceProvider = this;
		}
		
		private void detach_Pricings(Pricing entity)
		{
			this.SendPropertyChanging();
			entity.ServiceProvider = null;
		}
		
		private void attach_ServicePackages(ServicePackage entity)
		{
			this.SendPropertyChanging();
			entity.ServiceProvider = this;
		}
		
		private void detach_ServicePackages(ServicePackage entity)
		{
			this.SendPropertyChanging();
			entity.ServiceProvider = null;
		}
		
		private void attach_WorkOrderHistories(WorkOrderHistory entity)
		{
			this.SendPropertyChanging();
			entity.ServiceProvider = this;
		}
		
		private void detach_WorkOrderHistories(WorkOrderHistory entity)
		{
			this.SendPropertyChanging();
			entity.ServiceProvider = null;
		}
		
		private void attach_WorkOrders(WorkOrder entity)
		{
			this.SendPropertyChanging();
			entity.ServiceProvider = this;
		}
		
		private void detach_WorkOrders(WorkOrder entity)
		{
			this.SendPropertyChanging();
			entity.ServiceProvider = null;
		}
		
		private void attach_UserProviders(UserProvider entity)
		{
			this.SendPropertyChanging();
			entity.ServiceProvider = this;
		}
		
		private void detach_UserProviders(UserProvider entity)
		{
			this.SendPropertyChanging();
			entity.ServiceProvider = null;
		}
		
		private void attach_OfferProviders(OfferProvider entity)
		{
			this.SendPropertyChanging();
			entity.ServiceProvider = this;
		}
		
		private void detach_OfferProviders(OfferProvider entity)
		{
			this.SendPropertyChanging();
			entity.ServiceProvider = null;
		}
		
		private void attach_ResellerPackagesDiscounts(ResellerPackagesDiscount entity)
		{
			this.SendPropertyChanging();
			entity.ServiceProvider = this;
		}
		
		private void detach_ResellerPackagesDiscounts(ResellerPackagesDiscount entity)
		{
			this.SendPropertyChanging();
			entity.ServiceProvider = null;
		}
		
		private void attach_BranchPackagesDiscounts(BranchPackagesDiscount entity)
		{
			this.SendPropertyChanging();
			entity.ServiceProvider = this;
		}
		
		private void detach_BranchPackagesDiscounts(BranchPackagesDiscount entity)
		{
			this.SendPropertyChanging();
			entity.ServiceProvider = null;
		}
		
		private void attach_OptionProviders(OptionProvider entity)
		{
			this.SendPropertyChanging();
			entity.ServiceProvider = this;
		}
		
		private void detach_OptionProviders(OptionProvider entity)
		{
			this.SendPropertyChanging();
			entity.ServiceProvider = null;
		}
		
		private void attach_OptionInvoiceProviders(OptionInvoiceProvider entity)
		{
			this.SendPropertyChanging();
			entity.ServiceProvider = this;
		}
		
		private void detach_OptionInvoiceProviders(OptionInvoiceProvider entity)
		{
			this.SendPropertyChanging();
			entity.ServiceProvider = null;
		}
		
		private void attach_OptionSuspendProviders(OptionSuspendProvider entity)
		{
			this.SendPropertyChanging();
			entity.ServiceProvider = this;
		}
		
		private void detach_OptionSuspendProviders(OptionSuspendProvider entity)
		{
			this.SendPropertyChanging();
			entity.ServiceProvider = null;
		}
		
		private void attach_SPoptionReselleraccounts(SPoptionReselleraccount entity)
		{
			this.SendPropertyChanging();
			entity.ServiceProvider = this;
		}
		
		private void detach_SPoptionReselleraccounts(SPoptionReselleraccount entity)
		{
			this.SendPropertyChanging();
			entity.ServiceProvider = null;
		}
		
		private void attach_OptionPortalProviders(OptionPortalProvider entity)
		{
			this.SendPropertyChanging();
			entity.ServiceProvider = this;
		}
		
		private void detach_OptionPortalProviders(OptionPortalProvider entity)
		{
			this.SendPropertyChanging();
			entity.ServiceProvider = null;
		}
		
		private void attach_DistributorProviders(DistributorProvider entity)
		{
			this.SendPropertyChanging();
			entity.ServiceProvider = this;
		}
		
		private void detach_DistributorProviders(DistributorProvider entity)
		{
			this.SendPropertyChanging();
			entity.ServiceProvider = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Status")]
	public partial class Status : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _StatusName;
		
		private string _Notes;
		
		private EntitySet<WorkOrderStatus> _WorkOrderStatus;
		
		private EntitySet<WorkOrder> _WorkOrders;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnStatusNameChanging(string value);
    partial void OnStatusNameChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    #endregion
		
		public Status()
		{
			this._WorkOrderStatus = new EntitySet<WorkOrderStatus>(new Action<WorkOrderStatus>(this.attach_WorkOrderStatus), new Action<WorkOrderStatus>(this.detach_WorkOrderStatus));
			this._WorkOrders = new EntitySet<WorkOrder>(new Action<WorkOrder>(this.attach_WorkOrders), new Action<WorkOrder>(this.detach_WorkOrders));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusName", DbType="NVarChar(255)")]
		public string StatusName
		{
			get
			{
				return this._StatusName;
			}
			set
			{
				if ((this._StatusName != value))
				{
					this.OnStatusNameChanging(value);
					this.SendPropertyChanging();
					this._StatusName = value;
					this.SendPropertyChanged("StatusName");
					this.OnStatusNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Status_WorkOrderStatus", Storage="_WorkOrderStatus", ThisKey="ID", OtherKey="StatusID")]
		public EntitySet<WorkOrderStatus> WorkOrderStatus
		{
			get
			{
				return this._WorkOrderStatus;
			}
			set
			{
				this._WorkOrderStatus.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Status_WorkOrder", Storage="_WorkOrders", ThisKey="ID", OtherKey="WorkOrderStatusID")]
		public EntitySet<WorkOrder> WorkOrders
		{
			get
			{
				return this._WorkOrders;
			}
			set
			{
				this._WorkOrders.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_WorkOrderStatus(WorkOrderStatus entity)
		{
			this.SendPropertyChanging();
			entity.Status = this;
		}
		
		private void detach_WorkOrderStatus(WorkOrderStatus entity)
		{
			this.SendPropertyChanging();
			entity.Status = null;
		}
		
		private void attach_WorkOrders(WorkOrder entity)
		{
			this.SendPropertyChanging();
			entity.Status = this;
		}
		
		private void detach_WorkOrders(WorkOrder entity)
		{
			this.SendPropertyChanging();
			entity.Status = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TicketComments")]
	public partial class TicketComment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _TicketID;
		
		private System.Nullable<int> _TicketStatusID;
		
		private System.Nullable<int> _UserID;
		
		private System.Nullable<System.DateTime> _CommentDate;
		
		private string _Comment;
		
		private EntityRef<Ticket> _Ticket;
		
		private EntityRef<TicketStatus> _TicketStatus;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTicketIDChanging(System.Nullable<int> value);
    partial void OnTicketIDChanged();
    partial void OnTicketStatusIDChanging(System.Nullable<int> value);
    partial void OnTicketStatusIDChanged();
    partial void OnUserIDChanging(System.Nullable<int> value);
    partial void OnUserIDChanged();
    partial void OnCommentDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCommentDateChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    #endregion
		
		public TicketComment()
		{
			this._Ticket = default(EntityRef<Ticket>);
			this._TicketStatus = default(EntityRef<TicketStatus>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TicketID", DbType="Int")]
		public System.Nullable<int> TicketID
		{
			get
			{
				return this._TicketID;
			}
			set
			{
				if ((this._TicketID != value))
				{
					if (this._Ticket.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTicketIDChanging(value);
					this.SendPropertyChanging();
					this._TicketID = value;
					this.SendPropertyChanged("TicketID");
					this.OnTicketIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TicketStatusID", DbType="Int")]
		public System.Nullable<int> TicketStatusID
		{
			get
			{
				return this._TicketStatusID;
			}
			set
			{
				if ((this._TicketStatusID != value))
				{
					if (this._TicketStatus.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTicketStatusIDChanging(value);
					this.SendPropertyChanging();
					this._TicketStatusID = value;
					this.SendPropertyChanged("TicketStatusID");
					this.OnTicketStatusIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int")]
		public System.Nullable<int> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommentDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CommentDate
		{
			get
			{
				return this._CommentDate;
			}
			set
			{
				if ((this._CommentDate != value))
				{
					this.OnCommentDateChanging(value);
					this.SendPropertyChanging();
					this._CommentDate = value;
					this.SendPropertyChanged("CommentDate");
					this.OnCommentDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(MAX)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ticket_TicketComment", Storage="_Ticket", ThisKey="TicketID", OtherKey="ID", IsForeignKey=true)]
		public Ticket Ticket
		{
			get
			{
				return this._Ticket.Entity;
			}
			set
			{
				Ticket previousValue = this._Ticket.Entity;
				if (((previousValue != value) 
							|| (this._Ticket.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Ticket.Entity = null;
						previousValue.TicketComments.Remove(this);
					}
					this._Ticket.Entity = value;
					if ((value != null))
					{
						value.TicketComments.Add(this);
						this._TicketID = value.ID;
					}
					else
					{
						this._TicketID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Ticket");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TicketStatus_TicketComment", Storage="_TicketStatus", ThisKey="TicketStatusID", OtherKey="ID", IsForeignKey=true)]
		public TicketStatus TicketStatus
		{
			get
			{
				return this._TicketStatus.Entity;
			}
			set
			{
				TicketStatus previousValue = this._TicketStatus.Entity;
				if (((previousValue != value) 
							|| (this._TicketStatus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TicketStatus.Entity = null;
						previousValue.TicketComments.Remove(this);
					}
					this._TicketStatus.Entity = value;
					if ((value != null))
					{
						value.TicketComments.Add(this);
						this._TicketStatusID = value.ID;
					}
					else
					{
						this._TicketStatusID = default(Nullable<int>);
					}
					this.SendPropertyChanged("TicketStatus");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_TicketComment", Storage="_User", ThisKey="UserID", OtherKey="ID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.TicketComments.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.TicketComments.Add(this);
						this._UserID = value.ID;
					}
					else
					{
						this._UserID = default(Nullable<int>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TicketReasons")]
	public partial class TicketReason : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Title;
		
		private string _Notes;
		
		private EntitySet<Ticket> _Tickets;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    #endregion
		
		public TicketReason()
		{
			this._Tickets = new EntitySet<Ticket>(new Action<Ticket>(this.attach_Tickets), new Action<Ticket>(this.detach_Tickets));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(255)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TicketReason_Ticket", Storage="_Tickets", ThisKey="ID", OtherKey="ReasonID")]
		public EntitySet<Ticket> Tickets
		{
			get
			{
				return this._Tickets;
			}
			set
			{
				this._Tickets.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Tickets(Ticket entity)
		{
			this.SendPropertyChanging();
			entity.TicketReason = this;
		}
		
		private void detach_Tickets(Ticket entity)
		{
			this.SendPropertyChanging();
			entity.TicketReason = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tickets")]
	public partial class Ticket : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _ReasonID;
		
		private string _Details;
		
		private System.Nullable<int> _StatusID;
		
		private System.Nullable<int> _UserID;
		
		private System.Nullable<int> _WorkOrderID;
		
		private string _ProviderTicketNo;
		
		private System.Nullable<System.DateTime> _TicketDate;
		
		private EntitySet<TicketComment> _TicketComments;
		
		private EntityRef<TicketReason> _TicketReason;
		
		private EntityRef<TicketStatus> _TicketStatus;
		
		private EntityRef<User> _User;
		
		private EntityRef<WorkOrder> _WorkOrder;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnReasonIDChanging(System.Nullable<int> value);
    partial void OnReasonIDChanged();
    partial void OnDetailsChanging(string value);
    partial void OnDetailsChanged();
    partial void OnStatusIDChanging(System.Nullable<int> value);
    partial void OnStatusIDChanged();
    partial void OnUserIDChanging(System.Nullable<int> value);
    partial void OnUserIDChanged();
    partial void OnWorkOrderIDChanging(System.Nullable<int> value);
    partial void OnWorkOrderIDChanged();
    partial void OnProviderTicketNoChanging(string value);
    partial void OnProviderTicketNoChanged();
    partial void OnTicketDateChanging(System.Nullable<System.DateTime> value);
    partial void OnTicketDateChanged();
    #endregion
		
		public Ticket()
		{
			this._TicketComments = new EntitySet<TicketComment>(new Action<TicketComment>(this.attach_TicketComments), new Action<TicketComment>(this.detach_TicketComments));
			this._TicketReason = default(EntityRef<TicketReason>);
			this._TicketStatus = default(EntityRef<TicketStatus>);
			this._User = default(EntityRef<User>);
			this._WorkOrder = default(EntityRef<WorkOrder>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReasonID", DbType="Int")]
		public System.Nullable<int> ReasonID
		{
			get
			{
				return this._ReasonID;
			}
			set
			{
				if ((this._ReasonID != value))
				{
					if (this._TicketReason.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnReasonIDChanging(value);
					this.SendPropertyChanging();
					this._ReasonID = value;
					this.SendPropertyChanged("ReasonID");
					this.OnReasonIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Details", DbType="NVarChar(MAX)")]
		public string Details
		{
			get
			{
				return this._Details;
			}
			set
			{
				if ((this._Details != value))
				{
					this.OnDetailsChanging(value);
					this.SendPropertyChanging();
					this._Details = value;
					this.SendPropertyChanged("Details");
					this.OnDetailsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusID", DbType="Int")]
		public System.Nullable<int> StatusID
		{
			get
			{
				return this._StatusID;
			}
			set
			{
				if ((this._StatusID != value))
				{
					if (this._TicketStatus.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStatusIDChanging(value);
					this.SendPropertyChanging();
					this._StatusID = value;
					this.SendPropertyChanged("StatusID");
					this.OnStatusIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int")]
		public System.Nullable<int> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkOrderID", DbType="Int")]
		public System.Nullable<int> WorkOrderID
		{
			get
			{
				return this._WorkOrderID;
			}
			set
			{
				if ((this._WorkOrderID != value))
				{
					if (this._WorkOrder.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWorkOrderIDChanging(value);
					this.SendPropertyChanging();
					this._WorkOrderID = value;
					this.SendPropertyChanged("WorkOrderID");
					this.OnWorkOrderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProviderTicketNo", DbType="NVarChar(255)")]
		public string ProviderTicketNo
		{
			get
			{
				return this._ProviderTicketNo;
			}
			set
			{
				if ((this._ProviderTicketNo != value))
				{
					this.OnProviderTicketNoChanging(value);
					this.SendPropertyChanging();
					this._ProviderTicketNo = value;
					this.SendPropertyChanged("ProviderTicketNo");
					this.OnProviderTicketNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TicketDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> TicketDate
		{
			get
			{
				return this._TicketDate;
			}
			set
			{
				if ((this._TicketDate != value))
				{
					this.OnTicketDateChanging(value);
					this.SendPropertyChanging();
					this._TicketDate = value;
					this.SendPropertyChanged("TicketDate");
					this.OnTicketDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ticket_TicketComment", Storage="_TicketComments", ThisKey="ID", OtherKey="TicketID")]
		public EntitySet<TicketComment> TicketComments
		{
			get
			{
				return this._TicketComments;
			}
			set
			{
				this._TicketComments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TicketReason_Ticket", Storage="_TicketReason", ThisKey="ReasonID", OtherKey="ID", IsForeignKey=true)]
		public TicketReason TicketReason
		{
			get
			{
				return this._TicketReason.Entity;
			}
			set
			{
				TicketReason previousValue = this._TicketReason.Entity;
				if (((previousValue != value) 
							|| (this._TicketReason.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TicketReason.Entity = null;
						previousValue.Tickets.Remove(this);
					}
					this._TicketReason.Entity = value;
					if ((value != null))
					{
						value.Tickets.Add(this);
						this._ReasonID = value.ID;
					}
					else
					{
						this._ReasonID = default(Nullable<int>);
					}
					this.SendPropertyChanged("TicketReason");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TicketStatus_Ticket", Storage="_TicketStatus", ThisKey="StatusID", OtherKey="ID", IsForeignKey=true)]
		public TicketStatus TicketStatus
		{
			get
			{
				return this._TicketStatus.Entity;
			}
			set
			{
				TicketStatus previousValue = this._TicketStatus.Entity;
				if (((previousValue != value) 
							|| (this._TicketStatus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TicketStatus.Entity = null;
						previousValue.Tickets.Remove(this);
					}
					this._TicketStatus.Entity = value;
					if ((value != null))
					{
						value.Tickets.Add(this);
						this._StatusID = value.ID;
					}
					else
					{
						this._StatusID = default(Nullable<int>);
					}
					this.SendPropertyChanged("TicketStatus");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Ticket", Storage="_User", ThisKey="UserID", OtherKey="ID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Tickets.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Tickets.Add(this);
						this._UserID = value.ID;
					}
					else
					{
						this._UserID = default(Nullable<int>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WorkOrder_Ticket", Storage="_WorkOrder", ThisKey="WorkOrderID", OtherKey="ID", IsForeignKey=true)]
		public WorkOrder WorkOrder
		{
			get
			{
				return this._WorkOrder.Entity;
			}
			set
			{
				WorkOrder previousValue = this._WorkOrder.Entity;
				if (((previousValue != value) 
							|| (this._WorkOrder.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WorkOrder.Entity = null;
						previousValue.Tickets.Remove(this);
					}
					this._WorkOrder.Entity = value;
					if ((value != null))
					{
						value.Tickets.Add(this);
						this._WorkOrderID = value.ID;
					}
					else
					{
						this._WorkOrderID = default(Nullable<int>);
					}
					this.SendPropertyChanged("WorkOrder");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TicketComments(TicketComment entity)
		{
			this.SendPropertyChanging();
			entity.Ticket = this;
		}
		
		private void detach_TicketComments(TicketComment entity)
		{
			this.SendPropertyChanging();
			entity.Ticket = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TicketStatus")]
	public partial class TicketStatus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _StatusName;
		
		private string _Notes;
		
		private EntitySet<TicketComment> _TicketComments;
		
		private EntitySet<Ticket> _Tickets;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnStatusNameChanging(string value);
    partial void OnStatusNameChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    #endregion
		
		public TicketStatus()
		{
			this._TicketComments = new EntitySet<TicketComment>(new Action<TicketComment>(this.attach_TicketComments), new Action<TicketComment>(this.detach_TicketComments));
			this._Tickets = new EntitySet<Ticket>(new Action<Ticket>(this.attach_Tickets), new Action<Ticket>(this.detach_Tickets));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusName", DbType="NVarChar(255)")]
		public string StatusName
		{
			get
			{
				return this._StatusName;
			}
			set
			{
				if ((this._StatusName != value))
				{
					this.OnStatusNameChanging(value);
					this.SendPropertyChanging();
					this._StatusName = value;
					this.SendPropertyChanged("StatusName");
					this.OnStatusNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TicketStatus_TicketComment", Storage="_TicketComments", ThisKey="ID", OtherKey="TicketStatusID")]
		public EntitySet<TicketComment> TicketComments
		{
			get
			{
				return this._TicketComments;
			}
			set
			{
				this._TicketComments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TicketStatus_Ticket", Storage="_Tickets", ThisKey="ID", OtherKey="StatusID")]
		public EntitySet<Ticket> Tickets
		{
			get
			{
				return this._Tickets;
			}
			set
			{
				this._Tickets.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TicketComments(TicketComment entity)
		{
			this.SendPropertyChanging();
			entity.TicketStatus = this;
		}
		
		private void detach_TicketComments(TicketComment entity)
		{
			this.SendPropertyChanging();
			entity.TicketStatus = null;
		}
		
		private void attach_Tickets(Ticket entity)
		{
			this.SendPropertyChanging();
			entity.TicketStatus = this;
		}
		
		private void detach_Tickets(Ticket entity)
		{
			this.SendPropertyChanging();
			entity.TicketStatus = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Users")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _UserName;
		
		private string _UserPhone;
		
		private string _UserMobile;
		
		private string _UserAddress;
		
		private string _UserEmail;
		
		private System.Nullable<double> _OpeningBalance;
		
		private System.Nullable<int> _DiscountPercentForLimited;
		
		private System.Nullable<int> _DiscountPercentForUnlimited;
		
		private string _LoginName;
		
		private string _LoginPassword;
		
		private System.Nullable<int> _GroupID;
		
		private string _Notes;
		
		private string _Image;
		
		private System.Nullable<int> _BranchID;
		
		private System.Nullable<bool> _IsAccountStopped;
		
		private string _Ip;
		
		private System.Nullable<int> _GovernorateId;
		
		private System.Nullable<int> _AccountmanagerId;
		
		private System.Nullable<int> _ManageRequestPrivilege;
		
		private EntitySet<Branch> _Branches;
		
		private EntitySet<WorkOrderStatus> _WorkOrderStatus;
		
		private EntitySet<TicketComment> _TicketComments;
		
		private EntitySet<Ticket> _Tickets;
		
		private EntitySet<WorkOrderHistory> _WorkOrderHistories;
		
		private EntitySet<WorkOrderHistory> _WorkOrderHistories1;
		
		private EntitySet<WorkOrder> _WorkOrders;
		
		private EntitySet<WorkOrder> _WorkOrders1;
		
		private EntitySet<UserBranch> _UserBranches;
		
		private EntitySet<ResellerRouter> _ResellerRouters;
		
		private EntitySet<Router> _Routers;
		
		private EntitySet<WorkOrderRouter> _WorkOrderRouters;
		
		private EntitySet<UserCulture> _UserCultures;
		
		private EntitySet<Message> _Messages;
		
		private EntitySet<Message> _Messages1;
		
		private EntitySet<ReceiptCnfg> _ReceiptCnfgs;
		
		private EntitySet<UserProvider> _UserProviders;
		
		private EntitySet<OfferReseller> _OfferResellers;
		
		private EntitySet<Reminder> _Reminders;
		
		private EntitySet<ResellerPackagesDiscount> _ResellerPackagesDiscounts;
		
		private EntitySet<Demand> _Demands;
		
		private EntitySet<OutgoingExpense> _OutgoingExpenses;
		
		private EntitySet<WorkOrderNote> _WorkOrderNotes;
		
		private EntitySet<WorkOrderNote> _WorkOrderNotes1;
		
		private EntitySet<ResellerAttachment> _ResellerAttachments;
		
		private EntitySet<ResellerCreditsVoice> _ResellerCreditsVoices;
		
		private EntitySet<ResellerCreditsVoice> _ResellerCreditsVoices1;
		
		private EntitySet<UpdatedResellerB> _UpdatedResellerBs;
		
		private EntitySet<UpdatedResellerB> _UpdatedResellerBs1;
		
		private EntitySet<UpdatedResellerPayment> _UpdatedResellerPayments;
		
		private EntitySet<RechargeClientRequest> _RechargeClientRequests;
		
		private EntitySet<BranchCreditVoice> _BranchCreditVoices;
		
		private EntitySet<ResellerCredit> _ResellerCredits;
		
		private EntitySet<ResellerCredit> _ResellerCredits1;
		
		private EntitySet<RechargeRequest> _RechargeRequests;
		
		private EntitySet<BranchCredit> _BranchCredits;
		
		private EntitySet<CenterCredit> _CenterCredits;
		
		private EntitySet<CenterCredit> _CenterCredits1;
		
		private EntitySet<BoxCredit> _BoxCredits;
		
		private EntitySet<IncomingExpense> _IncomingExpenses;
		
		private EntitySet<CustomerPayment> _CustomerPayments;
		
		private EntitySet<UserSave> _UserSaves;
		
		private EntitySet<UserSavesHistory> _UserSavesHistories;
		
		private EntitySet<CallMessage> _CallMessages;
		
		private EntitySet<PayingCustomersReseller> _PayingCustomersResellers;
		
		private EntitySet<UsersTransaction> _UsersTransactions;
		
		private EntitySet<UsersTransaction> _UsersTransactions1;
		
		private EntitySet<RequestDateHistory> _RequestDateHistories;
		
		private EntitySet<Account> _Accounts;
		
		private EntitySet<Phone> _Phones;
		
		private EntitySet<Calender> _Calenders;
		
		private EntitySet<ResellerTransformationRequest> _ResellerTransformationRequests;
		
		private EntitySet<ResellerTransformationRequest> _ResellerTransformationRequests1;
		
		private EntitySet<WorkOrderCredit> _WorkOrderCredits;
		
		private EntitySet<PersonalEmail> _PersonalEmails;
		
		private EntitySet<RecieveRouter> _RecieveRouters;
		
		private EntitySet<RecieveRouter> _RecieveRouters1;
		
		private EntitySet<@event> _events;
		
		private EntitySet<DisCard> _DisCards;
		
		private EntitySet<RequestsNotitfication> _RequestsNotitfications;
		
		private EntitySet<BranchTransformationRequest> _BranchTransformationRequests;
		
		private EntitySet<ResellerUnpaidDemandComment> _ResellerUnpaidDemandComments;
		
		private EntitySet<BranchInvoiceComment> _BranchInvoiceComments;
		
		private EntitySet<DeletedCustomersHistory> _DeletedCustomersHistories;
		
		private EntitySet<DistributorPaymentRecord> _DistributorPaymentRecords;
		
		private EntitySet<ResellerDistributorCommision> _ResellerDistributorCommisions;
		
		private EntitySet<UserTracking> _UserTrackings;
		
		private EntitySet<WorkOrderRequest> _WorkOrderRequests;
		
		private EntitySet<WorkOrderRequest> _WorkOrderRequests1;
		
		private EntitySet<TransferBetweenSavesRequest> _TransferBetweenSavesRequests;
		
		private EntitySet<TransferBetweenSavesRequest> _TransferBetweenSavesRequests1;
		
		private EntitySet<Option> _Options;
		
		private EntityRef<Branch> _Branch;
		
		private EntityRef<Group> _Group;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnUserPhoneChanging(string value);
    partial void OnUserPhoneChanged();
    partial void OnUserMobileChanging(string value);
    partial void OnUserMobileChanged();
    partial void OnUserAddressChanging(string value);
    partial void OnUserAddressChanged();
    partial void OnUserEmailChanging(string value);
    partial void OnUserEmailChanged();
    partial void OnOpeningBalanceChanging(System.Nullable<double> value);
    partial void OnOpeningBalanceChanged();
    partial void OnDiscountPercentForLimitedChanging(System.Nullable<int> value);
    partial void OnDiscountPercentForLimitedChanged();
    partial void OnDiscountPercentForUnlimitedChanging(System.Nullable<int> value);
    partial void OnDiscountPercentForUnlimitedChanged();
    partial void OnLoginNameChanging(string value);
    partial void OnLoginNameChanged();
    partial void OnLoginPasswordChanging(string value);
    partial void OnLoginPasswordChanged();
    partial void OnGroupIDChanging(System.Nullable<int> value);
    partial void OnGroupIDChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnImageChanging(string value);
    partial void OnImageChanged();
    partial void OnBranchIDChanging(System.Nullable<int> value);
    partial void OnBranchIDChanged();
    partial void OnIsAccountStoppedChanging(System.Nullable<bool> value);
    partial void OnIsAccountStoppedChanged();
    partial void OnIpChanging(string value);
    partial void OnIpChanged();
    partial void OnGovernorateIdChanging(System.Nullable<int> value);
    partial void OnGovernorateIdChanged();
    partial void OnAccountmanagerIdChanging(System.Nullable<int> value);
    partial void OnAccountmanagerIdChanged();
    partial void OnManageRequestPrivilegeChanging(System.Nullable<int> value);
    partial void OnManageRequestPrivilegeChanged();
    #endregion
		
		public User()
		{
			this._Branches = new EntitySet<Branch>(new Action<Branch>(this.attach_Branches), new Action<Branch>(this.detach_Branches));
			this._WorkOrderStatus = new EntitySet<WorkOrderStatus>(new Action<WorkOrderStatus>(this.attach_WorkOrderStatus), new Action<WorkOrderStatus>(this.detach_WorkOrderStatus));
			this._TicketComments = new EntitySet<TicketComment>(new Action<TicketComment>(this.attach_TicketComments), new Action<TicketComment>(this.detach_TicketComments));
			this._Tickets = new EntitySet<Ticket>(new Action<Ticket>(this.attach_Tickets), new Action<Ticket>(this.detach_Tickets));
			this._WorkOrderHistories = new EntitySet<WorkOrderHistory>(new Action<WorkOrderHistory>(this.attach_WorkOrderHistories), new Action<WorkOrderHistory>(this.detach_WorkOrderHistories));
			this._WorkOrderHistories1 = new EntitySet<WorkOrderHistory>(new Action<WorkOrderHistory>(this.attach_WorkOrderHistories1), new Action<WorkOrderHistory>(this.detach_WorkOrderHistories1));
			this._WorkOrders = new EntitySet<WorkOrder>(new Action<WorkOrder>(this.attach_WorkOrders), new Action<WorkOrder>(this.detach_WorkOrders));
			this._WorkOrders1 = new EntitySet<WorkOrder>(new Action<WorkOrder>(this.attach_WorkOrders1), new Action<WorkOrder>(this.detach_WorkOrders1));
			this._UserBranches = new EntitySet<UserBranch>(new Action<UserBranch>(this.attach_UserBranches), new Action<UserBranch>(this.detach_UserBranches));
			this._ResellerRouters = new EntitySet<ResellerRouter>(new Action<ResellerRouter>(this.attach_ResellerRouters), new Action<ResellerRouter>(this.detach_ResellerRouters));
			this._Routers = new EntitySet<Router>(new Action<Router>(this.attach_Routers), new Action<Router>(this.detach_Routers));
			this._WorkOrderRouters = new EntitySet<WorkOrderRouter>(new Action<WorkOrderRouter>(this.attach_WorkOrderRouters), new Action<WorkOrderRouter>(this.detach_WorkOrderRouters));
			this._UserCultures = new EntitySet<UserCulture>(new Action<UserCulture>(this.attach_UserCultures), new Action<UserCulture>(this.detach_UserCultures));
			this._Messages = new EntitySet<Message>(new Action<Message>(this.attach_Messages), new Action<Message>(this.detach_Messages));
			this._Messages1 = new EntitySet<Message>(new Action<Message>(this.attach_Messages1), new Action<Message>(this.detach_Messages1));
			this._ReceiptCnfgs = new EntitySet<ReceiptCnfg>(new Action<ReceiptCnfg>(this.attach_ReceiptCnfgs), new Action<ReceiptCnfg>(this.detach_ReceiptCnfgs));
			this._UserProviders = new EntitySet<UserProvider>(new Action<UserProvider>(this.attach_UserProviders), new Action<UserProvider>(this.detach_UserProviders));
			this._OfferResellers = new EntitySet<OfferReseller>(new Action<OfferReseller>(this.attach_OfferResellers), new Action<OfferReseller>(this.detach_OfferResellers));
			this._Reminders = new EntitySet<Reminder>(new Action<Reminder>(this.attach_Reminders), new Action<Reminder>(this.detach_Reminders));
			this._ResellerPackagesDiscounts = new EntitySet<ResellerPackagesDiscount>(new Action<ResellerPackagesDiscount>(this.attach_ResellerPackagesDiscounts), new Action<ResellerPackagesDiscount>(this.detach_ResellerPackagesDiscounts));
			this._Demands = new EntitySet<Demand>(new Action<Demand>(this.attach_Demands), new Action<Demand>(this.detach_Demands));
			this._OutgoingExpenses = new EntitySet<OutgoingExpense>(new Action<OutgoingExpense>(this.attach_OutgoingExpenses), new Action<OutgoingExpense>(this.detach_OutgoingExpenses));
			this._WorkOrderNotes = new EntitySet<WorkOrderNote>(new Action<WorkOrderNote>(this.attach_WorkOrderNotes), new Action<WorkOrderNote>(this.detach_WorkOrderNotes));
			this._WorkOrderNotes1 = new EntitySet<WorkOrderNote>(new Action<WorkOrderNote>(this.attach_WorkOrderNotes1), new Action<WorkOrderNote>(this.detach_WorkOrderNotes1));
			this._ResellerAttachments = new EntitySet<ResellerAttachment>(new Action<ResellerAttachment>(this.attach_ResellerAttachments), new Action<ResellerAttachment>(this.detach_ResellerAttachments));
			this._ResellerCreditsVoices = new EntitySet<ResellerCreditsVoice>(new Action<ResellerCreditsVoice>(this.attach_ResellerCreditsVoices), new Action<ResellerCreditsVoice>(this.detach_ResellerCreditsVoices));
			this._ResellerCreditsVoices1 = new EntitySet<ResellerCreditsVoice>(new Action<ResellerCreditsVoice>(this.attach_ResellerCreditsVoices1), new Action<ResellerCreditsVoice>(this.detach_ResellerCreditsVoices1));
			this._UpdatedResellerBs = new EntitySet<UpdatedResellerB>(new Action<UpdatedResellerB>(this.attach_UpdatedResellerBs), new Action<UpdatedResellerB>(this.detach_UpdatedResellerBs));
			this._UpdatedResellerBs1 = new EntitySet<UpdatedResellerB>(new Action<UpdatedResellerB>(this.attach_UpdatedResellerBs1), new Action<UpdatedResellerB>(this.detach_UpdatedResellerBs1));
			this._UpdatedResellerPayments = new EntitySet<UpdatedResellerPayment>(new Action<UpdatedResellerPayment>(this.attach_UpdatedResellerPayments), new Action<UpdatedResellerPayment>(this.detach_UpdatedResellerPayments));
			this._RechargeClientRequests = new EntitySet<RechargeClientRequest>(new Action<RechargeClientRequest>(this.attach_RechargeClientRequests), new Action<RechargeClientRequest>(this.detach_RechargeClientRequests));
			this._BranchCreditVoices = new EntitySet<BranchCreditVoice>(new Action<BranchCreditVoice>(this.attach_BranchCreditVoices), new Action<BranchCreditVoice>(this.detach_BranchCreditVoices));
			this._ResellerCredits = new EntitySet<ResellerCredit>(new Action<ResellerCredit>(this.attach_ResellerCredits), new Action<ResellerCredit>(this.detach_ResellerCredits));
			this._ResellerCredits1 = new EntitySet<ResellerCredit>(new Action<ResellerCredit>(this.attach_ResellerCredits1), new Action<ResellerCredit>(this.detach_ResellerCredits1));
			this._RechargeRequests = new EntitySet<RechargeRequest>(new Action<RechargeRequest>(this.attach_RechargeRequests), new Action<RechargeRequest>(this.detach_RechargeRequests));
			this._BranchCredits = new EntitySet<BranchCredit>(new Action<BranchCredit>(this.attach_BranchCredits), new Action<BranchCredit>(this.detach_BranchCredits));
			this._CenterCredits = new EntitySet<CenterCredit>(new Action<CenterCredit>(this.attach_CenterCredits), new Action<CenterCredit>(this.detach_CenterCredits));
			this._CenterCredits1 = new EntitySet<CenterCredit>(new Action<CenterCredit>(this.attach_CenterCredits1), new Action<CenterCredit>(this.detach_CenterCredits1));
			this._BoxCredits = new EntitySet<BoxCredit>(new Action<BoxCredit>(this.attach_BoxCredits), new Action<BoxCredit>(this.detach_BoxCredits));
			this._IncomingExpenses = new EntitySet<IncomingExpense>(new Action<IncomingExpense>(this.attach_IncomingExpenses), new Action<IncomingExpense>(this.detach_IncomingExpenses));
			this._CustomerPayments = new EntitySet<CustomerPayment>(new Action<CustomerPayment>(this.attach_CustomerPayments), new Action<CustomerPayment>(this.detach_CustomerPayments));
			this._UserSaves = new EntitySet<UserSave>(new Action<UserSave>(this.attach_UserSaves), new Action<UserSave>(this.detach_UserSaves));
			this._UserSavesHistories = new EntitySet<UserSavesHistory>(new Action<UserSavesHistory>(this.attach_UserSavesHistories), new Action<UserSavesHistory>(this.detach_UserSavesHistories));
			this._CallMessages = new EntitySet<CallMessage>(new Action<CallMessage>(this.attach_CallMessages), new Action<CallMessage>(this.detach_CallMessages));
			this._PayingCustomersResellers = new EntitySet<PayingCustomersReseller>(new Action<PayingCustomersReseller>(this.attach_PayingCustomersResellers), new Action<PayingCustomersReseller>(this.detach_PayingCustomersResellers));
			this._UsersTransactions = new EntitySet<UsersTransaction>(new Action<UsersTransaction>(this.attach_UsersTransactions), new Action<UsersTransaction>(this.detach_UsersTransactions));
			this._UsersTransactions1 = new EntitySet<UsersTransaction>(new Action<UsersTransaction>(this.attach_UsersTransactions1), new Action<UsersTransaction>(this.detach_UsersTransactions1));
			this._RequestDateHistories = new EntitySet<RequestDateHistory>(new Action<RequestDateHistory>(this.attach_RequestDateHistories), new Action<RequestDateHistory>(this.detach_RequestDateHistories));
			this._Accounts = new EntitySet<Account>(new Action<Account>(this.attach_Accounts), new Action<Account>(this.detach_Accounts));
			this._Phones = new EntitySet<Phone>(new Action<Phone>(this.attach_Phones), new Action<Phone>(this.detach_Phones));
			this._Calenders = new EntitySet<Calender>(new Action<Calender>(this.attach_Calenders), new Action<Calender>(this.detach_Calenders));
			this._ResellerTransformationRequests = new EntitySet<ResellerTransformationRequest>(new Action<ResellerTransformationRequest>(this.attach_ResellerTransformationRequests), new Action<ResellerTransformationRequest>(this.detach_ResellerTransformationRequests));
			this._ResellerTransformationRequests1 = new EntitySet<ResellerTransformationRequest>(new Action<ResellerTransformationRequest>(this.attach_ResellerTransformationRequests1), new Action<ResellerTransformationRequest>(this.detach_ResellerTransformationRequests1));
			this._WorkOrderCredits = new EntitySet<WorkOrderCredit>(new Action<WorkOrderCredit>(this.attach_WorkOrderCredits), new Action<WorkOrderCredit>(this.detach_WorkOrderCredits));
			this._PersonalEmails = new EntitySet<PersonalEmail>(new Action<PersonalEmail>(this.attach_PersonalEmails), new Action<PersonalEmail>(this.detach_PersonalEmails));
			this._RecieveRouters = new EntitySet<RecieveRouter>(new Action<RecieveRouter>(this.attach_RecieveRouters), new Action<RecieveRouter>(this.detach_RecieveRouters));
			this._RecieveRouters1 = new EntitySet<RecieveRouter>(new Action<RecieveRouter>(this.attach_RecieveRouters1), new Action<RecieveRouter>(this.detach_RecieveRouters1));
			this._events = new EntitySet<@event>(new Action<@event>(this.attach_events), new Action<@event>(this.detach_events));
			this._DisCards = new EntitySet<DisCard>(new Action<DisCard>(this.attach_DisCards), new Action<DisCard>(this.detach_DisCards));
			this._RequestsNotitfications = new EntitySet<RequestsNotitfication>(new Action<RequestsNotitfication>(this.attach_RequestsNotitfications), new Action<RequestsNotitfication>(this.detach_RequestsNotitfications));
			this._BranchTransformationRequests = new EntitySet<BranchTransformationRequest>(new Action<BranchTransformationRequest>(this.attach_BranchTransformationRequests), new Action<BranchTransformationRequest>(this.detach_BranchTransformationRequests));
			this._ResellerUnpaidDemandComments = new EntitySet<ResellerUnpaidDemandComment>(new Action<ResellerUnpaidDemandComment>(this.attach_ResellerUnpaidDemandComments), new Action<ResellerUnpaidDemandComment>(this.detach_ResellerUnpaidDemandComments));
			this._BranchInvoiceComments = new EntitySet<BranchInvoiceComment>(new Action<BranchInvoiceComment>(this.attach_BranchInvoiceComments), new Action<BranchInvoiceComment>(this.detach_BranchInvoiceComments));
			this._DeletedCustomersHistories = new EntitySet<DeletedCustomersHistory>(new Action<DeletedCustomersHistory>(this.attach_DeletedCustomersHistories), new Action<DeletedCustomersHistory>(this.detach_DeletedCustomersHistories));
			this._DistributorPaymentRecords = new EntitySet<DistributorPaymentRecord>(new Action<DistributorPaymentRecord>(this.attach_DistributorPaymentRecords), new Action<DistributorPaymentRecord>(this.detach_DistributorPaymentRecords));
			this._ResellerDistributorCommisions = new EntitySet<ResellerDistributorCommision>(new Action<ResellerDistributorCommision>(this.attach_ResellerDistributorCommisions), new Action<ResellerDistributorCommision>(this.detach_ResellerDistributorCommisions));
			this._UserTrackings = new EntitySet<UserTracking>(new Action<UserTracking>(this.attach_UserTrackings), new Action<UserTracking>(this.detach_UserTrackings));
			this._WorkOrderRequests = new EntitySet<WorkOrderRequest>(new Action<WorkOrderRequest>(this.attach_WorkOrderRequests), new Action<WorkOrderRequest>(this.detach_WorkOrderRequests));
			this._WorkOrderRequests1 = new EntitySet<WorkOrderRequest>(new Action<WorkOrderRequest>(this.attach_WorkOrderRequests1), new Action<WorkOrderRequest>(this.detach_WorkOrderRequests1));
			this._TransferBetweenSavesRequests = new EntitySet<TransferBetweenSavesRequest>(new Action<TransferBetweenSavesRequest>(this.attach_TransferBetweenSavesRequests), new Action<TransferBetweenSavesRequest>(this.detach_TransferBetweenSavesRequests));
			this._TransferBetweenSavesRequests1 = new EntitySet<TransferBetweenSavesRequest>(new Action<TransferBetweenSavesRequest>(this.attach_TransferBetweenSavesRequests1), new Action<TransferBetweenSavesRequest>(this.detach_TransferBetweenSavesRequests1));
			this._Options = new EntitySet<Option>(new Action<Option>(this.attach_Options), new Action<Option>(this.detach_Options));
			this._Branch = default(EntityRef<Branch>);
			this._Group = default(EntityRef<Group>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(255)")]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserPhone", DbType="NVarChar(50)")]
		public string UserPhone
		{
			get
			{
				return this._UserPhone;
			}
			set
			{
				if ((this._UserPhone != value))
				{
					this.OnUserPhoneChanging(value);
					this.SendPropertyChanging();
					this._UserPhone = value;
					this.SendPropertyChanged("UserPhone");
					this.OnUserPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserMobile", DbType="NVarChar(50)")]
		public string UserMobile
		{
			get
			{
				return this._UserMobile;
			}
			set
			{
				if ((this._UserMobile != value))
				{
					this.OnUserMobileChanging(value);
					this.SendPropertyChanging();
					this._UserMobile = value;
					this.SendPropertyChanged("UserMobile");
					this.OnUserMobileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserAddress", DbType="NVarChar(255)")]
		public string UserAddress
		{
			get
			{
				return this._UserAddress;
			}
			set
			{
				if ((this._UserAddress != value))
				{
					this.OnUserAddressChanging(value);
					this.SendPropertyChanging();
					this._UserAddress = value;
					this.SendPropertyChanged("UserAddress");
					this.OnUserAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserEmail", DbType="NVarChar(255)")]
		public string UserEmail
		{
			get
			{
				return this._UserEmail;
			}
			set
			{
				if ((this._UserEmail != value))
				{
					this.OnUserEmailChanging(value);
					this.SendPropertyChanging();
					this._UserEmail = value;
					this.SendPropertyChanged("UserEmail");
					this.OnUserEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OpeningBalance", DbType="Float")]
		public System.Nullable<double> OpeningBalance
		{
			get
			{
				return this._OpeningBalance;
			}
			set
			{
				if ((this._OpeningBalance != value))
				{
					this.OnOpeningBalanceChanging(value);
					this.SendPropertyChanging();
					this._OpeningBalance = value;
					this.SendPropertyChanged("OpeningBalance");
					this.OnOpeningBalanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscountPercentForLimited", DbType="Int")]
		public System.Nullable<int> DiscountPercentForLimited
		{
			get
			{
				return this._DiscountPercentForLimited;
			}
			set
			{
				if ((this._DiscountPercentForLimited != value))
				{
					this.OnDiscountPercentForLimitedChanging(value);
					this.SendPropertyChanging();
					this._DiscountPercentForLimited = value;
					this.SendPropertyChanged("DiscountPercentForLimited");
					this.OnDiscountPercentForLimitedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscountPercentForUnlimited", DbType="Int")]
		public System.Nullable<int> DiscountPercentForUnlimited
		{
			get
			{
				return this._DiscountPercentForUnlimited;
			}
			set
			{
				if ((this._DiscountPercentForUnlimited != value))
				{
					this.OnDiscountPercentForUnlimitedChanging(value);
					this.SendPropertyChanging();
					this._DiscountPercentForUnlimited = value;
					this.SendPropertyChanged("DiscountPercentForUnlimited");
					this.OnDiscountPercentForUnlimitedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginName", DbType="NVarChar(255)")]
		public string LoginName
		{
			get
			{
				return this._LoginName;
			}
			set
			{
				if ((this._LoginName != value))
				{
					this.OnLoginNameChanging(value);
					this.SendPropertyChanging();
					this._LoginName = value;
					this.SendPropertyChanged("LoginName");
					this.OnLoginNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginPassword", DbType="NVarChar(255)")]
		public string LoginPassword
		{
			get
			{
				return this._LoginPassword;
			}
			set
			{
				if ((this._LoginPassword != value))
				{
					this.OnLoginPasswordChanging(value);
					this.SendPropertyChanging();
					this._LoginPassword = value;
					this.SendPropertyChanged("LoginPassword");
					this.OnLoginPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupID", DbType="Int")]
		public System.Nullable<int> GroupID
		{
			get
			{
				return this._GroupID;
			}
			set
			{
				if ((this._GroupID != value))
				{
					if (this._Group.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGroupIDChanging(value);
					this.SendPropertyChanging();
					this._GroupID = value;
					this.SendPropertyChanged("GroupID");
					this.OnGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Image", DbType="NVarChar(255)")]
		public string Image
		{
			get
			{
				return this._Image;
			}
			set
			{
				if ((this._Image != value))
				{
					this.OnImageChanging(value);
					this.SendPropertyChanging();
					this._Image = value;
					this.SendPropertyChanged("Image");
					this.OnImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchID", DbType="Int")]
		public System.Nullable<int> BranchID
		{
			get
			{
				return this._BranchID;
			}
			set
			{
				if ((this._BranchID != value))
				{
					if (this._Branch.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBranchIDChanging(value);
					this.SendPropertyChanging();
					this._BranchID = value;
					this.SendPropertyChanged("BranchID");
					this.OnBranchIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAccountStopped", DbType="Bit")]
		public System.Nullable<bool> IsAccountStopped
		{
			get
			{
				return this._IsAccountStopped;
			}
			set
			{
				if ((this._IsAccountStopped != value))
				{
					this.OnIsAccountStoppedChanging(value);
					this.SendPropertyChanging();
					this._IsAccountStopped = value;
					this.SendPropertyChanged("IsAccountStopped");
					this.OnIsAccountStoppedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ip", DbType="nvarchar(20)")]
		public string Ip
		{
			get
			{
				return this._Ip;
			}
			set
			{
				if ((this._Ip != value))
				{
					this.OnIpChanging(value);
					this.SendPropertyChanging();
					this._Ip = value;
					this.SendPropertyChanged("Ip");
					this.OnIpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="GovernoratesId", Storage="_GovernorateId", DbType="int")]
		public System.Nullable<int> GovernorateId
		{
			get
			{
				return this._GovernorateId;
			}
			set
			{
				if ((this._GovernorateId != value))
				{
					this.OnGovernorateIdChanging(value);
					this.SendPropertyChanging();
					this._GovernorateId = value;
					this.SendPropertyChanged("GovernorateId");
					this.OnGovernorateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="AccountManagerId", Storage="_AccountmanagerId", DbType="int")]
		public System.Nullable<int> AccountmanagerId
		{
			get
			{
				return this._AccountmanagerId;
			}
			set
			{
				if ((this._AccountmanagerId != value))
				{
					this.OnAccountmanagerIdChanging(value);
					this.SendPropertyChanging();
					this._AccountmanagerId = value;
					this.SendPropertyChanged("AccountmanagerId");
					this.OnAccountmanagerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManageRequestPrivilege", DbType="int")]
		public System.Nullable<int> ManageRequestPrivilege
		{
			get
			{
				return this._ManageRequestPrivilege;
			}
			set
			{
				if ((this._ManageRequestPrivilege != value))
				{
					this.OnManageRequestPrivilegeChanging(value);
					this.SendPropertyChanging();
					this._ManageRequestPrivilege = value;
					this.SendPropertyChanged("ManageRequestPrivilege");
					this.OnManageRequestPrivilegeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Branch", Storage="_Branches", ThisKey="ID", OtherKey="AdminID")]
		public EntitySet<Branch> Branches
		{
			get
			{
				return this._Branches;
			}
			set
			{
				this._Branches.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_WorkOrderStatus", Storage="_WorkOrderStatus", ThisKey="ID", OtherKey="UserID")]
		public EntitySet<WorkOrderStatus> WorkOrderStatus
		{
			get
			{
				return this._WorkOrderStatus;
			}
			set
			{
				this._WorkOrderStatus.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_TicketComment", Storage="_TicketComments", ThisKey="ID", OtherKey="UserID")]
		public EntitySet<TicketComment> TicketComments
		{
			get
			{
				return this._TicketComments;
			}
			set
			{
				this._TicketComments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Ticket", Storage="_Tickets", ThisKey="ID", OtherKey="UserID")]
		public EntitySet<Ticket> Tickets
		{
			get
			{
				return this._Tickets;
			}
			set
			{
				this._Tickets.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_WorkOrderHistory", Storage="_WorkOrderHistories", ThisKey="ID", OtherKey="ResellerID")]
		public EntitySet<WorkOrderHistory> WorkOrderHistories
		{
			get
			{
				return this._WorkOrderHistories;
			}
			set
			{
				this._WorkOrderHistories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_WorkOrderHistory1", Storage="_WorkOrderHistories1", ThisKey="ID", OtherKey="UserID")]
		public EntitySet<WorkOrderHistory> WorkOrderHistories1
		{
			get
			{
				return this._WorkOrderHistories1;
			}
			set
			{
				this._WorkOrderHistories1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_WorkOrder", Storage="_WorkOrders", ThisKey="ID", OtherKey="ResellerID")]
		public EntitySet<WorkOrder> WorkOrders
		{
			get
			{
				return this._WorkOrders;
			}
			set
			{
				this._WorkOrders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_WorkOrder1", Storage="_WorkOrders1", ThisKey="ID", OtherKey="Installer")]
		public EntitySet<WorkOrder> WorkOrders1
		{
			get
			{
				return this._WorkOrders1;
			}
			set
			{
				this._WorkOrders1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserBranch", Storage="_UserBranches", ThisKey="ID", OtherKey="UserID")]
		public EntitySet<UserBranch> UserBranches
		{
			get
			{
				return this._UserBranches;
			}
			set
			{
				this._UserBranches.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_ResellerRouter", Storage="_ResellerRouters", ThisKey="ID", OtherKey="ResellerId")]
		public EntitySet<ResellerRouter> ResellerRouters
		{
			get
			{
				return this._ResellerRouters;
			}
			set
			{
				this._ResellerRouters.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Router", Storage="_Routers", ThisKey="ID", OtherKey="ResellerId")]
		public EntitySet<Router> Routers
		{
			get
			{
				return this._Routers;
			}
			set
			{
				this._Routers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_WorkOrderRouter", Storage="_WorkOrderRouters", ThisKey="ID", OtherKey="ResellerId")]
		public EntitySet<WorkOrderRouter> WorkOrderRouters
		{
			get
			{
				return this._WorkOrderRouters;
			}
			set
			{
				this._WorkOrderRouters.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserCulture", Storage="_UserCultures", ThisKey="ID", OtherKey="UserId")]
		public EntitySet<UserCulture> UserCultures
		{
			get
			{
				return this._UserCultures;
			}
			set
			{
				this._UserCultures.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Message", Storage="_Messages", ThisKey="ID", OtherKey="MessageTo")]
		public EntitySet<Message> Messages
		{
			get
			{
				return this._Messages;
			}
			set
			{
				this._Messages.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Message1", Storage="_Messages1", ThisKey="ID", OtherKey="MessageFrom")]
		public EntitySet<Message> Messages1
		{
			get
			{
				return this._Messages1;
			}
			set
			{
				this._Messages1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_ReceiptCnfg", Storage="_ReceiptCnfgs", ThisKey="ID", OtherKey="ResellerId")]
		public EntitySet<ReceiptCnfg> ReceiptCnfgs
		{
			get
			{
				return this._ReceiptCnfgs;
			}
			set
			{
				this._ReceiptCnfgs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserProvider", Storage="_UserProviders", ThisKey="ID", OtherKey="UserId")]
		public EntitySet<UserProvider> UserProviders
		{
			get
			{
				return this._UserProviders;
			}
			set
			{
				this._UserProviders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_OfferReseller", Storage="_OfferResellers", ThisKey="ID", OtherKey="UserId")]
		public EntitySet<OfferReseller> OfferResellers
		{
			get
			{
				return this._OfferResellers;
			}
			set
			{
				this._OfferResellers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Reminder", Storage="_Reminders", ThisKey="ID", OtherKey="UserId")]
		public EntitySet<Reminder> Reminders
		{
			get
			{
				return this._Reminders;
			}
			set
			{
				this._Reminders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_ResellerPackagesDiscount", Storage="_ResellerPackagesDiscounts", ThisKey="ID", OtherKey="ResellerId")]
		public EntitySet<ResellerPackagesDiscount> ResellerPackagesDiscounts
		{
			get
			{
				return this._ResellerPackagesDiscounts;
			}
			set
			{
				this._ResellerPackagesDiscounts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Demand", Storage="_Demands", ThisKey="ID", OtherKey="UserId")]
		public EntitySet<Demand> Demands
		{
			get
			{
				return this._Demands;
			}
			set
			{
				this._Demands.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_OutgoingExpense", Storage="_OutgoingExpenses", ThisKey="ID", OtherKey="UserId")]
		public EntitySet<OutgoingExpense> OutgoingExpenses
		{
			get
			{
				return this._OutgoingExpenses;
			}
			set
			{
				this._OutgoingExpenses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_WorkOrderNote", Storage="_WorkOrderNotes", ThisKey="ID", OtherKey="UserId")]
		public EntitySet<WorkOrderNote> WorkOrderNotes
		{
			get
			{
				return this._WorkOrderNotes;
			}
			set
			{
				this._WorkOrderNotes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_WorkOrderNote1", Storage="_WorkOrderNotes1", ThisKey="ID", OtherKey="ToUserId")]
		public EntitySet<WorkOrderNote> WorkOrderNotes1
		{
			get
			{
				return this._WorkOrderNotes1;
			}
			set
			{
				this._WorkOrderNotes1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_ResellerAttachment", Storage="_ResellerAttachments", ThisKey="ID", OtherKey="ResellerId")]
		public EntitySet<ResellerAttachment> ResellerAttachments
		{
			get
			{
				return this._ResellerAttachments;
			}
			set
			{
				this._ResellerAttachments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_ResellerCreditsVoice", Storage="_ResellerCreditsVoices", ThisKey="ID", OtherKey="ResellerId")]
		public EntitySet<ResellerCreditsVoice> ResellerCreditsVoices
		{
			get
			{
				return this._ResellerCreditsVoices;
			}
			set
			{
				this._ResellerCreditsVoices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_ResellerCreditsVoice1", Storage="_ResellerCreditsVoices1", ThisKey="ID", OtherKey="UserId")]
		public EntitySet<ResellerCreditsVoice> ResellerCreditsVoices1
		{
			get
			{
				return this._ResellerCreditsVoices1;
			}
			set
			{
				this._ResellerCreditsVoices1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UpdatedResellerB", Storage="_UpdatedResellerBs", ThisKey="ID", OtherKey="UserId")]
		public EntitySet<UpdatedResellerB> UpdatedResellerBs
		{
			get
			{
				return this._UpdatedResellerBs;
			}
			set
			{
				this._UpdatedResellerBs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UpdatedResellerB1", Storage="_UpdatedResellerBs1", ThisKey="ID", OtherKey="ResellerId")]
		public EntitySet<UpdatedResellerB> UpdatedResellerBs1
		{
			get
			{
				return this._UpdatedResellerBs1;
			}
			set
			{
				this._UpdatedResellerBs1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UpdatedResellerPayment", Storage="_UpdatedResellerPayments", ThisKey="ID", OtherKey="ResellerId")]
		public EntitySet<UpdatedResellerPayment> UpdatedResellerPayments
		{
			get
			{
				return this._UpdatedResellerPayments;
			}
			set
			{
				this._UpdatedResellerPayments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_RechargeClientRequest", Storage="_RechargeClientRequests", ThisKey="ID", OtherKey="ResellerId")]
		public EntitySet<RechargeClientRequest> RechargeClientRequests
		{
			get
			{
				return this._RechargeClientRequests;
			}
			set
			{
				this._RechargeClientRequests.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_BranchCreditVoice", Storage="_BranchCreditVoices", ThisKey="ID", OtherKey="UserId")]
		public EntitySet<BranchCreditVoice> BranchCreditVoices
		{
			get
			{
				return this._BranchCreditVoices;
			}
			set
			{
				this._BranchCreditVoices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_ResellerCredit", Storage="_ResellerCredits", ThisKey="ID", OtherKey="ResellerId")]
		public EntitySet<ResellerCredit> ResellerCredits
		{
			get
			{
				return this._ResellerCredits;
			}
			set
			{
				this._ResellerCredits.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_ResellerCredit1", Storage="_ResellerCredits1", ThisKey="ID", OtherKey="UserId")]
		public EntitySet<ResellerCredit> ResellerCredits1
		{
			get
			{
				return this._ResellerCredits1;
			}
			set
			{
				this._ResellerCredits1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_RechargeRequest", Storage="_RechargeRequests", ThisKey="ID", OtherKey="ResellerId")]
		public EntitySet<RechargeRequest> RechargeRequests
		{
			get
			{
				return this._RechargeRequests;
			}
			set
			{
				this._RechargeRequests.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_BranchCredit", Storage="_BranchCredits", ThisKey="ID", OtherKey="UserId")]
		public EntitySet<BranchCredit> BranchCredits
		{
			get
			{
				return this._BranchCredits;
			}
			set
			{
				this._BranchCredits.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_CenterCredit", Storage="_CenterCredits", ThisKey="ID", OtherKey="CenterUserId")]
		public EntitySet<CenterCredit> CenterCredits
		{
			get
			{
				return this._CenterCredits;
			}
			set
			{
				this._CenterCredits.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_CenterCredit1", Storage="_CenterCredits1", ThisKey="ID", OtherKey="UserId")]
		public EntitySet<CenterCredit> CenterCredits1
		{
			get
			{
				return this._CenterCredits1;
			}
			set
			{
				this._CenterCredits1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_BoxCredit", Storage="_BoxCredits", ThisKey="ID", OtherKey="UserId")]
		public EntitySet<BoxCredit> BoxCredits
		{
			get
			{
				return this._BoxCredits;
			}
			set
			{
				this._BoxCredits.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_IncomingExpense", Storage="_IncomingExpenses", ThisKey="ID", OtherKey="UserId")]
		public EntitySet<IncomingExpense> IncomingExpenses
		{
			get
			{
				return this._IncomingExpenses;
			}
			set
			{
				this._IncomingExpenses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_CustomerPayment", Storage="_CustomerPayments", ThisKey="ID", OtherKey="ConfirmerId")]
		public EntitySet<CustomerPayment> CustomerPayments
		{
			get
			{
				return this._CustomerPayments;
			}
			set
			{
				this._CustomerPayments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserSave", Storage="_UserSaves", ThisKey="ID", OtherKey="UserId")]
		public EntitySet<UserSave> UserSaves
		{
			get
			{
				return this._UserSaves;
			}
			set
			{
				this._UserSaves.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserSavesHistory", Storage="_UserSavesHistories", ThisKey="ID", OtherKey="ConfirmerUserId")]
		public EntitySet<UserSavesHistory> UserSavesHistories
		{
			get
			{
				return this._UserSavesHistories;
			}
			set
			{
				this._UserSavesHistories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_CallMessage", Storage="_CallMessages", ThisKey="ID", OtherKey="User_Id")]
		public EntitySet<CallMessage> CallMessages
		{
			get
			{
				return this._CallMessages;
			}
			set
			{
				this._CallMessages.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_PayingCustomersReseller", Storage="_PayingCustomersResellers", ThisKey="ID", OtherKey="ResellerId")]
		public EntitySet<PayingCustomersReseller> PayingCustomersResellers
		{
			get
			{
				return this._PayingCustomersResellers;
			}
			set
			{
				this._PayingCustomersResellers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UsersTransaction", Storage="_UsersTransactions", ThisKey="ID", OtherKey="ResellerID")]
		public EntitySet<UsersTransaction> UsersTransactions
		{
			get
			{
				return this._UsersTransactions;
			}
			set
			{
				this._UsersTransactions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UsersTransaction1", Storage="_UsersTransactions1", ThisKey="ID", OtherKey="UserId")]
		public EntitySet<UsersTransaction> UsersTransactions1
		{
			get
			{
				return this._UsersTransactions1;
			}
			set
			{
				this._UsersTransactions1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_RequestDateHistory", Storage="_RequestDateHistories", ThisKey="ID", OtherKey="UserId")]
		public EntitySet<RequestDateHistory> RequestDateHistories
		{
			get
			{
				return this._RequestDateHistories;
			}
			set
			{
				this._RequestDateHistories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Account", Storage="_Accounts", ThisKey="ID", OtherKey="UserId")]
		public EntitySet<Account> Accounts
		{
			get
			{
				return this._Accounts;
			}
			set
			{
				this._Accounts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Phone", Storage="_Phones", ThisKey="ID", OtherKey="EmployeeId")]
		public EntitySet<Phone> Phones
		{
			get
			{
				return this._Phones;
			}
			set
			{
				this._Phones.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Calender", Storage="_Calenders", ThisKey="ID", OtherKey="UserId")]
		public EntitySet<Calender> Calenders
		{
			get
			{
				return this._Calenders;
			}
			set
			{
				this._Calenders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_ResellerTransformationRequest", Storage="_ResellerTransformationRequests", ThisKey="ID", OtherKey="ResellerId")]
		public EntitySet<ResellerTransformationRequest> ResellerTransformationRequests
		{
			get
			{
				return this._ResellerTransformationRequests;
			}
			set
			{
				this._ResellerTransformationRequests.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_ResellerTransformationRequest1", Storage="_ResellerTransformationRequests1", ThisKey="ID", OtherKey="UserId")]
		public EntitySet<ResellerTransformationRequest> ResellerTransformationRequests1
		{
			get
			{
				return this._ResellerTransformationRequests1;
			}
			set
			{
				this._ResellerTransformationRequests1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_WorkOrderCredit", Storage="_WorkOrderCredits", ThisKey="ID", OtherKey="UserId")]
		public EntitySet<WorkOrderCredit> WorkOrderCredits
		{
			get
			{
				return this._WorkOrderCredits;
			}
			set
			{
				this._WorkOrderCredits.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_PersonalEmail", Storage="_PersonalEmails", ThisKey="ID", OtherKey="UserId")]
		public EntitySet<PersonalEmail> PersonalEmails
		{
			get
			{
				return this._PersonalEmails;
			}
			set
			{
				this._PersonalEmails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_RecieveRouter", Storage="_RecieveRouters", ThisKey="ID", OtherKey="CompanyConfirmerUserId")]
		public EntitySet<RecieveRouter> RecieveRouters
		{
			get
			{
				return this._RecieveRouters;
			}
			set
			{
				this._RecieveRouters.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_RecieveRouter1", Storage="_RecieveRouters1", ThisKey="ID", OtherKey="CustomerConfirmerUserId")]
		public EntitySet<RecieveRouter> RecieveRouters1
		{
			get
			{
				return this._RecieveRouters1;
			}
			set
			{
				this._RecieveRouters1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_event", Storage="_events", ThisKey="ID", OtherKey="UserId")]
		public EntitySet<@event> events
		{
			get
			{
				return this._events;
			}
			set
			{
				this._events.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_DisCard", Storage="_DisCards", ThisKey="ID", OtherKey="user_id")]
		public EntitySet<DisCard> DisCards
		{
			get
			{
				return this._DisCards;
			}
			set
			{
				this._DisCards.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_RequestsNotitfication", Storage="_RequestsNotitfications", ThisKey="ID", OtherKey="UserId")]
		public EntitySet<RequestsNotitfication> RequestsNotitfications
		{
			get
			{
				return this._RequestsNotitfications;
			}
			set
			{
				this._RequestsNotitfications.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_BranchTransformationRequest", Storage="_BranchTransformationRequests", ThisKey="ID", OtherKey="UserId")]
		public EntitySet<BranchTransformationRequest> BranchTransformationRequests
		{
			get
			{
				return this._BranchTransformationRequests;
			}
			set
			{
				this._BranchTransformationRequests.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_ResellerUnpaidDemandComment", Storage="_ResellerUnpaidDemandComments", ThisKey="ID", OtherKey="UserId")]
		public EntitySet<ResellerUnpaidDemandComment> ResellerUnpaidDemandComments
		{
			get
			{
				return this._ResellerUnpaidDemandComments;
			}
			set
			{
				this._ResellerUnpaidDemandComments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_BranchInvoiceComment", Storage="_BranchInvoiceComments", ThisKey="ID", OtherKey="UserId")]
		public EntitySet<BranchInvoiceComment> BranchInvoiceComments
		{
			get
			{
				return this._BranchInvoiceComments;
			}
			set
			{
				this._BranchInvoiceComments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_DeletedCustomersHistory", Storage="_DeletedCustomersHistories", ThisKey="ID", OtherKey="UserId")]
		public EntitySet<DeletedCustomersHistory> DeletedCustomersHistories
		{
			get
			{
				return this._DeletedCustomersHistories;
			}
			set
			{
				this._DeletedCustomersHistories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_DistributorPaymentRecord", Storage="_DistributorPaymentRecords", ThisKey="ID", OtherKey="UserId")]
		public EntitySet<DistributorPaymentRecord> DistributorPaymentRecords
		{
			get
			{
				return this._DistributorPaymentRecords;
			}
			set
			{
				this._DistributorPaymentRecords.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_ResellerDistributorCommision", Storage="_ResellerDistributorCommisions", ThisKey="ID", OtherKey="ResellerID")]
		public EntitySet<ResellerDistributorCommision> ResellerDistributorCommisions
		{
			get
			{
				return this._ResellerDistributorCommisions;
			}
			set
			{
				this._ResellerDistributorCommisions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserTracking", Storage="_UserTrackings", ThisKey="ID", OtherKey="UserId")]
		public EntitySet<UserTracking> UserTrackings
		{
			get
			{
				return this._UserTrackings;
			}
			set
			{
				this._UserTrackings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_WorkOrderRequest", Storage="_WorkOrderRequests", ThisKey="ID", OtherKey="SenderID")]
		public EntitySet<WorkOrderRequest> WorkOrderRequests
		{
			get
			{
				return this._WorkOrderRequests;
			}
			set
			{
				this._WorkOrderRequests.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_WorkOrderRequest1", Storage="_WorkOrderRequests1", ThisKey="ID", OtherKey="ConfirmerID")]
		public EntitySet<WorkOrderRequest> WorkOrderRequests1
		{
			get
			{
				return this._WorkOrderRequests1;
			}
			set
			{
				this._WorkOrderRequests1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_TransferBetweenSavesRequest", Storage="_TransferBetweenSavesRequests", ThisKey="ID", OtherKey="ConfirmerUserId")]
		public EntitySet<TransferBetweenSavesRequest> TransferBetweenSavesRequests
		{
			get
			{
				return this._TransferBetweenSavesRequests;
			}
			set
			{
				this._TransferBetweenSavesRequests.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_TransferBetweenSavesRequest1", Storage="_TransferBetweenSavesRequests1", ThisKey="ID", OtherKey="RequestMakerId")]
		public EntitySet<TransferBetweenSavesRequest> TransferBetweenSavesRequests1
		{
			get
			{
				return this._TransferBetweenSavesRequests1;
			}
			set
			{
				this._TransferBetweenSavesRequests1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Option", Storage="_Options", ThisKey="ID", OtherKey="ReminderToUserId")]
		public EntitySet<Option> Options
		{
			get
			{
				return this._Options;
			}
			set
			{
				this._Options.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Branch_User", Storage="_Branch", ThisKey="BranchID", OtherKey="ID", IsForeignKey=true)]
		public Branch Branch
		{
			get
			{
				return this._Branch.Entity;
			}
			set
			{
				Branch previousValue = this._Branch.Entity;
				if (((previousValue != value) 
							|| (this._Branch.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Branch.Entity = null;
						previousValue.Users.Remove(this);
					}
					this._Branch.Entity = value;
					if ((value != null))
					{
						value.Users.Add(this);
						this._BranchID = value.ID;
					}
					else
					{
						this._BranchID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Branch");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Group_User", Storage="_Group", ThisKey="GroupID", OtherKey="ID", IsForeignKey=true)]
		public Group Group
		{
			get
			{
				return this._Group.Entity;
			}
			set
			{
				Group previousValue = this._Group.Entity;
				if (((previousValue != value) 
							|| (this._Group.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Group.Entity = null;
						previousValue.Users.Remove(this);
					}
					this._Group.Entity = value;
					if ((value != null))
					{
						value.Users.Add(this);
						this._GroupID = value.ID;
					}
					else
					{
						this._GroupID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Group");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Branches(Branch entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Branches(Branch entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_WorkOrderStatus(WorkOrderStatus entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_WorkOrderStatus(WorkOrderStatus entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_TicketComments(TicketComment entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_TicketComments(TicketComment entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_Tickets(Ticket entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Tickets(Ticket entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_WorkOrderHistories(WorkOrderHistory entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_WorkOrderHistories(WorkOrderHistory entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_WorkOrderHistories1(WorkOrderHistory entity)
		{
			this.SendPropertyChanging();
			entity.User1 = this;
		}
		
		private void detach_WorkOrderHistories1(WorkOrderHistory entity)
		{
			this.SendPropertyChanging();
			entity.User1 = null;
		}
		
		private void attach_WorkOrders(WorkOrder entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_WorkOrders(WorkOrder entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_WorkOrders1(WorkOrder entity)
		{
			this.SendPropertyChanging();
			entity.User1 = this;
		}
		
		private void detach_WorkOrders1(WorkOrder entity)
		{
			this.SendPropertyChanging();
			entity.User1 = null;
		}
		
		private void attach_UserBranches(UserBranch entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_UserBranches(UserBranch entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_ResellerRouters(ResellerRouter entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_ResellerRouters(ResellerRouter entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_Routers(Router entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Routers(Router entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_WorkOrderRouters(WorkOrderRouter entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_WorkOrderRouters(WorkOrderRouter entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_UserCultures(UserCulture entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_UserCultures(UserCulture entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_Messages(Message entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Messages(Message entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_Messages1(Message entity)
		{
			this.SendPropertyChanging();
			entity.User1 = this;
		}
		
		private void detach_Messages1(Message entity)
		{
			this.SendPropertyChanging();
			entity.User1 = null;
		}
		
		private void attach_ReceiptCnfgs(ReceiptCnfg entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_ReceiptCnfgs(ReceiptCnfg entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_UserProviders(UserProvider entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_UserProviders(UserProvider entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_OfferResellers(OfferReseller entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_OfferResellers(OfferReseller entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_Reminders(Reminder entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Reminders(Reminder entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_ResellerPackagesDiscounts(ResellerPackagesDiscount entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_ResellerPackagesDiscounts(ResellerPackagesDiscount entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_Demands(Demand entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Demands(Demand entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_OutgoingExpenses(OutgoingExpense entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_OutgoingExpenses(OutgoingExpense entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_WorkOrderNotes(WorkOrderNote entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_WorkOrderNotes(WorkOrderNote entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_WorkOrderNotes1(WorkOrderNote entity)
		{
			this.SendPropertyChanging();
			entity.User1 = this;
		}
		
		private void detach_WorkOrderNotes1(WorkOrderNote entity)
		{
			this.SendPropertyChanging();
			entity.User1 = null;
		}
		
		private void attach_ResellerAttachments(ResellerAttachment entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_ResellerAttachments(ResellerAttachment entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_ResellerCreditsVoices(ResellerCreditsVoice entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_ResellerCreditsVoices(ResellerCreditsVoice entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_ResellerCreditsVoices1(ResellerCreditsVoice entity)
		{
			this.SendPropertyChanging();
			entity.User1 = this;
		}
		
		private void detach_ResellerCreditsVoices1(ResellerCreditsVoice entity)
		{
			this.SendPropertyChanging();
			entity.User1 = null;
		}
		
		private void attach_UpdatedResellerBs(UpdatedResellerB entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_UpdatedResellerBs(UpdatedResellerB entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_UpdatedResellerBs1(UpdatedResellerB entity)
		{
			this.SendPropertyChanging();
			entity.User1 = this;
		}
		
		private void detach_UpdatedResellerBs1(UpdatedResellerB entity)
		{
			this.SendPropertyChanging();
			entity.User1 = null;
		}
		
		private void attach_UpdatedResellerPayments(UpdatedResellerPayment entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_UpdatedResellerPayments(UpdatedResellerPayment entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_RechargeClientRequests(RechargeClientRequest entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_RechargeClientRequests(RechargeClientRequest entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_BranchCreditVoices(BranchCreditVoice entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_BranchCreditVoices(BranchCreditVoice entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_ResellerCredits(ResellerCredit entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_ResellerCredits(ResellerCredit entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_ResellerCredits1(ResellerCredit entity)
		{
			this.SendPropertyChanging();
			entity.User1 = this;
		}
		
		private void detach_ResellerCredits1(ResellerCredit entity)
		{
			this.SendPropertyChanging();
			entity.User1 = null;
		}
		
		private void attach_RechargeRequests(RechargeRequest entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_RechargeRequests(RechargeRequest entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_BranchCredits(BranchCredit entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_BranchCredits(BranchCredit entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_CenterCredits(CenterCredit entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_CenterCredits(CenterCredit entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_CenterCredits1(CenterCredit entity)
		{
			this.SendPropertyChanging();
			entity.User1 = this;
		}
		
		private void detach_CenterCredits1(CenterCredit entity)
		{
			this.SendPropertyChanging();
			entity.User1 = null;
		}
		
		private void attach_BoxCredits(BoxCredit entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_BoxCredits(BoxCredit entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_IncomingExpenses(IncomingExpense entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_IncomingExpenses(IncomingExpense entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_CustomerPayments(CustomerPayment entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_CustomerPayments(CustomerPayment entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_UserSaves(UserSave entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_UserSaves(UserSave entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_UserSavesHistories(UserSavesHistory entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_UserSavesHistories(UserSavesHistory entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_CallMessages(CallMessage entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_CallMessages(CallMessage entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_PayingCustomersResellers(PayingCustomersReseller entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_PayingCustomersResellers(PayingCustomersReseller entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_UsersTransactions(UsersTransaction entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_UsersTransactions(UsersTransaction entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_UsersTransactions1(UsersTransaction entity)
		{
			this.SendPropertyChanging();
			entity.User1 = this;
		}
		
		private void detach_UsersTransactions1(UsersTransaction entity)
		{
			this.SendPropertyChanging();
			entity.User1 = null;
		}
		
		private void attach_RequestDateHistories(RequestDateHistory entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_RequestDateHistories(RequestDateHistory entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_Accounts(Account entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Accounts(Account entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_Phones(Phone entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Phones(Phone entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_Calenders(Calender entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Calenders(Calender entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_ResellerTransformationRequests(ResellerTransformationRequest entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_ResellerTransformationRequests(ResellerTransformationRequest entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_ResellerTransformationRequests1(ResellerTransformationRequest entity)
		{
			this.SendPropertyChanging();
			entity.User1 = this;
		}
		
		private void detach_ResellerTransformationRequests1(ResellerTransformationRequest entity)
		{
			this.SendPropertyChanging();
			entity.User1 = null;
		}
		
		private void attach_WorkOrderCredits(WorkOrderCredit entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_WorkOrderCredits(WorkOrderCredit entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_PersonalEmails(PersonalEmail entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_PersonalEmails(PersonalEmail entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_RecieveRouters(RecieveRouter entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_RecieveRouters(RecieveRouter entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_RecieveRouters1(RecieveRouter entity)
		{
			this.SendPropertyChanging();
			entity.User1 = this;
		}
		
		private void detach_RecieveRouters1(RecieveRouter entity)
		{
			this.SendPropertyChanging();
			entity.User1 = null;
		}
		
		private void attach_events(@event entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_events(@event entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_DisCards(DisCard entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_DisCards(DisCard entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_RequestsNotitfications(RequestsNotitfication entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_RequestsNotitfications(RequestsNotitfication entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_BranchTransformationRequests(BranchTransformationRequest entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_BranchTransformationRequests(BranchTransformationRequest entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_ResellerUnpaidDemandComments(ResellerUnpaidDemandComment entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_ResellerUnpaidDemandComments(ResellerUnpaidDemandComment entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_BranchInvoiceComments(BranchInvoiceComment entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_BranchInvoiceComments(BranchInvoiceComment entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_DeletedCustomersHistories(DeletedCustomersHistory entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_DeletedCustomersHistories(DeletedCustomersHistory entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_DistributorPaymentRecords(DistributorPaymentRecord entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_DistributorPaymentRecords(DistributorPaymentRecord entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_ResellerDistributorCommisions(ResellerDistributorCommision entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_ResellerDistributorCommisions(ResellerDistributorCommision entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_UserTrackings(UserTracking entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_UserTrackings(UserTracking entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_WorkOrderRequests(WorkOrderRequest entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_WorkOrderRequests(WorkOrderRequest entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_WorkOrderRequests1(WorkOrderRequest entity)
		{
			this.SendPropertyChanging();
			entity.User1 = this;
		}
		
		private void detach_WorkOrderRequests1(WorkOrderRequest entity)
		{
			this.SendPropertyChanging();
			entity.User1 = null;
		}
		
		private void attach_TransferBetweenSavesRequests(TransferBetweenSavesRequest entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_TransferBetweenSavesRequests(TransferBetweenSavesRequest entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_TransferBetweenSavesRequests1(TransferBetweenSavesRequest entity)
		{
			this.SendPropertyChanging();
			entity.User1 = this;
		}
		
		private void detach_TransferBetweenSavesRequests1(TransferBetweenSavesRequest entity)
		{
			this.SendPropertyChanging();
			entity.User1 = null;
		}
		
		private void attach_Options(Option entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Options(Option entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WorkOrderFiles")]
	public partial class WorkOrderFile : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _WorkOrderID;
		
		private string _FileName;
		
		private string _VirtualName;
		
		private string _Notes;
		
		private EntityRef<WorkOrder> _WorkOrder;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnWorkOrderIDChanging(System.Nullable<int> value);
    partial void OnWorkOrderIDChanged();
    partial void OnFileNameChanging(string value);
    partial void OnFileNameChanged();
    partial void OnVirtualNameChanging(string value);
    partial void OnVirtualNameChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    #endregion
		
		public WorkOrderFile()
		{
			this._WorkOrder = default(EntityRef<WorkOrder>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkOrderID", DbType="Int")]
		public System.Nullable<int> WorkOrderID
		{
			get
			{
				return this._WorkOrderID;
			}
			set
			{
				if ((this._WorkOrderID != value))
				{
					if (this._WorkOrder.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWorkOrderIDChanging(value);
					this.SendPropertyChanging();
					this._WorkOrderID = value;
					this.SendPropertyChanged("WorkOrderID");
					this.OnWorkOrderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileName", DbType="NVarChar(255)")]
		public string FileName
		{
			get
			{
				return this._FileName;
			}
			set
			{
				if ((this._FileName != value))
				{
					this.OnFileNameChanging(value);
					this.SendPropertyChanging();
					this._FileName = value;
					this.SendPropertyChanged("FileName");
					this.OnFileNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualName", DbType="NVarChar(255)")]
		public string VirtualName
		{
			get
			{
				return this._VirtualName;
			}
			set
			{
				if ((this._VirtualName != value))
				{
					this.OnVirtualNameChanging(value);
					this.SendPropertyChanging();
					this._VirtualName = value;
					this.SendPropertyChanged("VirtualName");
					this.OnVirtualNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WorkOrder_WorkOrderFile", Storage="_WorkOrder", ThisKey="WorkOrderID", OtherKey="ID", IsForeignKey=true)]
		public WorkOrder WorkOrder
		{
			get
			{
				return this._WorkOrder.Entity;
			}
			set
			{
				WorkOrder previousValue = this._WorkOrder.Entity;
				if (((previousValue != value) 
							|| (this._WorkOrder.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WorkOrder.Entity = null;
						previousValue.WorkOrderFiles.Remove(this);
					}
					this._WorkOrder.Entity = value;
					if ((value != null))
					{
						value.WorkOrderFiles.Add(this);
						this._WorkOrderID = value.ID;
					}
					else
					{
						this._WorkOrderID = default(Nullable<int>);
					}
					this.SendPropertyChanged("WorkOrder");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WorkOrderHistory")]
	public partial class WorkOrderHistory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _CustomerGovernorateID;
		
		private System.Nullable<int> _ResellerID;
		
		private System.Nullable<int> _ServiceProviderID;
		
		private System.Nullable<int> _UserID;
		
		private System.Nullable<System.DateTime> _UpdateDate;
		
		private System.Nullable<int> _WOID;
		
		private System.Nullable<int> _BranchID;
		
		private System.Nullable<int> _OfferId;
		
		private EntityRef<Governorate> _Governorate;
		
		private EntityRef<ServiceProvider> _ServiceProvider;
		
		private EntityRef<User> _User;
		
		private EntityRef<User> _User1;
		
		private EntityRef<WorkOrder> _WorkOrder;
		
		private EntityRef<Branch> _Branch;
		
		private EntityRef<Offer> _Offer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCustomerGovernorateIDChanging(System.Nullable<int> value);
    partial void OnCustomerGovernorateIDChanged();
    partial void OnResellerIDChanging(System.Nullable<int> value);
    partial void OnResellerIDChanged();
    partial void OnServiceProviderIDChanging(System.Nullable<int> value);
    partial void OnServiceProviderIDChanged();
    partial void OnUserIDChanging(System.Nullable<int> value);
    partial void OnUserIDChanged();
    partial void OnUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateDateChanged();
    partial void OnWOIDChanging(System.Nullable<int> value);
    partial void OnWOIDChanged();
    partial void OnBranchIDChanging(System.Nullable<int> value);
    partial void OnBranchIDChanged();
    partial void OnOfferIdChanging(System.Nullable<int> value);
    partial void OnOfferIdChanged();
    #endregion
		
		public WorkOrderHistory()
		{
			this._Governorate = default(EntityRef<Governorate>);
			this._ServiceProvider = default(EntityRef<ServiceProvider>);
			this._User = default(EntityRef<User>);
			this._User1 = default(EntityRef<User>);
			this._WorkOrder = default(EntityRef<WorkOrder>);
			this._Branch = default(EntityRef<Branch>);
			this._Offer = default(EntityRef<Offer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerGovernorateID", DbType="Int")]
		public System.Nullable<int> CustomerGovernorateID
		{
			get
			{
				return this._CustomerGovernorateID;
			}
			set
			{
				if ((this._CustomerGovernorateID != value))
				{
					if (this._Governorate.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerGovernorateIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerGovernorateID = value;
					this.SendPropertyChanged("CustomerGovernorateID");
					this.OnCustomerGovernorateIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResellerID", DbType="Int")]
		public System.Nullable<int> ResellerID
		{
			get
			{
				return this._ResellerID;
			}
			set
			{
				if ((this._ResellerID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnResellerIDChanging(value);
					this.SendPropertyChanging();
					this._ResellerID = value;
					this.SendPropertyChanged("ResellerID");
					this.OnResellerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceProviderID", DbType="Int")]
		public System.Nullable<int> ServiceProviderID
		{
			get
			{
				return this._ServiceProviderID;
			}
			set
			{
				if ((this._ServiceProviderID != value))
				{
					if (this._ServiceProvider.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnServiceProviderIDChanging(value);
					this.SendPropertyChanging();
					this._ServiceProviderID = value;
					this.SendPropertyChanged("ServiceProviderID");
					this.OnServiceProviderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int")]
		public System.Nullable<int> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._User1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WOID", DbType="Int")]
		public System.Nullable<int> WOID
		{
			get
			{
				return this._WOID;
			}
			set
			{
				if ((this._WOID != value))
				{
					if (this._WorkOrder.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWOIDChanging(value);
					this.SendPropertyChanging();
					this._WOID = value;
					this.SendPropertyChanged("WOID");
					this.OnWOIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchID", DbType="Int")]
		public System.Nullable<int> BranchID
		{
			get
			{
				return this._BranchID;
			}
			set
			{
				if ((this._BranchID != value))
				{
					if (this._Branch.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBranchIDChanging(value);
					this.SendPropertyChanging();
					this._BranchID = value;
					this.SendPropertyChanged("BranchID");
					this.OnBranchIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OfferId")]
		public System.Nullable<int> OfferId
		{
			get
			{
				return this._OfferId;
			}
			set
			{
				if ((this._OfferId != value))
				{
					if (this._Offer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOfferIdChanging(value);
					this.SendPropertyChanging();
					this._OfferId = value;
					this.SendPropertyChanged("OfferId");
					this.OnOfferIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Governorate_WorkOrderHistory", Storage="_Governorate", ThisKey="CustomerGovernorateID", OtherKey="ID", IsForeignKey=true)]
		public Governorate Governorate
		{
			get
			{
				return this._Governorate.Entity;
			}
			set
			{
				Governorate previousValue = this._Governorate.Entity;
				if (((previousValue != value) 
							|| (this._Governorate.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Governorate.Entity = null;
						previousValue.WorkOrderHistories.Remove(this);
					}
					this._Governorate.Entity = value;
					if ((value != null))
					{
						value.WorkOrderHistories.Add(this);
						this._CustomerGovernorateID = value.ID;
					}
					else
					{
						this._CustomerGovernorateID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Governorate");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ServiceProvider_WorkOrderHistory", Storage="_ServiceProvider", ThisKey="ServiceProviderID", OtherKey="ID", IsForeignKey=true)]
		public ServiceProvider ServiceProvider
		{
			get
			{
				return this._ServiceProvider.Entity;
			}
			set
			{
				ServiceProvider previousValue = this._ServiceProvider.Entity;
				if (((previousValue != value) 
							|| (this._ServiceProvider.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ServiceProvider.Entity = null;
						previousValue.WorkOrderHistories.Remove(this);
					}
					this._ServiceProvider.Entity = value;
					if ((value != null))
					{
						value.WorkOrderHistories.Add(this);
						this._ServiceProviderID = value.ID;
					}
					else
					{
						this._ServiceProviderID = default(Nullable<int>);
					}
					this.SendPropertyChanged("ServiceProvider");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_WorkOrderHistory", Storage="_User", ThisKey="ResellerID", OtherKey="ID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.WorkOrderHistories.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.WorkOrderHistories.Add(this);
						this._ResellerID = value.ID;
					}
					else
					{
						this._ResellerID = default(Nullable<int>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_WorkOrderHistory1", Storage="_User1", ThisKey="UserID", OtherKey="ID", IsForeignKey=true)]
		public User User1
		{
			get
			{
				return this._User1.Entity;
			}
			set
			{
				User previousValue = this._User1.Entity;
				if (((previousValue != value) 
							|| (this._User1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User1.Entity = null;
						previousValue.WorkOrderHistories1.Remove(this);
					}
					this._User1.Entity = value;
					if ((value != null))
					{
						value.WorkOrderHistories1.Add(this);
						this._UserID = value.ID;
					}
					else
					{
						this._UserID = default(Nullable<int>);
					}
					this.SendPropertyChanged("User1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WorkOrder_WorkOrderHistory", Storage="_WorkOrder", ThisKey="WOID", OtherKey="ID", IsForeignKey=true)]
		public WorkOrder WorkOrder
		{
			get
			{
				return this._WorkOrder.Entity;
			}
			set
			{
				WorkOrder previousValue = this._WorkOrder.Entity;
				if (((previousValue != value) 
							|| (this._WorkOrder.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WorkOrder.Entity = null;
						previousValue.WorkOrderHistories.Remove(this);
					}
					this._WorkOrder.Entity = value;
					if ((value != null))
					{
						value.WorkOrderHistories.Add(this);
						this._WOID = value.ID;
					}
					else
					{
						this._WOID = default(Nullable<int>);
					}
					this.SendPropertyChanged("WorkOrder");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Branch_WorkOrderHistory", Storage="_Branch", ThisKey="BranchID", OtherKey="ID", IsForeignKey=true)]
		public Branch Branch
		{
			get
			{
				return this._Branch.Entity;
			}
			set
			{
				Branch previousValue = this._Branch.Entity;
				if (((previousValue != value) 
							|| (this._Branch.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Branch.Entity = null;
						previousValue.WorkOrderHistories.Remove(this);
					}
					this._Branch.Entity = value;
					if ((value != null))
					{
						value.WorkOrderHistories.Add(this);
						this._BranchID = value.ID;
					}
					else
					{
						this._BranchID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Branch");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Offer_WorkOrderHistory", Storage="_Offer", ThisKey="OfferId", OtherKey="Id", IsForeignKey=true)]
		public Offer Offer
		{
			get
			{
				return this._Offer.Entity;
			}
			set
			{
				Offer previousValue = this._Offer.Entity;
				if (((previousValue != value) 
							|| (this._Offer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Offer.Entity = null;
						previousValue.WorkOrderHistories.Remove(this);
					}
					this._Offer.Entity = value;
					if ((value != null))
					{
						value.WorkOrderHistories.Add(this);
						this._OfferId = value.Id;
					}
					else
					{
						this._OfferId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Offer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WorkOrders")]
	public partial class WorkOrder : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _CustomerName;
		
		private System.Nullable<int> _CustomerGovernorateID;
		
		private string _CustomerPhone;
		
		private string _CustomerAddress;
		
		private string _CustomerMobile;
		
		private string _CustomerEmail;
		
		private System.Nullable<int> _ServiceProviderID;
		
		private System.Nullable<int> _ServicePackageID;
		
		private System.Nullable<int> _IpPackageID;
		
		private System.Nullable<int> _ResellerID;
		
		private System.Nullable<int> _BranchID;
		
		private string _VPI;
		
		private string _VCI;
		
		private string _UserName;
		
		private string _Password;
		
		private System.Nullable<int> _ExtraGigas;
		
		private System.Nullable<int> _WorkOrderStatusID;
		
		private System.Nullable<System.DateTime> _CreationDate;
		
		private System.Nullable<int> _PaymentTypeID;
		
		private System.Nullable<int> _CentralId;
		
		private System.Nullable<int> _OfferId;
		
		private string _Notes;
		
		private string _PersonalId;
		
		private System.Nullable<System.DateTime> _RequestDate;
		
		private System.Nullable<System.DateTime> _OfferStart;
		
		private string _RouterSerial;
		
		private string _RequestNumber;
		
		private string _CustomerMobile2;
		
		private string _LineOwner;
		
		private System.Nullable<decimal> _Prepaid;
		
		private System.Nullable<decimal> _InstallationCost;
		
		private System.Nullable<decimal> _ContractingCost;
		
		private System.Nullable<bool> _Installed;
		
		private System.Nullable<int> _Installer;
		
		private System.Nullable<System.DateTime> _InstallationTime;
		
		private string _WorkorderNumbers;
		
		private System.Nullable<System.DateTime> _WorkorderDate;
		
		private string _PortNumber;
		
		private string _BlockNumber;
		
		private string _DslamNumbers;
		
		private EntitySet<WorkOrderStatus> _WorkOrderStatus;
		
		private EntitySet<Ticket> _Tickets;
		
		private EntitySet<WorkOrderFile> _WorkOrderFiles;
		
		private EntitySet<WorkOrderHistory> _WorkOrderHistories;
		
		private EntitySet<ResellerRouter> _ResellerRouters;
		
		private EntitySet<Router> _Routers;
		
		private EntitySet<WorkOrderRouter> _WorkOrderRouters;
		
		private EntitySet<Demand> _Demands;
		
		private EntitySet<WorkOrderNote> _WorkOrderNotes;
		
		private EntitySet<CallMessage> _CallMessages;
		
		private EntitySet<UsersTransaction> _UsersTransactions;
		
		private EntitySet<RequestDateHistory> _RequestDateHistories;
		
		private EntitySet<WorkOrderCredit> _WorkOrderCredits;
		
		private EntitySet<RecieveRouter> _RecieveRouters;
		
		private EntitySet<DisCard> _DisCards;
		
		private EntitySet<RequestsNotitfication> _RequestsNotitfications;
		
		private EntitySet<DistributorPaymentRecord> _DistributorPaymentRecords;
		
		private EntitySet<UserTracking> _UserTrackings;
		
		private EntitySet<WorkOrderRequest> _WorkOrderRequests;
		
		private EntityRef<Branch> _Branch;
		
		private EntityRef<Governorate> _Governorate;
		
		private EntityRef<IpPackage> _IpPackage;
		
		private EntityRef<PaymentType> _PaymentType;
		
		private EntityRef<ServicePackage> _ServicePackage;
		
		private EntityRef<ServiceProvider> _ServiceProvider;
		
		private EntityRef<Status> _Status;
		
		private EntityRef<Central> _Central;
		
		private EntityRef<Offer> _Offer;
		
		private EntityRef<User> _User;
		
		private EntityRef<ExtraGiga> _ExtraGiga;
		
		private EntityRef<User> _User1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCustomerNameChanging(string value);
    partial void OnCustomerNameChanged();
    partial void OnCustomerGovernorateIDChanging(System.Nullable<int> value);
    partial void OnCustomerGovernorateIDChanged();
    partial void OnCustomerPhoneChanging(string value);
    partial void OnCustomerPhoneChanged();
    partial void OnCustomerAddressChanging(string value);
    partial void OnCustomerAddressChanged();
    partial void OnCustomerMobileChanging(string value);
    partial void OnCustomerMobileChanged();
    partial void OnCustomerEmailChanging(string value);
    partial void OnCustomerEmailChanged();
    partial void OnServiceProviderIDChanging(System.Nullable<int> value);
    partial void OnServiceProviderIDChanged();
    partial void OnServicePackageIDChanging(System.Nullable<int> value);
    partial void OnServicePackageIDChanged();
    partial void OnIpPackageIDChanging(System.Nullable<int> value);
    partial void OnIpPackageIDChanged();
    partial void OnResellerIDChanging(System.Nullable<int> value);
    partial void OnResellerIDChanged();
    partial void OnBranchIDChanging(System.Nullable<int> value);
    partial void OnBranchIDChanged();
    partial void OnVPIChanging(string value);
    partial void OnVPIChanged();
    partial void OnVCIChanging(string value);
    partial void OnVCIChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnExtraGigaIdChanging(System.Nullable<int> value);
    partial void OnExtraGigaIdChanged();
    partial void OnWorkOrderStatusIDChanging(System.Nullable<int> value);
    partial void OnWorkOrderStatusIDChanged();
    partial void OnCreationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreationDateChanged();
    partial void OnPaymentTypeIDChanging(System.Nullable<int> value);
    partial void OnPaymentTypeIDChanged();
    partial void OnCentralIdChanging(System.Nullable<int> value);
    partial void OnCentralIdChanged();
    partial void OnOfferIdChanging(System.Nullable<int> value);
    partial void OnOfferIdChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnPersonalIdChanging(string value);
    partial void OnPersonalIdChanged();
    partial void OnRequestDateChanging(System.Nullable<System.DateTime> value);
    partial void OnRequestDateChanged();
    partial void OnOfferStartChanging(System.Nullable<System.DateTime> value);
    partial void OnOfferStartChanged();
    partial void OnRouterSerialChanging(string value);
    partial void OnRouterSerialChanged();
    partial void OnRequestNumberChanging(string value);
    partial void OnRequestNumberChanged();
    partial void OnCustomerMobile2Changing(string value);
    partial void OnCustomerMobile2Changed();
    partial void OnLineOwnerChanging(string value);
    partial void OnLineOwnerChanged();
    partial void OnPrepaidChanging(System.Nullable<decimal> value);
    partial void OnPrepaidChanged();
    partial void OnInstallationCostChanging(System.Nullable<decimal> value);
    partial void OnInstallationCostChanged();
    partial void OnContractingCostChanging(System.Nullable<decimal> value);
    partial void OnContractingCostChanged();
    partial void OnInstalledChanging(System.Nullable<bool> value);
    partial void OnInstalledChanged();
    partial void OnInstallerChanging(System.Nullable<int> value);
    partial void OnInstallerChanged();
    partial void OnInstallationTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnInstallationTimeChanged();
    partial void OnWorkorderNumbersChanging(string value);
    partial void OnWorkorderNumbersChanged();
    partial void OnWorkorderDateChanging(System.Nullable<System.DateTime> value);
    partial void OnWorkorderDateChanged();
    partial void OnPortNumberChanging(string value);
    partial void OnPortNumberChanged();
    partial void OnBlockNumberChanging(string value);
    partial void OnBlockNumberChanged();
    partial void OnDslamNumbersChanging(string value);
    partial void OnDslamNumbersChanged();
    #endregion
		
		public WorkOrder()
		{
			this._WorkOrderStatus = new EntitySet<WorkOrderStatus>(new Action<WorkOrderStatus>(this.attach_WorkOrderStatus), new Action<WorkOrderStatus>(this.detach_WorkOrderStatus));
			this._Tickets = new EntitySet<Ticket>(new Action<Ticket>(this.attach_Tickets), new Action<Ticket>(this.detach_Tickets));
			this._WorkOrderFiles = new EntitySet<WorkOrderFile>(new Action<WorkOrderFile>(this.attach_WorkOrderFiles), new Action<WorkOrderFile>(this.detach_WorkOrderFiles));
			this._WorkOrderHistories = new EntitySet<WorkOrderHistory>(new Action<WorkOrderHistory>(this.attach_WorkOrderHistories), new Action<WorkOrderHistory>(this.detach_WorkOrderHistories));
			this._ResellerRouters = new EntitySet<ResellerRouter>(new Action<ResellerRouter>(this.attach_ResellerRouters), new Action<ResellerRouter>(this.detach_ResellerRouters));
			this._Routers = new EntitySet<Router>(new Action<Router>(this.attach_Routers), new Action<Router>(this.detach_Routers));
			this._WorkOrderRouters = new EntitySet<WorkOrderRouter>(new Action<WorkOrderRouter>(this.attach_WorkOrderRouters), new Action<WorkOrderRouter>(this.detach_WorkOrderRouters));
			this._Demands = new EntitySet<Demand>(new Action<Demand>(this.attach_Demands), new Action<Demand>(this.detach_Demands));
			this._WorkOrderNotes = new EntitySet<WorkOrderNote>(new Action<WorkOrderNote>(this.attach_WorkOrderNotes), new Action<WorkOrderNote>(this.detach_WorkOrderNotes));
			this._CallMessages = new EntitySet<CallMessage>(new Action<CallMessage>(this.attach_CallMessages), new Action<CallMessage>(this.detach_CallMessages));
			this._UsersTransactions = new EntitySet<UsersTransaction>(new Action<UsersTransaction>(this.attach_UsersTransactions), new Action<UsersTransaction>(this.detach_UsersTransactions));
			this._RequestDateHistories = new EntitySet<RequestDateHistory>(new Action<RequestDateHistory>(this.attach_RequestDateHistories), new Action<RequestDateHistory>(this.detach_RequestDateHistories));
			this._WorkOrderCredits = new EntitySet<WorkOrderCredit>(new Action<WorkOrderCredit>(this.attach_WorkOrderCredits), new Action<WorkOrderCredit>(this.detach_WorkOrderCredits));
			this._RecieveRouters = new EntitySet<RecieveRouter>(new Action<RecieveRouter>(this.attach_RecieveRouters), new Action<RecieveRouter>(this.detach_RecieveRouters));
			this._DisCards = new EntitySet<DisCard>(new Action<DisCard>(this.attach_DisCards), new Action<DisCard>(this.detach_DisCards));
			this._RequestsNotitfications = new EntitySet<RequestsNotitfication>(new Action<RequestsNotitfication>(this.attach_RequestsNotitfications), new Action<RequestsNotitfication>(this.detach_RequestsNotitfications));
			this._DistributorPaymentRecords = new EntitySet<DistributorPaymentRecord>(new Action<DistributorPaymentRecord>(this.attach_DistributorPaymentRecords), new Action<DistributorPaymentRecord>(this.detach_DistributorPaymentRecords));
			this._UserTrackings = new EntitySet<UserTracking>(new Action<UserTracking>(this.attach_UserTrackings), new Action<UserTracking>(this.detach_UserTrackings));
			this._WorkOrderRequests = new EntitySet<WorkOrderRequest>(new Action<WorkOrderRequest>(this.attach_WorkOrderRequests), new Action<WorkOrderRequest>(this.detach_WorkOrderRequests));
			this._Branch = default(EntityRef<Branch>);
			this._Governorate = default(EntityRef<Governorate>);
			this._IpPackage = default(EntityRef<IpPackage>);
			this._PaymentType = default(EntityRef<PaymentType>);
			this._ServicePackage = default(EntityRef<ServicePackage>);
			this._ServiceProvider = default(EntityRef<ServiceProvider>);
			this._Status = default(EntityRef<Status>);
			this._Central = default(EntityRef<Central>);
			this._Offer = default(EntityRef<Offer>);
			this._User = default(EntityRef<User>);
			this._ExtraGiga = default(EntityRef<ExtraGiga>);
			this._User1 = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerName", DbType="NVarChar(255)")]
		public string CustomerName
		{
			get
			{
				return this._CustomerName;
			}
			set
			{
				if ((this._CustomerName != value))
				{
					this.OnCustomerNameChanging(value);
					this.SendPropertyChanging();
					this._CustomerName = value;
					this.SendPropertyChanged("CustomerName");
					this.OnCustomerNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerGovernorateID", DbType="Int")]
		public System.Nullable<int> CustomerGovernorateID
		{
			get
			{
				return this._CustomerGovernorateID;
			}
			set
			{
				if ((this._CustomerGovernorateID != value))
				{
					if (this._Governorate.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerGovernorateIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerGovernorateID = value;
					this.SendPropertyChanged("CustomerGovernorateID");
					this.OnCustomerGovernorateIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerPhone", DbType="NVarChar(50)")]
		public string CustomerPhone
		{
			get
			{
				return this._CustomerPhone;
			}
			set
			{
				if ((this._CustomerPhone != value))
				{
					this.OnCustomerPhoneChanging(value);
					this.SendPropertyChanging();
					this._CustomerPhone = value;
					this.SendPropertyChanged("CustomerPhone");
					this.OnCustomerPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerAddress", DbType="NVarChar(255)")]
		public string CustomerAddress
		{
			get
			{
				return this._CustomerAddress;
			}
			set
			{
				if ((this._CustomerAddress != value))
				{
					this.OnCustomerAddressChanging(value);
					this.SendPropertyChanging();
					this._CustomerAddress = value;
					this.SendPropertyChanged("CustomerAddress");
					this.OnCustomerAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerMobile", DbType="NVarChar(50)")]
		public string CustomerMobile
		{
			get
			{
				return this._CustomerMobile;
			}
			set
			{
				if ((this._CustomerMobile != value))
				{
					this.OnCustomerMobileChanging(value);
					this.SendPropertyChanging();
					this._CustomerMobile = value;
					this.SendPropertyChanged("CustomerMobile");
					this.OnCustomerMobileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerEmail", DbType="NVarChar(255)")]
		public string CustomerEmail
		{
			get
			{
				return this._CustomerEmail;
			}
			set
			{
				if ((this._CustomerEmail != value))
				{
					this.OnCustomerEmailChanging(value);
					this.SendPropertyChanging();
					this._CustomerEmail = value;
					this.SendPropertyChanged("CustomerEmail");
					this.OnCustomerEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceProviderID", DbType="Int")]
		public System.Nullable<int> ServiceProviderID
		{
			get
			{
				return this._ServiceProviderID;
			}
			set
			{
				if ((this._ServiceProviderID != value))
				{
					if (this._ServiceProvider.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnServiceProviderIDChanging(value);
					this.SendPropertyChanging();
					this._ServiceProviderID = value;
					this.SendPropertyChanged("ServiceProviderID");
					this.OnServiceProviderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServicePackageID", DbType="Int")]
		public System.Nullable<int> ServicePackageID
		{
			get
			{
				return this._ServicePackageID;
			}
			set
			{
				if ((this._ServicePackageID != value))
				{
					if (this._ServicePackage.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnServicePackageIDChanging(value);
					this.SendPropertyChanging();
					this._ServicePackageID = value;
					this.SendPropertyChanged("ServicePackageID");
					this.OnServicePackageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IpPackageID", DbType="Int")]
		public System.Nullable<int> IpPackageID
		{
			get
			{
				return this._IpPackageID;
			}
			set
			{
				if ((this._IpPackageID != value))
				{
					if (this._IpPackage.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIpPackageIDChanging(value);
					this.SendPropertyChanging();
					this._IpPackageID = value;
					this.SendPropertyChanged("IpPackageID");
					this.OnIpPackageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResellerID", DbType="Int")]
		public System.Nullable<int> ResellerID
		{
			get
			{
				return this._ResellerID;
			}
			set
			{
				if ((this._ResellerID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnResellerIDChanging(value);
					this.SendPropertyChanging();
					this._ResellerID = value;
					this.SendPropertyChanged("ResellerID");
					this.OnResellerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchID", DbType="Int")]
		public System.Nullable<int> BranchID
		{
			get
			{
				return this._BranchID;
			}
			set
			{
				if ((this._BranchID != value))
				{
					if (this._Branch.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBranchIDChanging(value);
					this.SendPropertyChanging();
					this._BranchID = value;
					this.SendPropertyChanged("BranchID");
					this.OnBranchIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VPI", DbType="NVarChar(255)")]
		public string VPI
		{
			get
			{
				return this._VPI;
			}
			set
			{
				if ((this._VPI != value))
				{
					this.OnVPIChanging(value);
					this.SendPropertyChanging();
					this._VPI = value;
					this.SendPropertyChanged("VPI");
					this.OnVPIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VCI", DbType="NVarChar(255)")]
		public string VCI
		{
			get
			{
				return this._VCI;
			}
			set
			{
				if ((this._VCI != value))
				{
					this.OnVCIChanging(value);
					this.SendPropertyChanging();
					this._VCI = value;
					this.SendPropertyChanged("VCI");
					this.OnVCIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(255)")]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(255)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExtraGigas", DbType="int")]
		public System.Nullable<int> ExtraGigaId
		{
			get
			{
				return this._ExtraGigas;
			}
			set
			{
				if ((this._ExtraGigas != value))
				{
					if (this._ExtraGiga.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnExtraGigaIdChanging(value);
					this.SendPropertyChanging();
					this._ExtraGigas = value;
					this.SendPropertyChanged("ExtraGigaId");
					this.OnExtraGigaIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkOrderStatusID", DbType="Int")]
		public System.Nullable<int> WorkOrderStatusID
		{
			get
			{
				return this._WorkOrderStatusID;
			}
			set
			{
				if ((this._WorkOrderStatusID != value))
				{
					if (this._Status.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWorkOrderStatusIDChanging(value);
					this.SendPropertyChanging();
					this._WorkOrderStatusID = value;
					this.SendPropertyChanged("WorkOrderStatusID");
					this.OnWorkOrderStatusIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentTypeID", DbType="Int")]
		public System.Nullable<int> PaymentTypeID
		{
			get
			{
				return this._PaymentTypeID;
			}
			set
			{
				if ((this._PaymentTypeID != value))
				{
					if (this._PaymentType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPaymentTypeIDChanging(value);
					this.SendPropertyChanging();
					this._PaymentTypeID = value;
					this.SendPropertyChanged("PaymentTypeID");
					this.OnPaymentTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CentralId")]
		public System.Nullable<int> CentralId
		{
			get
			{
				return this._CentralId;
			}
			set
			{
				if ((this._CentralId != value))
				{
					if (this._Central.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCentralIdChanging(value);
					this.SendPropertyChanging();
					this._CentralId = value;
					this.SendPropertyChanged("CentralId");
					this.OnCentralIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OfferId")]
		public System.Nullable<int> OfferId
		{
			get
			{
				return this._OfferId;
			}
			set
			{
				if ((this._OfferId != value))
				{
					if (this._Offer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOfferIdChanging(value);
					this.SendPropertyChanging();
					this._OfferId = value;
					this.SendPropertyChanged("OfferId");
					this.OnOfferIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="nvarchar(MAX)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonalId", DbType="nvarchar(50)")]
		public string PersonalId
		{
			get
			{
				return this._PersonalId;
			}
			set
			{
				if ((this._PersonalId != value))
				{
					this.OnPersonalIdChanging(value);
					this.SendPropertyChanging();
					this._PersonalId = value;
					this.SendPropertyChanged("PersonalId");
					this.OnPersonalIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestDate", DbType="datetime")]
		public System.Nullable<System.DateTime> RequestDate
		{
			get
			{
				return this._RequestDate;
			}
			set
			{
				if ((this._RequestDate != value))
				{
					this.OnRequestDateChanging(value);
					this.SendPropertyChanging();
					this._RequestDate = value;
					this.SendPropertyChanged("RequestDate");
					this.OnRequestDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OfferStart", DbType="datetime")]
		public System.Nullable<System.DateTime> OfferStart
		{
			get
			{
				return this._OfferStart;
			}
			set
			{
				if ((this._OfferStart != value))
				{
					this.OnOfferStartChanging(value);
					this.SendPropertyChanging();
					this._OfferStart = value;
					this.SendPropertyChanged("OfferStart");
					this.OnOfferStartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RouterSerial", DbType="nvarchar(355)")]
		public string RouterSerial
		{
			get
			{
				return this._RouterSerial;
			}
			set
			{
				if ((this._RouterSerial != value))
				{
					this.OnRouterSerialChanging(value);
					this.SendPropertyChanging();
					this._RouterSerial = value;
					this.SendPropertyChanged("RouterSerial");
					this.OnRouterSerialChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestNumber", DbType="nvarchar(55)")]
		public string RequestNumber
		{
			get
			{
				return this._RequestNumber;
			}
			set
			{
				if ((this._RequestNumber != value))
				{
					this.OnRequestNumberChanging(value);
					this.SendPropertyChanging();
					this._RequestNumber = value;
					this.SendPropertyChanged("RequestNumber");
					this.OnRequestNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerMobile2", DbType="nvarchar(50)")]
		public string CustomerMobile2
		{
			get
			{
				return this._CustomerMobile2;
			}
			set
			{
				if ((this._CustomerMobile2 != value))
				{
					this.OnCustomerMobile2Changing(value);
					this.SendPropertyChanging();
					this._CustomerMobile2 = value;
					this.SendPropertyChanged("CustomerMobile2");
					this.OnCustomerMobile2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LineOwner", DbType="nvarchar(555)")]
		public string LineOwner
		{
			get
			{
				return this._LineOwner;
			}
			set
			{
				if ((this._LineOwner != value))
				{
					this.OnLineOwnerChanging(value);
					this.SendPropertyChanging();
					this._LineOwner = value;
					this.SendPropertyChanged("LineOwner");
					this.OnLineOwnerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Prepaid", DbType="money")]
		public System.Nullable<decimal> Prepaid
		{
			get
			{
				return this._Prepaid;
			}
			set
			{
				if ((this._Prepaid != value))
				{
					this.OnPrepaidChanging(value);
					this.SendPropertyChanging();
					this._Prepaid = value;
					this.SendPropertyChanged("Prepaid");
					this.OnPrepaidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstallationCost", DbType="money")]
		public System.Nullable<decimal> InstallationCost
		{
			get
			{
				return this._InstallationCost;
			}
			set
			{
				if ((this._InstallationCost != value))
				{
					this.OnInstallationCostChanging(value);
					this.SendPropertyChanging();
					this._InstallationCost = value;
					this.SendPropertyChanged("InstallationCost");
					this.OnInstallationCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContractingCost", DbType="money")]
		public System.Nullable<decimal> ContractingCost
		{
			get
			{
				return this._ContractingCost;
			}
			set
			{
				if ((this._ContractingCost != value))
				{
					this.OnContractingCostChanging(value);
					this.SendPropertyChanging();
					this._ContractingCost = value;
					this.SendPropertyChanged("ContractingCost");
					this.OnContractingCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Installed", DbType="bit")]
		public System.Nullable<bool> Installed
		{
			get
			{
				return this._Installed;
			}
			set
			{
				if ((this._Installed != value))
				{
					this.OnInstalledChanging(value);
					this.SendPropertyChanging();
					this._Installed = value;
					this.SendPropertyChanged("Installed");
					this.OnInstalledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Installer", DbType="int")]
		public System.Nullable<int> Installer
		{
			get
			{
				return this._Installer;
			}
			set
			{
				if ((this._Installer != value))
				{
					if (this._User1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInstallerChanging(value);
					this.SendPropertyChanging();
					this._Installer = value;
					this.SendPropertyChanged("Installer");
					this.OnInstallerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstallationTime", DbType="datetime")]
		public System.Nullable<System.DateTime> InstallationTime
		{
			get
			{
				return this._InstallationTime;
			}
			set
			{
				if ((this._InstallationTime != value))
				{
					this.OnInstallationTimeChanging(value);
					this.SendPropertyChanging();
					this._InstallationTime = value;
					this.SendPropertyChanged("InstallationTime");
					this.OnInstallationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="WorkorderNumber", Storage="_WorkorderNumbers", DbType="nvarchar(250)")]
		public string WorkorderNumbers
		{
			get
			{
				return this._WorkorderNumbers;
			}
			set
			{
				if ((this._WorkorderNumbers != value))
				{
					this.OnWorkorderNumbersChanging(value);
					this.SendPropertyChanging();
					this._WorkorderNumbers = value;
					this.SendPropertyChanged("WorkorderNumbers");
					this.OnWorkorderNumbersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkorderDate", DbType="datetime")]
		public System.Nullable<System.DateTime> WorkorderDate
		{
			get
			{
				return this._WorkorderDate;
			}
			set
			{
				if ((this._WorkorderDate != value))
				{
					this.OnWorkorderDateChanging(value);
					this.SendPropertyChanging();
					this._WorkorderDate = value;
					this.SendPropertyChanged("WorkorderDate");
					this.OnWorkorderDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PortNumber", DbType="nvarchar(250)")]
		public string PortNumber
		{
			get
			{
				return this._PortNumber;
			}
			set
			{
				if ((this._PortNumber != value))
				{
					this.OnPortNumberChanging(value);
					this.SendPropertyChanging();
					this._PortNumber = value;
					this.SendPropertyChanged("PortNumber");
					this.OnPortNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BlockNumber", DbType="nvarchar(250)")]
		public string BlockNumber
		{
			get
			{
				return this._BlockNumber;
			}
			set
			{
				if ((this._BlockNumber != value))
				{
					this.OnBlockNumberChanging(value);
					this.SendPropertyChanging();
					this._BlockNumber = value;
					this.SendPropertyChanged("BlockNumber");
					this.OnBlockNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="DslamNumber", Storage="_DslamNumbers", DbType="nvarchar(250)")]
		public string DslamNumbers
		{
			get
			{
				return this._DslamNumbers;
			}
			set
			{
				if ((this._DslamNumbers != value))
				{
					this.OnDslamNumbersChanging(value);
					this.SendPropertyChanging();
					this._DslamNumbers = value;
					this.SendPropertyChanged("DslamNumbers");
					this.OnDslamNumbersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WorkOrder_WorkOrderStatus", Storage="_WorkOrderStatus", ThisKey="ID", OtherKey="WorkOrderID")]
		public EntitySet<WorkOrderStatus> WorkOrderStatus
		{
			get
			{
				return this._WorkOrderStatus;
			}
			set
			{
				this._WorkOrderStatus.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WorkOrder_Ticket", Storage="_Tickets", ThisKey="ID", OtherKey="WorkOrderID")]
		public EntitySet<Ticket> Tickets
		{
			get
			{
				return this._Tickets;
			}
			set
			{
				this._Tickets.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WorkOrder_WorkOrderFile", Storage="_WorkOrderFiles", ThisKey="ID", OtherKey="WorkOrderID")]
		public EntitySet<WorkOrderFile> WorkOrderFiles
		{
			get
			{
				return this._WorkOrderFiles;
			}
			set
			{
				this._WorkOrderFiles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WorkOrder_WorkOrderHistory", Storage="_WorkOrderHistories", ThisKey="ID", OtherKey="WOID")]
		public EntitySet<WorkOrderHistory> WorkOrderHistories
		{
			get
			{
				return this._WorkOrderHistories;
			}
			set
			{
				this._WorkOrderHistories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WorkOrder_ResellerRouter", Storage="_ResellerRouters", ThisKey="ID", OtherKey="WorkOrderId")]
		public EntitySet<ResellerRouter> ResellerRouters
		{
			get
			{
				return this._ResellerRouters;
			}
			set
			{
				this._ResellerRouters.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WorkOrder_Router", Storage="_Routers", ThisKey="ID", OtherKey="WorkOrderId")]
		public EntitySet<Router> Routers
		{
			get
			{
				return this._Routers;
			}
			set
			{
				this._Routers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WorkOrder_WorkOrderRouter", Storage="_WorkOrderRouters", ThisKey="ID", OtherKey="WorkOrderId")]
		public EntitySet<WorkOrderRouter> WorkOrderRouters
		{
			get
			{
				return this._WorkOrderRouters;
			}
			set
			{
				this._WorkOrderRouters.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WorkOrder_Demand", Storage="_Demands", ThisKey="ID", OtherKey="WorkOrderId")]
		public EntitySet<Demand> Demands
		{
			get
			{
				return this._Demands;
			}
			set
			{
				this._Demands.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WorkOrder_WorkOrderNote", Storage="_WorkOrderNotes", ThisKey="ID", OtherKey="WorkOrderId")]
		public EntitySet<WorkOrderNote> WorkOrderNotes
		{
			get
			{
				return this._WorkOrderNotes;
			}
			set
			{
				this._WorkOrderNotes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WorkOrder_CallMessage", Storage="_CallMessages", ThisKey="ID", OtherKey="WorkOrder_Id")]
		public EntitySet<CallMessage> CallMessages
		{
			get
			{
				return this._CallMessages;
			}
			set
			{
				this._CallMessages.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WorkOrder_UsersTransaction", Storage="_UsersTransactions", ThisKey="ID", OtherKey="WorkOrderID")]
		public EntitySet<UsersTransaction> UsersTransactions
		{
			get
			{
				return this._UsersTransactions;
			}
			set
			{
				this._UsersTransactions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WorkOrder_RequestDateHistory", Storage="_RequestDateHistories", ThisKey="ID", OtherKey="WorkOrderId")]
		public EntitySet<RequestDateHistory> RequestDateHistories
		{
			get
			{
				return this._RequestDateHistories;
			}
			set
			{
				this._RequestDateHistories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WorkOrder_WorkOrderCredit", Storage="_WorkOrderCredits", ThisKey="ID", OtherKey="WorkOrderId")]
		public EntitySet<WorkOrderCredit> WorkOrderCredits
		{
			get
			{
				return this._WorkOrderCredits;
			}
			set
			{
				this._WorkOrderCredits.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WorkOrder_RecieveRouter", Storage="_RecieveRouters", ThisKey="ID", OtherKey="WorkOrderId")]
		public EntitySet<RecieveRouter> RecieveRouters
		{
			get
			{
				return this._RecieveRouters;
			}
			set
			{
				this._RecieveRouters.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WorkOrder_DisCard", Storage="_DisCards", ThisKey="ID", OtherKey="WorkOrderID")]
		public EntitySet<DisCard> DisCards
		{
			get
			{
				return this._DisCards;
			}
			set
			{
				this._DisCards.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WorkOrder_RequestsNotitfication", Storage="_RequestsNotitfications", ThisKey="ID", OtherKey="WorkOrderId")]
		public EntitySet<RequestsNotitfication> RequestsNotitfications
		{
			get
			{
				return this._RequestsNotitfications;
			}
			set
			{
				this._RequestsNotitfications.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WorkOrder_DistributorPaymentRecord", Storage="_DistributorPaymentRecords", ThisKey="ID", OtherKey="WorkOrderId")]
		public EntitySet<DistributorPaymentRecord> DistributorPaymentRecords
		{
			get
			{
				return this._DistributorPaymentRecords;
			}
			set
			{
				this._DistributorPaymentRecords.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WorkOrder_UserTracking", Storage="_UserTrackings", ThisKey="ID", OtherKey="WorkOrderId")]
		public EntitySet<UserTracking> UserTrackings
		{
			get
			{
				return this._UserTrackings;
			}
			set
			{
				this._UserTrackings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WorkOrder_WorkOrderRequest", Storage="_WorkOrderRequests", ThisKey="ID", OtherKey="WorkOrderID")]
		public EntitySet<WorkOrderRequest> WorkOrderRequests
		{
			get
			{
				return this._WorkOrderRequests;
			}
			set
			{
				this._WorkOrderRequests.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Branch_WorkOrder", Storage="_Branch", ThisKey="BranchID", OtherKey="ID", IsForeignKey=true)]
		public Branch Branch
		{
			get
			{
				return this._Branch.Entity;
			}
			set
			{
				Branch previousValue = this._Branch.Entity;
				if (((previousValue != value) 
							|| (this._Branch.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Branch.Entity = null;
						previousValue.WorkOrders.Remove(this);
					}
					this._Branch.Entity = value;
					if ((value != null))
					{
						value.WorkOrders.Add(this);
						this._BranchID = value.ID;
					}
					else
					{
						this._BranchID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Branch");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Governorate_WorkOrder", Storage="_Governorate", ThisKey="CustomerGovernorateID", OtherKey="ID", IsForeignKey=true)]
		public Governorate Governorate
		{
			get
			{
				return this._Governorate.Entity;
			}
			set
			{
				Governorate previousValue = this._Governorate.Entity;
				if (((previousValue != value) 
							|| (this._Governorate.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Governorate.Entity = null;
						previousValue.WorkOrders.Remove(this);
					}
					this._Governorate.Entity = value;
					if ((value != null))
					{
						value.WorkOrders.Add(this);
						this._CustomerGovernorateID = value.ID;
					}
					else
					{
						this._CustomerGovernorateID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Governorate");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="IpPackage_WorkOrder", Storage="_IpPackage", ThisKey="IpPackageID", OtherKey="ID", IsForeignKey=true)]
		public IpPackage IpPackage
		{
			get
			{
				return this._IpPackage.Entity;
			}
			set
			{
				IpPackage previousValue = this._IpPackage.Entity;
				if (((previousValue != value) 
							|| (this._IpPackage.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._IpPackage.Entity = null;
						previousValue.WorkOrders.Remove(this);
					}
					this._IpPackage.Entity = value;
					if ((value != null))
					{
						value.WorkOrders.Add(this);
						this._IpPackageID = value.ID;
					}
					else
					{
						this._IpPackageID = default(Nullable<int>);
					}
					this.SendPropertyChanged("IpPackage");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PaymentType_WorkOrder", Storage="_PaymentType", ThisKey="PaymentTypeID", OtherKey="ID", IsForeignKey=true)]
		public PaymentType PaymentType
		{
			get
			{
				return this._PaymentType.Entity;
			}
			set
			{
				PaymentType previousValue = this._PaymentType.Entity;
				if (((previousValue != value) 
							|| (this._PaymentType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PaymentType.Entity = null;
						previousValue.WorkOrders.Remove(this);
					}
					this._PaymentType.Entity = value;
					if ((value != null))
					{
						value.WorkOrders.Add(this);
						this._PaymentTypeID = value.ID;
					}
					else
					{
						this._PaymentTypeID = default(Nullable<int>);
					}
					this.SendPropertyChanged("PaymentType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ServicePackage_WorkOrder", Storage="_ServicePackage", ThisKey="ServicePackageID", OtherKey="ID", IsForeignKey=true)]
		public ServicePackage ServicePackage
		{
			get
			{
				return this._ServicePackage.Entity;
			}
			set
			{
				ServicePackage previousValue = this._ServicePackage.Entity;
				if (((previousValue != value) 
							|| (this._ServicePackage.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ServicePackage.Entity = null;
						previousValue.WorkOrders.Remove(this);
					}
					this._ServicePackage.Entity = value;
					if ((value != null))
					{
						value.WorkOrders.Add(this);
						this._ServicePackageID = value.ID;
					}
					else
					{
						this._ServicePackageID = default(Nullable<int>);
					}
					this.SendPropertyChanged("ServicePackage");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ServiceProvider_WorkOrder", Storage="_ServiceProvider", ThisKey="ServiceProviderID", OtherKey="ID", IsForeignKey=true)]
		public ServiceProvider ServiceProvider
		{
			get
			{
				return this._ServiceProvider.Entity;
			}
			set
			{
				ServiceProvider previousValue = this._ServiceProvider.Entity;
				if (((previousValue != value) 
							|| (this._ServiceProvider.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ServiceProvider.Entity = null;
						previousValue.WorkOrders.Remove(this);
					}
					this._ServiceProvider.Entity = value;
					if ((value != null))
					{
						value.WorkOrders.Add(this);
						this._ServiceProviderID = value.ID;
					}
					else
					{
						this._ServiceProviderID = default(Nullable<int>);
					}
					this.SendPropertyChanged("ServiceProvider");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Status_WorkOrder", Storage="_Status", ThisKey="WorkOrderStatusID", OtherKey="ID", IsForeignKey=true)]
		public Status Status
		{
			get
			{
				return this._Status.Entity;
			}
			set
			{
				Status previousValue = this._Status.Entity;
				if (((previousValue != value) 
							|| (this._Status.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Status.Entity = null;
						previousValue.WorkOrders.Remove(this);
					}
					this._Status.Entity = value;
					if ((value != null))
					{
						value.WorkOrders.Add(this);
						this._WorkOrderStatusID = value.ID;
					}
					else
					{
						this._WorkOrderStatusID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Status");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Central_WorkOrder", Storage="_Central", ThisKey="CentralId", OtherKey="Id", IsForeignKey=true)]
		public Central Central
		{
			get
			{
				return this._Central.Entity;
			}
			set
			{
				Central previousValue = this._Central.Entity;
				if (((previousValue != value) 
							|| (this._Central.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Central.Entity = null;
						previousValue.WorkOrders.Remove(this);
					}
					this._Central.Entity = value;
					if ((value != null))
					{
						value.WorkOrders.Add(this);
						this._CentralId = value.Id;
					}
					else
					{
						this._CentralId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Central");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Offer_WorkOrder", Storage="_Offer", ThisKey="OfferId", OtherKey="Id", IsForeignKey=true)]
		public Offer Offer
		{
			get
			{
				return this._Offer.Entity;
			}
			set
			{
				Offer previousValue = this._Offer.Entity;
				if (((previousValue != value) 
							|| (this._Offer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Offer.Entity = null;
						previousValue.WorkOrders.Remove(this);
					}
					this._Offer.Entity = value;
					if ((value != null))
					{
						value.WorkOrders.Add(this);
						this._OfferId = value.Id;
					}
					else
					{
						this._OfferId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Offer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_WorkOrder", Storage="_User", ThisKey="ResellerID", OtherKey="ID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.WorkOrders.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.WorkOrders.Add(this);
						this._ResellerID = value.ID;
					}
					else
					{
						this._ResellerID = default(Nullable<int>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ExtraGiga_WorkOrder", Storage="_ExtraGiga", ThisKey="ExtraGigaId", OtherKey="Id", IsForeignKey=true)]
		public ExtraGiga ExtraGiga
		{
			get
			{
				return this._ExtraGiga.Entity;
			}
			set
			{
				ExtraGiga previousValue = this._ExtraGiga.Entity;
				if (((previousValue != value) 
							|| (this._ExtraGiga.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ExtraGiga.Entity = null;
						previousValue.WorkOrders.Remove(this);
					}
					this._ExtraGiga.Entity = value;
					if ((value != null))
					{
						value.WorkOrders.Add(this);
						this._ExtraGigas = value.Id;
					}
					else
					{
						this._ExtraGigas = default(Nullable<int>);
					}
					this.SendPropertyChanged("ExtraGiga");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_WorkOrder1", Storage="_User1", ThisKey="Installer", OtherKey="ID", IsForeignKey=true)]
		public User User1
		{
			get
			{
				return this._User1.Entity;
			}
			set
			{
				User previousValue = this._User1.Entity;
				if (((previousValue != value) 
							|| (this._User1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User1.Entity = null;
						previousValue.WorkOrders1.Remove(this);
					}
					this._User1.Entity = value;
					if ((value != null))
					{
						value.WorkOrders1.Add(this);
						this._Installer = value.ID;
					}
					else
					{
						this._Installer = default(Nullable<int>);
					}
					this.SendPropertyChanged("User1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_WorkOrderStatus(WorkOrderStatus entity)
		{
			this.SendPropertyChanging();
			entity.WorkOrder = this;
		}
		
		private void detach_WorkOrderStatus(WorkOrderStatus entity)
		{
			this.SendPropertyChanging();
			entity.WorkOrder = null;
		}
		
		private void attach_Tickets(Ticket entity)
		{
			this.SendPropertyChanging();
			entity.WorkOrder = this;
		}
		
		private void detach_Tickets(Ticket entity)
		{
			this.SendPropertyChanging();
			entity.WorkOrder = null;
		}
		
		private void attach_WorkOrderFiles(WorkOrderFile entity)
		{
			this.SendPropertyChanging();
			entity.WorkOrder = this;
		}
		
		private void detach_WorkOrderFiles(WorkOrderFile entity)
		{
			this.SendPropertyChanging();
			entity.WorkOrder = null;
		}
		
		private void attach_WorkOrderHistories(WorkOrderHistory entity)
		{
			this.SendPropertyChanging();
			entity.WorkOrder = this;
		}
		
		private void detach_WorkOrderHistories(WorkOrderHistory entity)
		{
			this.SendPropertyChanging();
			entity.WorkOrder = null;
		}
		
		private void attach_ResellerRouters(ResellerRouter entity)
		{
			this.SendPropertyChanging();
			entity.WorkOrder = this;
		}
		
		private void detach_ResellerRouters(ResellerRouter entity)
		{
			this.SendPropertyChanging();
			entity.WorkOrder = null;
		}
		
		private void attach_Routers(Router entity)
		{
			this.SendPropertyChanging();
			entity.WorkOrder = this;
		}
		
		private void detach_Routers(Router entity)
		{
			this.SendPropertyChanging();
			entity.WorkOrder = null;
		}
		
		private void attach_WorkOrderRouters(WorkOrderRouter entity)
		{
			this.SendPropertyChanging();
			entity.WorkOrder = this;
		}
		
		private void detach_WorkOrderRouters(WorkOrderRouter entity)
		{
			this.SendPropertyChanging();
			entity.WorkOrder = null;
		}
		
		private void attach_Demands(Demand entity)
		{
			this.SendPropertyChanging();
			entity.WorkOrder = this;
		}
		
		private void detach_Demands(Demand entity)
		{
			this.SendPropertyChanging();
			entity.WorkOrder = null;
		}
		
		private void attach_WorkOrderNotes(WorkOrderNote entity)
		{
			this.SendPropertyChanging();
			entity.WorkOrder = this;
		}
		
		private void detach_WorkOrderNotes(WorkOrderNote entity)
		{
			this.SendPropertyChanging();
			entity.WorkOrder = null;
		}
		
		private void attach_CallMessages(CallMessage entity)
		{
			this.SendPropertyChanging();
			entity.WorkOrder = this;
		}
		
		private void detach_CallMessages(CallMessage entity)
		{
			this.SendPropertyChanging();
			entity.WorkOrder = null;
		}
		
		private void attach_UsersTransactions(UsersTransaction entity)
		{
			this.SendPropertyChanging();
			entity.WorkOrder = this;
		}
		
		private void detach_UsersTransactions(UsersTransaction entity)
		{
			this.SendPropertyChanging();
			entity.WorkOrder = null;
		}
		
		private void attach_RequestDateHistories(RequestDateHistory entity)
		{
			this.SendPropertyChanging();
			entity.WorkOrder = this;
		}
		
		private void detach_RequestDateHistories(RequestDateHistory entity)
		{
			this.SendPropertyChanging();
			entity.WorkOrder = null;
		}
		
		private void attach_WorkOrderCredits(WorkOrderCredit entity)
		{
			this.SendPropertyChanging();
			entity.WorkOrder = this;
		}
		
		private void detach_WorkOrderCredits(WorkOrderCredit entity)
		{
			this.SendPropertyChanging();
			entity.WorkOrder = null;
		}
		
		private void attach_RecieveRouters(RecieveRouter entity)
		{
			this.SendPropertyChanging();
			entity.WorkOrder = this;
		}
		
		private void detach_RecieveRouters(RecieveRouter entity)
		{
			this.SendPropertyChanging();
			entity.WorkOrder = null;
		}
		
		private void attach_DisCards(DisCard entity)
		{
			this.SendPropertyChanging();
			entity.WorkOrder = this;
		}
		
		private void detach_DisCards(DisCard entity)
		{
			this.SendPropertyChanging();
			entity.WorkOrder = null;
		}
		
		private void attach_RequestsNotitfications(RequestsNotitfication entity)
		{
			this.SendPropertyChanging();
			entity.WorkOrder = this;
		}
		
		private void detach_RequestsNotitfications(RequestsNotitfication entity)
		{
			this.SendPropertyChanging();
			entity.WorkOrder = null;
		}
		
		private void attach_DistributorPaymentRecords(DistributorPaymentRecord entity)
		{
			this.SendPropertyChanging();
			entity.WorkOrder = this;
		}
		
		private void detach_DistributorPaymentRecords(DistributorPaymentRecord entity)
		{
			this.SendPropertyChanging();
			entity.WorkOrder = null;
		}
		
		private void attach_UserTrackings(UserTracking entity)
		{
			this.SendPropertyChanging();
			entity.WorkOrder = this;
		}
		
		private void detach_UserTrackings(UserTracking entity)
		{
			this.SendPropertyChanging();
			entity.WorkOrder = null;
		}
		
		private void attach_WorkOrderRequests(WorkOrderRequest entity)
		{
			this.SendPropertyChanging();
			entity.WorkOrder = this;
		}
		
		private void detach_WorkOrderRequests(WorkOrderRequest entity)
		{
			this.SendPropertyChanging();
			entity.WorkOrder = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Receipts")]
	public partial class Receipt : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _ID;
		
		private System.Nullable<decimal> _UserTransationID;
		
		private System.Nullable<System.DateTime> _PrcessDate;
		
		private string _Notes;
		
		private System.Nullable<int> _DemandId;
		
		private EntityRef<Demand> _Demand;
		
		private EntityRef<UsersTransaction> _UsersTransaction;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(decimal value);
    partial void OnIDChanged();
    partial void OnUserTransationIDChanging(System.Nullable<decimal> value);
    partial void OnUserTransationIDChanged();
    partial void OnPrcessDateChanging(System.Nullable<System.DateTime> value);
    partial void OnPrcessDateChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnDemandIdChanging(System.Nullable<int> value);
    partial void OnDemandIdChanged();
    #endregion
		
		public Receipt()
		{
			this._Demand = default(EntityRef<Demand>);
			this._UsersTransaction = default(EntityRef<UsersTransaction>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public decimal ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserTransationID", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> UserTransationID
		{
			get
			{
				return this._UserTransationID;
			}
			set
			{
				if ((this._UserTransationID != value))
				{
					if (this._UsersTransaction.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserTransationIDChanging(value);
					this.SendPropertyChanging();
					this._UserTransationID = value;
					this.SendPropertyChanged("UserTransationID");
					this.OnUserTransationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrcessDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> PrcessDate
		{
			get
			{
				return this._PrcessDate;
			}
			set
			{
				if ((this._PrcessDate != value))
				{
					this.OnPrcessDateChanging(value);
					this.SendPropertyChanging();
					this._PrcessDate = value;
					this.SendPropertyChanged("PrcessDate");
					this.OnPrcessDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(MAX)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DemandId", DbType="int")]
		public System.Nullable<int> DemandId
		{
			get
			{
				return this._DemandId;
			}
			set
			{
				if ((this._DemandId != value))
				{
					if (this._Demand.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDemandIdChanging(value);
					this.SendPropertyChanging();
					this._DemandId = value;
					this.SendPropertyChanged("DemandId");
					this.OnDemandIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Demand_Receipt", Storage="_Demand", ThisKey="DemandId", OtherKey="Id", IsForeignKey=true)]
		public Demand Demand
		{
			get
			{
				return this._Demand.Entity;
			}
			set
			{
				Demand previousValue = this._Demand.Entity;
				if (((previousValue != value) 
							|| (this._Demand.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Demand.Entity = null;
						previousValue.Receipts.Remove(this);
					}
					this._Demand.Entity = value;
					if ((value != null))
					{
						value.Receipts.Add(this);
						this._DemandId = value.Id;
					}
					else
					{
						this._DemandId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Demand");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UsersTransaction_Receipt", Storage="_UsersTransaction", ThisKey="UserTransationID", OtherKey="ID", IsForeignKey=true)]
		public UsersTransaction UsersTransaction
		{
			get
			{
				return this._UsersTransaction.Entity;
			}
			set
			{
				UsersTransaction previousValue = this._UsersTransaction.Entity;
				if (((previousValue != value) 
							|| (this._UsersTransaction.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UsersTransaction.Entity = null;
						previousValue.Receipts.Remove(this);
					}
					this._UsersTransaction.Entity = value;
					if ((value != null))
					{
						value.Receipts.Add(this);
						this._UserTransationID = value.ID;
					}
					else
					{
						this._UserTransationID = default(Nullable<decimal>);
					}
					this.SendPropertyChanged("UsersTransaction");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserBranchs")]
	public partial class UserBranch : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _UserBranchID;
		
		private System.Nullable<int> _UserID;
		
		private System.Nullable<int> _BranchID;
		
		private EntityRef<Branch> _Branch;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserBranchIDChanging(decimal value);
    partial void OnUserBranchIDChanged();
    partial void OnUserIDChanging(System.Nullable<int> value);
    partial void OnUserIDChanged();
    partial void OnBranchIDChanging(System.Nullable<int> value);
    partial void OnBranchIDChanged();
    #endregion
		
		public UserBranch()
		{
			this._Branch = default(EntityRef<Branch>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserBranchID", AutoSync=AutoSync.OnInsert, DbType="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public decimal UserBranchID
		{
			get
			{
				return this._UserBranchID;
			}
			set
			{
				if ((this._UserBranchID != value))
				{
					this.OnUserBranchIDChanging(value);
					this.SendPropertyChanging();
					this._UserBranchID = value;
					this.SendPropertyChanged("UserBranchID");
					this.OnUserBranchIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int")]
		public System.Nullable<int> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchID", DbType="Int")]
		public System.Nullable<int> BranchID
		{
			get
			{
				return this._BranchID;
			}
			set
			{
				if ((this._BranchID != value))
				{
					if (this._Branch.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBranchIDChanging(value);
					this.SendPropertyChanging();
					this._BranchID = value;
					this.SendPropertyChanged("BranchID");
					this.OnBranchIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Branch_UserBranch", Storage="_Branch", ThisKey="BranchID", OtherKey="ID", IsForeignKey=true)]
		public Branch Branch
		{
			get
			{
				return this._Branch.Entity;
			}
			set
			{
				Branch previousValue = this._Branch.Entity;
				if (((previousValue != value) 
							|| (this._Branch.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Branch.Entity = null;
						previousValue.UserBranches.Remove(this);
					}
					this._Branch.Entity = value;
					if ((value != null))
					{
						value.UserBranches.Add(this);
						this._BranchID = value.ID;
					}
					else
					{
						this._BranchID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Branch");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserBranch", Storage="_User", ThisKey="UserID", OtherKey="ID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.UserBranches.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.UserBranches.Add(this);
						this._UserID = value.ID;
					}
					else
					{
						this._UserID = default(Nullable<int>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Calls")]
	public partial class Call : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _CustomerName;
		
		private string _Responsible;
		
		private string _Topic;
		
		private string _Result;
		
		private System.Nullable<System.DateTime> _VisitDate;
		
		private string _EmployeeName;
		
		private string _Address;
		
		private System.Nullable<System.DateTime> _CallDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCustomerNameChanging(string value);
    partial void OnCustomerNameChanged();
    partial void OnResponsibleChanging(string value);
    partial void OnResponsibleChanged();
    partial void OnTopicChanging(string value);
    partial void OnTopicChanged();
    partial void OnResultChanging(string value);
    partial void OnResultChanged();
    partial void OnVisitDateChanging(System.Nullable<System.DateTime> value);
    partial void OnVisitDateChanged();
    partial void OnEmployeeNameChanging(string value);
    partial void OnEmployeeNameChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnCallDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCallDateChanged();
    #endregion
		
		public Call()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerName", DbType="NVarChar(300)")]
		public string CustomerName
		{
			get
			{
				return this._CustomerName;
			}
			set
			{
				if ((this._CustomerName != value))
				{
					this.OnCustomerNameChanging(value);
					this.SendPropertyChanging();
					this._CustomerName = value;
					this.SendPropertyChanged("CustomerName");
					this.OnCustomerNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Responsible", DbType="NVarChar(300)")]
		public string Responsible
		{
			get
			{
				return this._Responsible;
			}
			set
			{
				if ((this._Responsible != value))
				{
					this.OnResponsibleChanging(value);
					this.SendPropertyChanging();
					this._Responsible = value;
					this.SendPropertyChanged("Responsible");
					this.OnResponsibleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Topic", DbType="NVarChar(MAX)")]
		public string Topic
		{
			get
			{
				return this._Topic;
			}
			set
			{
				if ((this._Topic != value))
				{
					this.OnTopicChanging(value);
					this.SendPropertyChanging();
					this._Topic = value;
					this.SendPropertyChanged("Topic");
					this.OnTopicChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Result", DbType="NVarChar(MAX)")]
		public string Result
		{
			get
			{
				return this._Result;
			}
			set
			{
				if ((this._Result != value))
				{
					this.OnResultChanging(value);
					this.SendPropertyChanging();
					this._Result = value;
					this.SendPropertyChanged("Result");
					this.OnResultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VisitDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> VisitDate
		{
			get
			{
				return this._VisitDate;
			}
			set
			{
				if ((this._VisitDate != value))
				{
					this.OnVisitDateChanging(value);
					this.SendPropertyChanging();
					this._VisitDate = value;
					this.SendPropertyChanged("VisitDate");
					this.OnVisitDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeName", DbType="NVarChar(300)")]
		public string EmployeeName
		{
			get
			{
				return this._EmployeeName;
			}
			set
			{
				if ((this._EmployeeName != value))
				{
					this.OnEmployeeNameChanging(value);
					this.SendPropertyChanging();
					this._EmployeeName = value;
					this.SendPropertyChanged("EmployeeName");
					this.OnEmployeeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(300)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CallDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CallDate
		{
			get
			{
				return this._CallDate;
			}
			set
			{
				if ((this._CallDate != value))
				{
					this.OnCallDateChanging(value);
					this.SendPropertyChanging();
					this._CallDate = value;
					this.SendPropertyChanged("CallDate");
					this.OnCallDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Centrals")]
	public partial class Central : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private int _GovernateId;
		
		private EntitySet<WorkOrder> _WorkOrders;
		
		private EntityRef<Governorate> _Governorate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnGovernateIdChanging(int value);
    partial void OnGovernateIdChanged();
    #endregion
		
		public Central()
		{
			this._WorkOrders = new EntitySet<WorkOrder>(new Action<WorkOrder>(this.attach_WorkOrders), new Action<WorkOrder>(this.detach_WorkOrders));
			this._Governorate = default(EntityRef<Governorate>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(350)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GovernateId", DbType="Int NOT NULL")]
		public int GovernateId
		{
			get
			{
				return this._GovernateId;
			}
			set
			{
				if ((this._GovernateId != value))
				{
					if (this._Governorate.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGovernateIdChanging(value);
					this.SendPropertyChanging();
					this._GovernateId = value;
					this.SendPropertyChanged("GovernateId");
					this.OnGovernateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Central_WorkOrder", Storage="_WorkOrders", ThisKey="Id", OtherKey="CentralId")]
		public EntitySet<WorkOrder> WorkOrders
		{
			get
			{
				return this._WorkOrders;
			}
			set
			{
				this._WorkOrders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Governorate_Central", Storage="_Governorate", ThisKey="GovernateId", OtherKey="ID", IsForeignKey=true)]
		public Governorate Governorate
		{
			get
			{
				return this._Governorate.Entity;
			}
			set
			{
				Governorate previousValue = this._Governorate.Entity;
				if (((previousValue != value) 
							|| (this._Governorate.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Governorate.Entity = null;
						previousValue.Centrals.Remove(this);
					}
					this._Governorate.Entity = value;
					if ((value != null))
					{
						value.Centrals.Add(this);
						this._GovernateId = value.ID;
					}
					else
					{
						this._GovernateId = default(int);
					}
					this.SendPropertyChanged("Governorate");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_WorkOrders(WorkOrder entity)
		{
			this.SendPropertyChanging();
			entity.Central = this;
		}
		
		private void detach_WorkOrders(WorkOrder entity)
		{
			this.SendPropertyChanging();
			entity.Central = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ResellerRouters")]
	public partial class ResellerRouter : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _ResellerId;
		
		private int _Quantity;
		
		private System.DateTime _Time;
		
		private int _RouterOperationsId;
		
		private System.Nullable<int> _WorkOrderId;
		
		private EntityRef<User> _User;
		
		private EntityRef<WorkOrder> _WorkOrder;
		
		private EntityRef<RouterOperation> _RouterOperation;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnResellerIdChanging(System.Nullable<int> value);
    partial void OnResellerIdChanged();
    partial void OnQuantityChanging(int value);
    partial void OnQuantityChanged();
    partial void OnTimeChanging(System.DateTime value);
    partial void OnTimeChanged();
    partial void OnRouterOperationsIdChanging(int value);
    partial void OnRouterOperationsIdChanged();
    partial void OnWorkOrderIdChanging(System.Nullable<int> value);
    partial void OnWorkOrderIdChanged();
    #endregion
		
		public ResellerRouter()
		{
			this._User = default(EntityRef<User>);
			this._WorkOrder = default(EntityRef<WorkOrder>);
			this._RouterOperation = default(EntityRef<RouterOperation>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResellerId", DbType="Int NOT NULL")]
		public System.Nullable<int> ResellerId
		{
			get
			{
				return this._ResellerId;
			}
			set
			{
				if ((this._ResellerId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnResellerIdChanging(value);
					this.SendPropertyChanging();
					this._ResellerId = value;
					this.SendPropertyChanged("ResellerId");
					this.OnResellerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int NOT NULL")]
		public int Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time", DbType="DateTime NOT NULL")]
		public System.DateTime Time
		{
			get
			{
				return this._Time;
			}
			set
			{
				if ((this._Time != value))
				{
					this.OnTimeChanging(value);
					this.SendPropertyChanging();
					this._Time = value;
					this.SendPropertyChanged("Time");
					this.OnTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RouterOperationsId", DbType="Int NOT NULL")]
		public int RouterOperationsId
		{
			get
			{
				return this._RouterOperationsId;
			}
			set
			{
				if ((this._RouterOperationsId != value))
				{
					if (this._RouterOperation.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRouterOperationsIdChanging(value);
					this.SendPropertyChanging();
					this._RouterOperationsId = value;
					this.SendPropertyChanged("RouterOperationsId");
					this.OnRouterOperationsIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkOrderId", DbType="Int")]
		public System.Nullable<int> WorkOrderId
		{
			get
			{
				return this._WorkOrderId;
			}
			set
			{
				if ((this._WorkOrderId != value))
				{
					if (this._WorkOrder.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWorkOrderIdChanging(value);
					this.SendPropertyChanging();
					this._WorkOrderId = value;
					this.SendPropertyChanged("WorkOrderId");
					this.OnWorkOrderIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_ResellerRouter", Storage="_User", ThisKey="ResellerId", OtherKey="ID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.ResellerRouters.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.ResellerRouters.Add(this);
						this._ResellerId = value.ID;
					}
					else
					{
						this._ResellerId = default(Nullable<int>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WorkOrder_ResellerRouter", Storage="_WorkOrder", ThisKey="WorkOrderId", OtherKey="ID", IsForeignKey=true)]
		public WorkOrder WorkOrder
		{
			get
			{
				return this._WorkOrder.Entity;
			}
			set
			{
				WorkOrder previousValue = this._WorkOrder.Entity;
				if (((previousValue != value) 
							|| (this._WorkOrder.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WorkOrder.Entity = null;
						previousValue.ResellerRouters.Remove(this);
					}
					this._WorkOrder.Entity = value;
					if ((value != null))
					{
						value.ResellerRouters.Add(this);
						this._WorkOrderId = value.ID;
					}
					else
					{
						this._WorkOrderId = default(Nullable<int>);
					}
					this.SendPropertyChanged("WorkOrder");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RouterOperation_ResellerRouter", Storage="_RouterOperation", ThisKey="RouterOperationsId", OtherKey="Id", IsForeignKey=true)]
		public RouterOperation RouterOperation
		{
			get
			{
				return this._RouterOperation.Entity;
			}
			set
			{
				RouterOperation previousValue = this._RouterOperation.Entity;
				if (((previousValue != value) 
							|| (this._RouterOperation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RouterOperation.Entity = null;
						previousValue.ResellerRouters.Remove(this);
					}
					this._RouterOperation.Entity = value;
					if ((value != null))
					{
						value.ResellerRouters.Add(this);
						this._RouterOperationsId = value.Id;
					}
					else
					{
						this._RouterOperationsId = default(int);
					}
					this.SendPropertyChanged("RouterOperation");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Routers")]
	public partial class Router : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _Quantity;
		
		private System.DateTime _Time;
		
		private int _RouterOperationsId;
		
		private System.Nullable<int> _ResellerId;
		
		private System.Nullable<int> _WorkOrderId;
		
		private EntityRef<User> _User;
		
		private EntityRef<WorkOrder> _WorkOrder;
		
		private EntityRef<RouterOperation> _RouterOperation;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnQuantityChanging(int value);
    partial void OnQuantityChanged();
    partial void OnTimeChanging(System.DateTime value);
    partial void OnTimeChanged();
    partial void OnRouterOperationsIdChanging(int value);
    partial void OnRouterOperationsIdChanged();
    partial void OnResellerIdChanging(System.Nullable<int> value);
    partial void OnResellerIdChanged();
    partial void OnWorkOrderIdChanging(System.Nullable<int> value);
    partial void OnWorkOrderIdChanged();
    #endregion
		
		public Router()
		{
			this._User = default(EntityRef<User>);
			this._WorkOrder = default(EntityRef<WorkOrder>);
			this._RouterOperation = default(EntityRef<RouterOperation>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int NOT NULL")]
		public int Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time", DbType="DateTime NOT NULL")]
		public System.DateTime Time
		{
			get
			{
				return this._Time;
			}
			set
			{
				if ((this._Time != value))
				{
					this.OnTimeChanging(value);
					this.SendPropertyChanging();
					this._Time = value;
					this.SendPropertyChanged("Time");
					this.OnTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RouterOperationsId", DbType="Int NOT NULL")]
		public int RouterOperationsId
		{
			get
			{
				return this._RouterOperationsId;
			}
			set
			{
				if ((this._RouterOperationsId != value))
				{
					if (this._RouterOperation.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRouterOperationsIdChanging(value);
					this.SendPropertyChanging();
					this._RouterOperationsId = value;
					this.SendPropertyChanged("RouterOperationsId");
					this.OnRouterOperationsIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResellerId", DbType="Int")]
		public System.Nullable<int> ResellerId
		{
			get
			{
				return this._ResellerId;
			}
			set
			{
				if ((this._ResellerId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnResellerIdChanging(value);
					this.SendPropertyChanging();
					this._ResellerId = value;
					this.SendPropertyChanged("ResellerId");
					this.OnResellerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkOrderId", DbType="Int")]
		public System.Nullable<int> WorkOrderId
		{
			get
			{
				return this._WorkOrderId;
			}
			set
			{
				if ((this._WorkOrderId != value))
				{
					if (this._WorkOrder.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWorkOrderIdChanging(value);
					this.SendPropertyChanging();
					this._WorkOrderId = value;
					this.SendPropertyChanged("WorkOrderId");
					this.OnWorkOrderIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Router", Storage="_User", ThisKey="ResellerId", OtherKey="ID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Routers.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Routers.Add(this);
						this._ResellerId = value.ID;
					}
					else
					{
						this._ResellerId = default(Nullable<int>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WorkOrder_Router", Storage="_WorkOrder", ThisKey="WorkOrderId", OtherKey="ID", IsForeignKey=true)]
		public WorkOrder WorkOrder
		{
			get
			{
				return this._WorkOrder.Entity;
			}
			set
			{
				WorkOrder previousValue = this._WorkOrder.Entity;
				if (((previousValue != value) 
							|| (this._WorkOrder.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WorkOrder.Entity = null;
						previousValue.Routers.Remove(this);
					}
					this._WorkOrder.Entity = value;
					if ((value != null))
					{
						value.Routers.Add(this);
						this._WorkOrderId = value.ID;
					}
					else
					{
						this._WorkOrderId = default(Nullable<int>);
					}
					this.SendPropertyChanged("WorkOrder");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RouterOperation_Router", Storage="_RouterOperation", ThisKey="RouterOperationsId", OtherKey="Id", IsForeignKey=true)]
		public RouterOperation RouterOperation
		{
			get
			{
				return this._RouterOperation.Entity;
			}
			set
			{
				RouterOperation previousValue = this._RouterOperation.Entity;
				if (((previousValue != value) 
							|| (this._RouterOperation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RouterOperation.Entity = null;
						previousValue.Routers.Remove(this);
					}
					this._RouterOperation.Entity = value;
					if ((value != null))
					{
						value.Routers.Add(this);
						this._RouterOperationsId = value.Id;
					}
					else
					{
						this._RouterOperationsId = default(int);
					}
					this.SendPropertyChanged("RouterOperation");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RouterOperations")]
	public partial class RouterOperation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private EntitySet<ResellerRouter> _ResellerRouters;
		
		private EntitySet<Router> _Routers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public RouterOperation()
		{
			this._ResellerRouters = new EntitySet<ResellerRouter>(new Action<ResellerRouter>(this.attach_ResellerRouters), new Action<ResellerRouter>(this.detach_ResellerRouters));
			this._Routers = new EntitySet<Router>(new Action<Router>(this.attach_Routers), new Action<Router>(this.detach_Routers));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RouterOperation_ResellerRouter", Storage="_ResellerRouters", ThisKey="Id", OtherKey="RouterOperationsId")]
		public EntitySet<ResellerRouter> ResellerRouters
		{
			get
			{
				return this._ResellerRouters;
			}
			set
			{
				this._ResellerRouters.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RouterOperation_Router", Storage="_Routers", ThisKey="Id", OtherKey="RouterOperationsId")]
		public EntitySet<Router> Routers
		{
			get
			{
				return this._Routers;
			}
			set
			{
				this._Routers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ResellerRouters(ResellerRouter entity)
		{
			this.SendPropertyChanging();
			entity.RouterOperation = this;
		}
		
		private void detach_ResellerRouters(ResellerRouter entity)
		{
			this.SendPropertyChanging();
			entity.RouterOperation = null;
		}
		
		private void attach_Routers(Router entity)
		{
			this.SendPropertyChanging();
			entity.RouterOperation = this;
		}
		
		private void detach_Routers(Router entity)
		{
			this.SendPropertyChanging();
			entity.RouterOperation = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WorkOrderRouters")]
	public partial class WorkOrderRouter : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _WorkOrderId;
		
		private System.Nullable<int> _ResellerId;
		
		private int _Quantity;
		
		private System.DateTime _Time;
		
		private EntityRef<User> _User;
		
		private EntityRef<WorkOrder> _WorkOrder;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnWorkOrderIdChanging(int value);
    partial void OnWorkOrderIdChanged();
    partial void OnResellerIdChanging(System.Nullable<int> value);
    partial void OnResellerIdChanged();
    partial void OnQuantityChanging(int value);
    partial void OnQuantityChanged();
    partial void OnTimeChanging(System.DateTime value);
    partial void OnTimeChanged();
    #endregion
		
		public WorkOrderRouter()
		{
			this._User = default(EntityRef<User>);
			this._WorkOrder = default(EntityRef<WorkOrder>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkOrderId", DbType="Int NOT NULL")]
		public int WorkOrderId
		{
			get
			{
				return this._WorkOrderId;
			}
			set
			{
				if ((this._WorkOrderId != value))
				{
					if (this._WorkOrder.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWorkOrderIdChanging(value);
					this.SendPropertyChanging();
					this._WorkOrderId = value;
					this.SendPropertyChanged("WorkOrderId");
					this.OnWorkOrderIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResellerId", DbType="Int")]
		public System.Nullable<int> ResellerId
		{
			get
			{
				return this._ResellerId;
			}
			set
			{
				if ((this._ResellerId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnResellerIdChanging(value);
					this.SendPropertyChanging();
					this._ResellerId = value;
					this.SendPropertyChanged("ResellerId");
					this.OnResellerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int NOT NULL")]
		public int Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time", DbType="DateTime NOT NULL")]
		public System.DateTime Time
		{
			get
			{
				return this._Time;
			}
			set
			{
				if ((this._Time != value))
				{
					this.OnTimeChanging(value);
					this.SendPropertyChanging();
					this._Time = value;
					this.SendPropertyChanged("Time");
					this.OnTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_WorkOrderRouter", Storage="_User", ThisKey="ResellerId", OtherKey="ID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.WorkOrderRouters.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.WorkOrderRouters.Add(this);
						this._ResellerId = value.ID;
					}
					else
					{
						this._ResellerId = default(Nullable<int>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WorkOrder_WorkOrderRouter", Storage="_WorkOrder", ThisKey="WorkOrderId", OtherKey="ID", IsForeignKey=true)]
		public WorkOrder WorkOrder
		{
			get
			{
				return this._WorkOrder.Entity;
			}
			set
			{
				WorkOrder previousValue = this._WorkOrder.Entity;
				if (((previousValue != value) 
							|| (this._WorkOrder.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WorkOrder.Entity = null;
						previousValue.WorkOrderRouters.Remove(this);
					}
					this._WorkOrder.Entity = value;
					if ((value != null))
					{
						value.WorkOrderRouters.Add(this);
						this._WorkOrderId = value.ID;
					}
					else
					{
						this._WorkOrderId = default(int);
					}
					this.SendPropertyChanged("WorkOrder");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserCultures")]
	public partial class UserCulture : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _UserId;
		
		private int _CultureId;
		
		private EntityRef<User> _User;
		
		private EntityRef<Culture> _Culture;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnCultureIdChanging(int value);
    partial void OnCultureIdChanged();
    #endregion
		
		public UserCulture()
		{
			this._User = default(EntityRef<User>);
			this._Culture = default(EntityRef<Culture>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL")]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CultureId", DbType="Int NOT NULL")]
		public int CultureId
		{
			get
			{
				return this._CultureId;
			}
			set
			{
				if ((this._CultureId != value))
				{
					if (this._Culture.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCultureIdChanging(value);
					this.SendPropertyChanging();
					this._CultureId = value;
					this.SendPropertyChanged("CultureId");
					this.OnCultureIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserCulture", Storage="_User", ThisKey="UserId", OtherKey="ID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.UserCultures.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.UserCultures.Add(this);
						this._UserId = value.ID;
					}
					else
					{
						this._UserId = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Culture_UserCulture", Storage="_Culture", ThisKey="CultureId", OtherKey="Id", IsForeignKey=true)]
		public Culture Culture
		{
			get
			{
				return this._Culture.Entity;
			}
			set
			{
				Culture previousValue = this._Culture.Entity;
				if (((previousValue != value) 
							|| (this._Culture.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Culture.Entity = null;
						previousValue.UserCultures.Remove(this);
					}
					this._Culture.Entity = value;
					if ((value != null))
					{
						value.UserCultures.Add(this);
						this._CultureId = value.Id;
					}
					else
					{
						this._CultureId = default(int);
					}
					this.SendPropertyChanged("Culture");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Cultures")]
	public partial class Culture : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Culture1;
		
		private string _Name;
		
		private EntitySet<UserCulture> _UserCultures;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCulture1Changing(string value);
    partial void OnCulture1Changed();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public Culture()
		{
			this._UserCultures = new EntitySet<UserCulture>(new Action<UserCulture>(this.attach_UserCultures), new Action<UserCulture>(this.detach_UserCultures));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Culture", Storage="_Culture1", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string Culture1
		{
			get
			{
				return this._Culture1;
			}
			set
			{
				if ((this._Culture1 != value))
				{
					this.OnCulture1Changing(value);
					this.SendPropertyChanging();
					this._Culture1 = value;
					this.SendPropertyChanged("Culture1");
					this.OnCulture1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Culture_UserCulture", Storage="_UserCultures", ThisKey="Id", OtherKey="CultureId")]
		public EntitySet<UserCulture> UserCultures
		{
			get
			{
				return this._UserCultures;
			}
			set
			{
				this._UserCultures.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_UserCultures(UserCulture entity)
		{
			this.SendPropertyChanging();
			entity.Culture = this;
		}
		
		private void detach_UserCultures(UserCulture entity)
		{
			this.SendPropertyChanging();
			entity.Culture = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AutomatedProcesses")]
	public partial class AutomatedProcess : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.DateTime _Date;
		
		private bool _Processed;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnProcessedChanging(bool value);
    partial void OnProcessedChanged();
    #endregion
		
		public AutomatedProcess()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Processed", DbType="Bit NOT NULL")]
		public bool Processed
		{
			get
			{
				return this._Processed;
			}
			set
			{
				if ((this._Processed != value))
				{
					this.OnProcessedChanging(value);
					this.SendPropertyChanging();
					this._Processed = value;
					this.SendPropertyChanged("Processed");
					this.OnProcessedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Messages")]
	public partial class Message : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _MessageTo;
		
		private int _MessageFrom;
		
		private string _Subject;
		
		private string _Message1;
		
		private System.DateTime _Time;
		
		private System.Nullable<bool> _DoneRead;
		
		private string _Attachments;
		
		private string _Attachments2;
		
		private string _Attachments3;
		
		private EntityRef<User> _User;
		
		private EntityRef<User> _User1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnMessageToChanging(int value);
    partial void OnMessageToChanged();
    partial void OnMessageFromChanging(int value);
    partial void OnMessageFromChanged();
    partial void OnSubjectChanging(string value);
    partial void OnSubjectChanged();
    partial void OnMessage1Changing(string value);
    partial void OnMessage1Changed();
    partial void OnTimeChanging(System.DateTime value);
    partial void OnTimeChanged();
    partial void OnDoneReadChanging(System.Nullable<bool> value);
    partial void OnDoneReadChanged();
    partial void OnAttachmentsChanging(string value);
    partial void OnAttachmentsChanged();
    partial void OnAttachments2Changing(string value);
    partial void OnAttachments2Changed();
    partial void OnAttachments3Changing(string value);
    partial void OnAttachments3Changed();
    #endregion
		
		public Message()
		{
			this._User = default(EntityRef<User>);
			this._User1 = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MessageTo", DbType="Int NOT NULL")]
		public int MessageTo
		{
			get
			{
				return this._MessageTo;
			}
			set
			{
				if ((this._MessageTo != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMessageToChanging(value);
					this.SendPropertyChanging();
					this._MessageTo = value;
					this.SendPropertyChanged("MessageTo");
					this.OnMessageToChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MessageFrom", DbType="Int NOT NULL")]
		public int MessageFrom
		{
			get
			{
				return this._MessageFrom;
			}
			set
			{
				if ((this._MessageFrom != value))
				{
					if (this._User1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMessageFromChanging(value);
					this.SendPropertyChanging();
					this._MessageFrom = value;
					this.SendPropertyChanged("MessageFrom");
					this.OnMessageFromChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Subject", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string Subject
		{
			get
			{
				return this._Subject;
			}
			set
			{
				if ((this._Subject != value))
				{
					this.OnSubjectChanging(value);
					this.SendPropertyChanging();
					this._Subject = value;
					this.SendPropertyChanged("Subject");
					this.OnSubjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Message", Storage="_Message1", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Message1
		{
			get
			{
				return this._Message1;
			}
			set
			{
				if ((this._Message1 != value))
				{
					this.OnMessage1Changing(value);
					this.SendPropertyChanging();
					this._Message1 = value;
					this.SendPropertyChanged("Message1");
					this.OnMessage1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time", DbType="DateTime NOT NULL")]
		public System.DateTime Time
		{
			get
			{
				return this._Time;
			}
			set
			{
				if ((this._Time != value))
				{
					this.OnTimeChanging(value);
					this.SendPropertyChanging();
					this._Time = value;
					this.SendPropertyChanged("Time");
					this.OnTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DoneRead", DbType="Bit")]
		public System.Nullable<bool> DoneRead
		{
			get
			{
				return this._DoneRead;
			}
			set
			{
				if ((this._DoneRead != value))
				{
					this.OnDoneReadChanging(value);
					this.SendPropertyChanging();
					this._DoneRead = value;
					this.SendPropertyChanged("DoneRead");
					this.OnDoneReadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Attachments", DbType="nvarchar(350)")]
		public string Attachments
		{
			get
			{
				return this._Attachments;
			}
			set
			{
				if ((this._Attachments != value))
				{
					this.OnAttachmentsChanging(value);
					this.SendPropertyChanging();
					this._Attachments = value;
					this.SendPropertyChanged("Attachments");
					this.OnAttachmentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Attachments2", DbType="nvarchar(350)")]
		public string Attachments2
		{
			get
			{
				return this._Attachments2;
			}
			set
			{
				if ((this._Attachments2 != value))
				{
					this.OnAttachments2Changing(value);
					this.SendPropertyChanging();
					this._Attachments2 = value;
					this.SendPropertyChanged("Attachments2");
					this.OnAttachments2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Attachments3", DbType="nvarchar(350)")]
		public string Attachments3
		{
			get
			{
				return this._Attachments3;
			}
			set
			{
				if ((this._Attachments3 != value))
				{
					this.OnAttachments3Changing(value);
					this.SendPropertyChanging();
					this._Attachments3 = value;
					this.SendPropertyChanged("Attachments3");
					this.OnAttachments3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Message", Storage="_User", ThisKey="MessageTo", OtherKey="ID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Messages.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Messages.Add(this);
						this._MessageTo = value.ID;
					}
					else
					{
						this._MessageTo = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Message1", Storage="_User1", ThisKey="MessageFrom", OtherKey="ID", IsForeignKey=true)]
		public User User1
		{
			get
			{
				return this._User1.Entity;
			}
			set
			{
				User previousValue = this._User1.Entity;
				if (((previousValue != value) 
							|| (this._User1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User1.Entity = null;
						previousValue.Messages1.Remove(this);
					}
					this._User1.Entity = value;
					if ((value != null))
					{
						value.Messages1.Add(this);
						this._MessageFrom = value.ID;
					}
					else
					{
						this._MessageFrom = default(int);
					}
					this.SendPropertyChanged("User1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Complaints")]
	public partial class Complaint : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Customer;
		
		private string _Governate;
		
		private string _Phone;
		
		private string _Body;
		
		private System.Nullable<System.DateTime> _RecordDate;
		
		private System.Nullable<bool> _Handled;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCustomerChanging(string value);
    partial void OnCustomerChanged();
    partial void OnGovernateChanging(string value);
    partial void OnGovernateChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnBodyChanging(string value);
    partial void OnBodyChanged();
    partial void OnRecordDateChanging(System.Nullable<System.DateTime> value);
    partial void OnRecordDateChanged();
    partial void OnHandledChanging(System.Nullable<bool> value);
    partial void OnHandledChanged();
    #endregion
		
		public Complaint()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Customer", DbType="NVarChar(400)")]
		public string Customer
		{
			get
			{
				return this._Customer;
			}
			set
			{
				if ((this._Customer != value))
				{
					this.OnCustomerChanging(value);
					this.SendPropertyChanging();
					this._Customer = value;
					this.SendPropertyChanged("Customer");
					this.OnCustomerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Governate", DbType="NVarChar(400)")]
		public string Governate
		{
			get
			{
				return this._Governate;
			}
			set
			{
				if ((this._Governate != value))
				{
					this.OnGovernateChanging(value);
					this.SendPropertyChanging();
					this._Governate = value;
					this.SendPropertyChanged("Governate");
					this.OnGovernateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="NVarChar(15)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Body", DbType="NVarChar(MAX)")]
		public string Body
		{
			get
			{
				return this._Body;
			}
			set
			{
				if ((this._Body != value))
				{
					this.OnBodyChanging(value);
					this.SendPropertyChanging();
					this._Body = value;
					this.SendPropertyChanged("Body");
					this.OnBodyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecordDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> RecordDate
		{
			get
			{
				return this._RecordDate;
			}
			set
			{
				if ((this._RecordDate != value))
				{
					this.OnRecordDateChanging(value);
					this.SendPropertyChanging();
					this._RecordDate = value;
					this.SendPropertyChanged("RecordDate");
					this.OnRecordDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Handled", DbType="Bit")]
		public System.Nullable<bool> Handled
		{
			get
			{
				return this._Handled;
			}
			set
			{
				if ((this._Handled != value))
				{
					this.OnHandledChanging(value);
					this.SendPropertyChanging();
					this._Handled = value;
					this.SendPropertyChanged("Handled");
					this.OnHandledChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CallStates")]
	public partial class CallState : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _State;
		
		private EntitySet<Phone> _Phones;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnStateChanging(string value);
    partial void OnStateChanged();
    #endregion
		
		public CallState()
		{
			this._Phones = new EntitySet<Phone>(new Action<Phone>(this.attach_Phones), new Action<Phone>(this.detach_Phones));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="NVarChar(500)")]
		public string State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this.OnStateChanging(value);
					this.SendPropertyChanging();
					this._State = value;
					this.SendPropertyChanged("State");
					this.OnStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CallState_Phone", Storage="_Phones", ThisKey="Id", OtherKey="CallStateId")]
		public EntitySet<Phone> Phones
		{
			get
			{
				return this._Phones;
			}
			set
			{
				this._Phones.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Phones(Phone entity)
		{
			this.SendPropertyChanging();
			entity.CallState = this;
		}
		
		private void detach_Phones(Phone entity)
		{
			this.SendPropertyChanging();
			entity.CallState = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PhoneData")]
	public partial class PhoneData : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _ProviderId;
		
		private int _IpPack;
		
		private int _CityId;
		
		private string _Address;
		
		private string _Email;
		
		private int _ServicePackId;
		
		private int _PaymentTypeId;
		
		private string _Notes;
		
		private int _PhoneId;
		
		private string _NationalId;
		
		private string _LineOwner;
		
		private EntityRef<Phone> _Phone;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnProviderIdChanging(int value);
    partial void OnProviderIdChanged();
    partial void OnIpPackChanging(int value);
    partial void OnIpPackChanged();
    partial void OnCityIdChanging(int value);
    partial void OnCityIdChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnServicePackIdChanging(int value);
    partial void OnServicePackIdChanged();
    partial void OnPaymentTypeIdChanging(int value);
    partial void OnPaymentTypeIdChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnPhoneIdChanging(int value);
    partial void OnPhoneIdChanged();
    partial void OnNationalIdChanging(string value);
    partial void OnNationalIdChanged();
    partial void OnLineOwnerChanging(string value);
    partial void OnLineOwnerChanged();
    #endregion
		
		public PhoneData()
		{
			this._Phone = default(EntityRef<Phone>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProviderId", DbType="Int NOT NULL")]
		public int ProviderId
		{
			get
			{
				return this._ProviderId;
			}
			set
			{
				if ((this._ProviderId != value))
				{
					this.OnProviderIdChanging(value);
					this.SendPropertyChanging();
					this._ProviderId = value;
					this.SendPropertyChanged("ProviderId");
					this.OnProviderIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IpPack", DbType="Int NOT NULL")]
		public int IpPack
		{
			get
			{
				return this._IpPack;
			}
			set
			{
				if ((this._IpPack != value))
				{
					this.OnIpPackChanging(value);
					this.SendPropertyChanging();
					this._IpPack = value;
					this.SendPropertyChanged("IpPack");
					this.OnIpPackChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CityId", DbType="Int NOT NULL")]
		public int CityId
		{
			get
			{
				return this._CityId;
			}
			set
			{
				if ((this._CityId != value))
				{
					this.OnCityIdChanging(value);
					this.SendPropertyChanging();
					this._CityId = value;
					this.SendPropertyChanged("CityId");
					this.OnCityIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(500)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(500)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServicePackId", DbType="Int NOT NULL")]
		public int ServicePackId
		{
			get
			{
				return this._ServicePackId;
			}
			set
			{
				if ((this._ServicePackId != value))
				{
					this.OnServicePackIdChanging(value);
					this.SendPropertyChanging();
					this._ServicePackId = value;
					this.SendPropertyChanged("ServicePackId");
					this.OnServicePackIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentTypeId", DbType="Int NOT NULL")]
		public int PaymentTypeId
		{
			get
			{
				return this._PaymentTypeId;
			}
			set
			{
				if ((this._PaymentTypeId != value))
				{
					this.OnPaymentTypeIdChanging(value);
					this.SendPropertyChanging();
					this._PaymentTypeId = value;
					this.SendPropertyChanged("PaymentTypeId");
					this.OnPaymentTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(MAX)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneId", DbType="Int NOT NULL")]
		public int PhoneId
		{
			get
			{
				return this._PhoneId;
			}
			set
			{
				if ((this._PhoneId != value))
				{
					if (this._Phone.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPhoneIdChanging(value);
					this.SendPropertyChanging();
					this._PhoneId = value;
					this.SendPropertyChanged("PhoneId");
					this.OnPhoneIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NationalId", DbType="NVarchar(50)", CanBeNull=false)]
		public string NationalId
		{
			get
			{
				return this._NationalId;
			}
			set
			{
				if ((this._NationalId != value))
				{
					this.OnNationalIdChanging(value);
					this.SendPropertyChanging();
					this._NationalId = value;
					this.SendPropertyChanged("NationalId");
					this.OnNationalIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LineOwner", DbType="NVarchar(150)")]
		public string LineOwner
		{
			get
			{
				return this._LineOwner;
			}
			set
			{
				if ((this._LineOwner != value))
				{
					this.OnLineOwnerChanging(value);
					this.SendPropertyChanging();
					this._LineOwner = value;
					this.SendPropertyChanged("LineOwner");
					this.OnLineOwnerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Phone_PhoneData", Storage="_Phone", ThisKey="PhoneId", OtherKey="Id", IsForeignKey=true)]
		public Phone Phone
		{
			get
			{
				return this._Phone.Entity;
			}
			set
			{
				Phone previousValue = this._Phone.Entity;
				if (((previousValue != value) 
							|| (this._Phone.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Phone.Entity = null;
						previousValue.PhoneDatas.Remove(this);
					}
					this._Phone.Entity = value;
					if ((value != null))
					{
						value.PhoneDatas.Add(this);
						this._PhoneId = value.Id;
					}
					else
					{
						this._PhoneId = default(int);
					}
					this.SendPropertyChanged("Phone");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RejectionReasons")]
	public partial class RejectionReason : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Reason;
		
		private EntitySet<Phone> _Phones;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnReasonChanging(string value);
    partial void OnReasonChanged();
    #endregion
		
		public RejectionReason()
		{
			this._Phones = new EntitySet<Phone>(new Action<Phone>(this.attach_Phones), new Action<Phone>(this.detach_Phones));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reason", DbType="NVarChar(500)")]
		public string Reason
		{
			get
			{
				return this._Reason;
			}
			set
			{
				if ((this._Reason != value))
				{
					this.OnReasonChanging(value);
					this.SendPropertyChanging();
					this._Reason = value;
					this.SendPropertyChanged("Reason");
					this.OnReasonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RejectionReason_Phone", Storage="_Phones", ThisKey="Id", OtherKey="RejectReasonId")]
		public EntitySet<Phone> Phones
		{
			get
			{
				return this._Phones;
			}
			set
			{
				this._Phones.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Phones(Phone entity)
		{
			this.SendPropertyChanging();
			entity.RejectionReason = this;
		}
		
		private void detach_Phones(Phone entity)
		{
			this.SendPropertyChanging();
			entity.RejectionReason = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EmailCnfgs")]
	public partial class EmailCnfg : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _MailFrom;
		
		private string _SmtpClient;
		
		private string _UserName;
		
		private string _Password;
		
		private bool _SSL;
		
		private System.Nullable<int> _Port;
		
		private bool _Active;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnMailFromChanging(string value);
    partial void OnMailFromChanged();
    partial void OnSmtpClientChanging(string value);
    partial void OnSmtpClientChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnSSLChanging(bool value);
    partial void OnSSLChanged();
    partial void OnPortChanging(System.Nullable<int> value);
    partial void OnPortChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    #endregion
		
		public EmailCnfg()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MailFrom", DbType="NVarChar(555) NOT NULL", CanBeNull=false)]
		public string MailFrom
		{
			get
			{
				return this._MailFrom;
			}
			set
			{
				if ((this._MailFrom != value))
				{
					this.OnMailFromChanging(value);
					this.SendPropertyChanging();
					this._MailFrom = value;
					this.SendPropertyChanged("MailFrom");
					this.OnMailFromChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SmtpClient", DbType="NVarChar(555) NOT NULL", CanBeNull=false)]
		public string SmtpClient
		{
			get
			{
				return this._SmtpClient;
			}
			set
			{
				if ((this._SmtpClient != value))
				{
					this.OnSmtpClientChanging(value);
					this.SendPropertyChanging();
					this._SmtpClient = value;
					this.SendPropertyChanged("SmtpClient");
					this.OnSmtpClientChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(555) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(555) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SSL", DbType="Bit NOT NULL")]
		public bool SSL
		{
			get
			{
				return this._SSL;
			}
			set
			{
				if ((this._SSL != value))
				{
					this.OnSSLChanging(value);
					this.SendPropertyChanging();
					this._SSL = value;
					this.SendPropertyChanged("SSL");
					this.OnSSLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Port", DbType="Int NOT NULL")]
		public System.Nullable<int> Port
		{
			get
			{
				return this._Port;
			}
			set
			{
				if ((this._Port != value))
				{
					this.OnPortChanging(value);
					this.SendPropertyChanging();
					this._Port = value;
					this.SendPropertyChanged("Port");
					this.OnPortChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LogoPositions")]
	public partial class LogoPosition : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private string _CssAttr;
		
		private EntitySet<ReceiptCnfg> _ReceiptCnfgs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCssAttrChanging(string value);
    partial void OnCssAttrChanged();
    #endregion
		
		public LogoPosition()
		{
			this._ReceiptCnfgs = new EntitySet<ReceiptCnfg>(new Action<ReceiptCnfg>(this.attach_ReceiptCnfgs), new Action<ReceiptCnfg>(this.detach_ReceiptCnfgs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CssAttr", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string CssAttr
		{
			get
			{
				return this._CssAttr;
			}
			set
			{
				if ((this._CssAttr != value))
				{
					this.OnCssAttrChanging(value);
					this.SendPropertyChanging();
					this._CssAttr = value;
					this.SendPropertyChanged("CssAttr");
					this.OnCssAttrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LogoPosition_ReceiptCnfg", Storage="_ReceiptCnfgs", ThisKey="Id", OtherKey="LogoPosiotion")]
		public EntitySet<ReceiptCnfg> ReceiptCnfgs
		{
			get
			{
				return this._ReceiptCnfgs;
			}
			set
			{
				this._ReceiptCnfgs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ReceiptCnfgs(ReceiptCnfg entity)
		{
			this.SendPropertyChanging();
			entity.LogoPosition = this;
		}
		
		private void detach_ReceiptCnfgs(ReceiptCnfg entity)
		{
			this.SendPropertyChanging();
			entity.LogoPosition = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ReceiptCnfgs")]
	public partial class ReceiptCnfg : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _ResellerId;
		
		private System.Nullable<int> _BranchId;
		
		private string _LogoUrl;
		
		private string _CompanyName;
		
		private int _LogoPosiotion;
		
		private string _Caution;
		
		private string _ContactData;
		
		private EntityRef<Branch> _Branch;
		
		private EntityRef<LogoPosition> _LogoPosition;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnResellerIdChanging(System.Nullable<int> value);
    partial void OnResellerIdChanged();
    partial void OnBranchIdChanging(System.Nullable<int> value);
    partial void OnBranchIdChanged();
    partial void OnLogoUrlChanging(string value);
    partial void OnLogoUrlChanged();
    partial void OnCompanyNameChanging(string value);
    partial void OnCompanyNameChanged();
    partial void OnLogoPosiotionChanging(int value);
    partial void OnLogoPosiotionChanged();
    partial void OnCautionChanging(string value);
    partial void OnCautionChanged();
    partial void OnContactDataChanging(string value);
    partial void OnContactDataChanged();
    #endregion
		
		public ReceiptCnfg()
		{
			this._Branch = default(EntityRef<Branch>);
			this._LogoPosition = default(EntityRef<LogoPosition>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResellerId", DbType="Int")]
		public System.Nullable<int> ResellerId
		{
			get
			{
				return this._ResellerId;
			}
			set
			{
				if ((this._ResellerId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnResellerIdChanging(value);
					this.SendPropertyChanging();
					this._ResellerId = value;
					this.SendPropertyChanged("ResellerId");
					this.OnResellerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchId", DbType="Int")]
		public System.Nullable<int> BranchId
		{
			get
			{
				return this._BranchId;
			}
			set
			{
				if ((this._BranchId != value))
				{
					if (this._Branch.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBranchIdChanging(value);
					this.SendPropertyChanging();
					this._BranchId = value;
					this.SendPropertyChanged("BranchId");
					this.OnBranchIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogoUrl", DbType="NVarChar(555) NOT NULL", CanBeNull=false)]
		public string LogoUrl
		{
			get
			{
				return this._LogoUrl;
			}
			set
			{
				if ((this._LogoUrl != value))
				{
					this.OnLogoUrlChanging(value);
					this.SendPropertyChanging();
					this._LogoUrl = value;
					this.SendPropertyChanged("LogoUrl");
					this.OnLogoUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyName", DbType="NVarChar(555) NOT NULL", CanBeNull=false)]
		public string CompanyName
		{
			get
			{
				return this._CompanyName;
			}
			set
			{
				if ((this._CompanyName != value))
				{
					this.OnCompanyNameChanging(value);
					this.SendPropertyChanging();
					this._CompanyName = value;
					this.SendPropertyChanged("CompanyName");
					this.OnCompanyNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogoPosiotion", DbType="Int NOT NULL")]
		public int LogoPosiotion
		{
			get
			{
				return this._LogoPosiotion;
			}
			set
			{
				if ((this._LogoPosiotion != value))
				{
					if (this._LogoPosition.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLogoPosiotionChanging(value);
					this.SendPropertyChanging();
					this._LogoPosiotion = value;
					this.SendPropertyChanged("LogoPosiotion");
					this.OnLogoPosiotionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Caution", DbType="NVarChar(1555) NOT NULL", CanBeNull=false)]
		public string Caution
		{
			get
			{
				return this._Caution;
			}
			set
			{
				if ((this._Caution != value))
				{
					this.OnCautionChanging(value);
					this.SendPropertyChanging();
					this._Caution = value;
					this.SendPropertyChanged("Caution");
					this.OnCautionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactData", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string ContactData
		{
			get
			{
				return this._ContactData;
			}
			set
			{
				if ((this._ContactData != value))
				{
					this.OnContactDataChanging(value);
					this.SendPropertyChanging();
					this._ContactData = value;
					this.SendPropertyChanged("ContactData");
					this.OnContactDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Branch_ReceiptCnfg", Storage="_Branch", ThisKey="BranchId", OtherKey="ID", IsForeignKey=true)]
		public Branch Branch
		{
			get
			{
				return this._Branch.Entity;
			}
			set
			{
				Branch previousValue = this._Branch.Entity;
				if (((previousValue != value) 
							|| (this._Branch.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Branch.Entity = null;
						previousValue.ReceiptCnfgs.Remove(this);
					}
					this._Branch.Entity = value;
					if ((value != null))
					{
						value.ReceiptCnfgs.Add(this);
						this._BranchId = value.ID;
					}
					else
					{
						this._BranchId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Branch");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LogoPosition_ReceiptCnfg", Storage="_LogoPosition", ThisKey="LogoPosiotion", OtherKey="Id", IsForeignKey=true)]
		public LogoPosition LogoPosition
		{
			get
			{
				return this._LogoPosition.Entity;
			}
			set
			{
				LogoPosition previousValue = this._LogoPosition.Entity;
				if (((previousValue != value) 
							|| (this._LogoPosition.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LogoPosition.Entity = null;
						previousValue.ReceiptCnfgs.Remove(this);
					}
					this._LogoPosition.Entity = value;
					if ((value != null))
					{
						value.ReceiptCnfgs.Add(this);
						this._LogoPosiotion = value.Id;
					}
					else
					{
						this._LogoPosiotion = default(int);
					}
					this.SendPropertyChanged("LogoPosition");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_ReceiptCnfg", Storage="_User", ThisKey="ResellerId", OtherKey="ID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.ReceiptCnfgs.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.ReceiptCnfgs.Add(this);
						this._ResellerId = value.ID;
					}
					else
					{
						this._ResellerId = default(Nullable<int>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserProviders")]
	public partial class UserProvider : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserId;
		
		private int _Provider;
		
		private EntityRef<ServiceProvider> _ServiceProvider;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnProviderChanging(int value);
    partial void OnProviderChanged();
    #endregion
		
		public UserProvider()
		{
			this._ServiceProvider = default(EntityRef<ServiceProvider>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Provider", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Provider
		{
			get
			{
				return this._Provider;
			}
			set
			{
				if ((this._Provider != value))
				{
					if (this._ServiceProvider.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProviderChanging(value);
					this.SendPropertyChanging();
					this._Provider = value;
					this.SendPropertyChanged("Provider");
					this.OnProviderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ServiceProvider_UserProvider", Storage="_ServiceProvider", ThisKey="Provider", OtherKey="ID", IsForeignKey=true)]
		public ServiceProvider ServiceProvider
		{
			get
			{
				return this._ServiceProvider.Entity;
			}
			set
			{
				ServiceProvider previousValue = this._ServiceProvider.Entity;
				if (((previousValue != value) 
							|| (this._ServiceProvider.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ServiceProvider.Entity = null;
						previousValue.UserProviders.Remove(this);
					}
					this._ServiceProvider.Entity = value;
					if ((value != null))
					{
						value.UserProviders.Add(this);
						this._Provider = value.ID;
					}
					else
					{
						this._Provider = default(int);
					}
					this.SendPropertyChanged("ServiceProvider");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserProvider", Storage="_User", ThisKey="UserId", OtherKey="ID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.UserProviders.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.UserProviders.Add(this);
						this._UserId = value.ID;
					}
					else
					{
						this._UserId = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OfferReseller")]
	public partial class OfferReseller : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _OfferId;
		
		private int _UserId;
		
		private EntityRef<User> _User;
		
		private EntityRef<Offer> _Offer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOfferIdChanging(int value);
    partial void OnOfferIdChanged();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    #endregion
		
		public OfferReseller()
		{
			this._User = default(EntityRef<User>);
			this._Offer = default(EntityRef<Offer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OfferId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int OfferId
		{
			get
			{
				return this._OfferId;
			}
			set
			{
				if ((this._OfferId != value))
				{
					if (this._Offer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOfferIdChanging(value);
					this.SendPropertyChanging();
					this._OfferId = value;
					this.SendPropertyChanged("OfferId");
					this.OnOfferIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_OfferReseller", Storage="_User", ThisKey="UserId", OtherKey="ID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.OfferResellers.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.OfferResellers.Add(this);
						this._UserId = value.ID;
					}
					else
					{
						this._UserId = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Offer_OfferReseller", Storage="_Offer", ThisKey="OfferId", OtherKey="Id", IsForeignKey=true)]
		public Offer Offer
		{
			get
			{
				return this._Offer.Entity;
			}
			set
			{
				Offer previousValue = this._Offer.Entity;
				if (((previousValue != value) 
							|| (this._Offer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Offer.Entity = null;
						previousValue.OfferResellers.Remove(this);
					}
					this._Offer.Entity = value;
					if ((value != null))
					{
						value.OfferResellers.Add(this);
						this._OfferId = value.Id;
					}
					else
					{
						this._OfferId = default(int);
					}
					this.SendPropertyChanged("Offer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OfferProviders")]
	public partial class OfferProvider : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _OfferId;
		
		private int _ProviderId;
		
		private EntityRef<ServiceProvider> _ServiceProvider;
		
		private EntityRef<Offer> _Offer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOfferIdChanging(int value);
    partial void OnOfferIdChanged();
    partial void OnProviderIdChanging(int value);
    partial void OnProviderIdChanged();
    #endregion
		
		public OfferProvider()
		{
			this._ServiceProvider = default(EntityRef<ServiceProvider>);
			this._Offer = default(EntityRef<Offer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OfferId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int OfferId
		{
			get
			{
				return this._OfferId;
			}
			set
			{
				if ((this._OfferId != value))
				{
					if (this._Offer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOfferIdChanging(value);
					this.SendPropertyChanging();
					this._OfferId = value;
					this.SendPropertyChanged("OfferId");
					this.OnOfferIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProviderId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ProviderId
		{
			get
			{
				return this._ProviderId;
			}
			set
			{
				if ((this._ProviderId != value))
				{
					if (this._ServiceProvider.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProviderIdChanging(value);
					this.SendPropertyChanging();
					this._ProviderId = value;
					this.SendPropertyChanged("ProviderId");
					this.OnProviderIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ServiceProvider_OfferProvider", Storage="_ServiceProvider", ThisKey="ProviderId", OtherKey="ID", IsForeignKey=true)]
		public ServiceProvider ServiceProvider
		{
			get
			{
				return this._ServiceProvider.Entity;
			}
			set
			{
				ServiceProvider previousValue = this._ServiceProvider.Entity;
				if (((previousValue != value) 
							|| (this._ServiceProvider.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ServiceProvider.Entity = null;
						previousValue.OfferProviders.Remove(this);
					}
					this._ServiceProvider.Entity = value;
					if ((value != null))
					{
						value.OfferProviders.Add(this);
						this._ProviderId = value.ID;
					}
					else
					{
						this._ProviderId = default(int);
					}
					this.SendPropertyChanged("ServiceProvider");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Offer_OfferProvider", Storage="_Offer", ThisKey="OfferId", OtherKey="Id", IsForeignKey=true)]
		public Offer Offer
		{
			get
			{
				return this._Offer.Entity;
			}
			set
			{
				Offer previousValue = this._Offer.Entity;
				if (((previousValue != value) 
							|| (this._Offer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Offer.Entity = null;
						previousValue.OfferProviders.Remove(this);
					}
					this._Offer.Entity = value;
					if ((value != null))
					{
						value.OfferProviders.Add(this);
						this._OfferId = value.Id;
					}
					else
					{
						this._OfferId = default(int);
					}
					this.SendPropertyChanged("Offer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Offers")]
	public partial class Offer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Title;
		
		private decimal _Discount;
		
		private int _LifeTime;
		
		private int _FreeMonths;
		
		private bool _ByPercent;
		
		private bool _FreeMonthsFirst;
		
		private decimal _RouterCost;
		
		private bool _CalculateOneBill;
		
		private decimal _CancelPenalty;
		
		private decimal _SuspendPenalty;
		
		private bool _withRouter;
		
		private bool _CanUpgradeorDowngrade;
		
		private EntitySet<WorkOrderHistory> _WorkOrderHistories;
		
		private EntitySet<WorkOrder> _WorkOrders;
		
		private EntitySet<OfferReseller> _OfferResellers;
		
		private EntitySet<OfferProvider> _OfferProviders;
		
		private EntitySet<Demand> _Demands;
		
		private EntitySet<OfferProviderPackage> _OfferProviderPackages;
		
		private EntitySet<OfferBranch> _OfferBranches;
		
		private EntitySet<WorkOrderRequest> _WorkOrderRequests;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnDiscountChanging(decimal value);
    partial void OnDiscountChanged();
    partial void OnLifeTimeChanging(int value);
    partial void OnLifeTimeChanged();
    partial void OnFreeMonthsChanging(int value);
    partial void OnFreeMonthsChanged();
    partial void OnByPercentChanging(bool value);
    partial void OnByPercentChanged();
    partial void OnFreeMonthsFirstChanging(bool value);
    partial void OnFreeMonthsFirstChanged();
    partial void OnRouterCostChanging(decimal value);
    partial void OnRouterCostChanged();
    partial void OnCalculateOneBillChanging(bool value);
    partial void OnCalculateOneBillChanged();
    partial void OnCancelPenaltyChanging(decimal value);
    partial void OnCancelPenaltyChanged();
    partial void OnSuspendPenaltyChanging(decimal value);
    partial void OnSuspendPenaltyChanged();
    partial void OnwithRouterChanging(bool value);
    partial void OnwithRouterChanged();
    partial void OnCanUpgradeorDowngradeChanging(bool value);
    partial void OnCanUpgradeorDowngradeChanged();
    #endregion
		
		public Offer()
		{
			this._WorkOrderHistories = new EntitySet<WorkOrderHistory>(new Action<WorkOrderHistory>(this.attach_WorkOrderHistories), new Action<WorkOrderHistory>(this.detach_WorkOrderHistories));
			this._WorkOrders = new EntitySet<WorkOrder>(new Action<WorkOrder>(this.attach_WorkOrders), new Action<WorkOrder>(this.detach_WorkOrders));
			this._OfferResellers = new EntitySet<OfferReseller>(new Action<OfferReseller>(this.attach_OfferResellers), new Action<OfferReseller>(this.detach_OfferResellers));
			this._OfferProviders = new EntitySet<OfferProvider>(new Action<OfferProvider>(this.attach_OfferProviders), new Action<OfferProvider>(this.detach_OfferProviders));
			this._Demands = new EntitySet<Demand>(new Action<Demand>(this.attach_Demands), new Action<Demand>(this.detach_Demands));
			this._OfferProviderPackages = new EntitySet<OfferProviderPackage>(new Action<OfferProviderPackage>(this.attach_OfferProviderPackages), new Action<OfferProviderPackage>(this.detach_OfferProviderPackages));
			this._OfferBranches = new EntitySet<OfferBranch>(new Action<OfferBranch>(this.attach_OfferBranches), new Action<OfferBranch>(this.detach_OfferBranches));
			this._WorkOrderRequests = new EntitySet<WorkOrderRequest>(new Action<WorkOrderRequest>(this.attach_WorkOrderRequests), new Action<WorkOrderRequest>(this.detach_WorkOrderRequests));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Discount", DbType="Money NOT NULL")]
		public decimal Discount
		{
			get
			{
				return this._Discount;
			}
			set
			{
				if ((this._Discount != value))
				{
					this.OnDiscountChanging(value);
					this.SendPropertyChanging();
					this._Discount = value;
					this.SendPropertyChanged("Discount");
					this.OnDiscountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LifeTime", DbType="Int NOT NULL")]
		public int LifeTime
		{
			get
			{
				return this._LifeTime;
			}
			set
			{
				if ((this._LifeTime != value))
				{
					this.OnLifeTimeChanging(value);
					this.SendPropertyChanging();
					this._LifeTime = value;
					this.SendPropertyChanged("LifeTime");
					this.OnLifeTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FreeMonths", DbType="Int NOT NULL")]
		public int FreeMonths
		{
			get
			{
				return this._FreeMonths;
			}
			set
			{
				if ((this._FreeMonths != value))
				{
					this.OnFreeMonthsChanging(value);
					this.SendPropertyChanging();
					this._FreeMonths = value;
					this.SendPropertyChanged("FreeMonths");
					this.OnFreeMonthsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ByPercent", DbType="Bit NOT NULL")]
		public bool ByPercent
		{
			get
			{
				return this._ByPercent;
			}
			set
			{
				if ((this._ByPercent != value))
				{
					this.OnByPercentChanging(value);
					this.SendPropertyChanging();
					this._ByPercent = value;
					this.SendPropertyChanged("ByPercent");
					this.OnByPercentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FreeMonthsFirst", DbType="Bit NOT NULL")]
		public bool FreeMonthsFirst
		{
			get
			{
				return this._FreeMonthsFirst;
			}
			set
			{
				if ((this._FreeMonthsFirst != value))
				{
					this.OnFreeMonthsFirstChanging(value);
					this.SendPropertyChanging();
					this._FreeMonthsFirst = value;
					this.SendPropertyChanged("FreeMonthsFirst");
					this.OnFreeMonthsFirstChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RouterCost", DbType="Money NOT NULL")]
		public decimal RouterCost
		{
			get
			{
				return this._RouterCost;
			}
			set
			{
				if ((this._RouterCost != value))
				{
					this.OnRouterCostChanging(value);
					this.SendPropertyChanging();
					this._RouterCost = value;
					this.SendPropertyChanged("RouterCost");
					this.OnRouterCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CalculateOneBill", DbType="Bit NOT NULL")]
		public bool CalculateOneBill
		{
			get
			{
				return this._CalculateOneBill;
			}
			set
			{
				if ((this._CalculateOneBill != value))
				{
					this.OnCalculateOneBillChanging(value);
					this.SendPropertyChanging();
					this._CalculateOneBill = value;
					this.SendPropertyChanged("CalculateOneBill");
					this.OnCalculateOneBillChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CancelPenalty", DbType="Money NOT NULL")]
		public decimal CancelPenalty
		{
			get
			{
				return this._CancelPenalty;
			}
			set
			{
				if ((this._CancelPenalty != value))
				{
					this.OnCancelPenaltyChanging(value);
					this.SendPropertyChanging();
					this._CancelPenalty = value;
					this.SendPropertyChanged("CancelPenalty");
					this.OnCancelPenaltyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SuspendPenalty", DbType="Money NOT NULL")]
		public decimal SuspendPenalty
		{
			get
			{
				return this._SuspendPenalty;
			}
			set
			{
				if ((this._SuspendPenalty != value))
				{
					this.OnSuspendPenaltyChanging(value);
					this.SendPropertyChanging();
					this._SuspendPenalty = value;
					this.SendPropertyChanged("SuspendPenalty");
					this.OnSuspendPenaltyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_withRouter", DbType="Bit NOT NULL")]
		public bool withRouter
		{
			get
			{
				return this._withRouter;
			}
			set
			{
				if ((this._withRouter != value))
				{
					this.OnwithRouterChanging(value);
					this.SendPropertyChanging();
					this._withRouter = value;
					this.SendPropertyChanged("withRouter");
					this.OnwithRouterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanUpgradeorDowngrade", DbType="Bit")]
		public bool CanUpgradeorDowngrade
		{
			get
			{
				return this._CanUpgradeorDowngrade;
			}
			set
			{
				if ((this._CanUpgradeorDowngrade != value))
				{
					this.OnCanUpgradeorDowngradeChanging(value);
					this.SendPropertyChanging();
					this._CanUpgradeorDowngrade = value;
					this.SendPropertyChanged("CanUpgradeorDowngrade");
					this.OnCanUpgradeorDowngradeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Offer_WorkOrderHistory", Storage="_WorkOrderHistories", ThisKey="Id", OtherKey="OfferId")]
		public EntitySet<WorkOrderHistory> WorkOrderHistories
		{
			get
			{
				return this._WorkOrderHistories;
			}
			set
			{
				this._WorkOrderHistories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Offer_WorkOrder", Storage="_WorkOrders", ThisKey="Id", OtherKey="OfferId")]
		public EntitySet<WorkOrder> WorkOrders
		{
			get
			{
				return this._WorkOrders;
			}
			set
			{
				this._WorkOrders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Offer_OfferReseller", Storage="_OfferResellers", ThisKey="Id", OtherKey="OfferId")]
		public EntitySet<OfferReseller> OfferResellers
		{
			get
			{
				return this._OfferResellers;
			}
			set
			{
				this._OfferResellers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Offer_OfferProvider", Storage="_OfferProviders", ThisKey="Id", OtherKey="OfferId")]
		public EntitySet<OfferProvider> OfferProviders
		{
			get
			{
				return this._OfferProviders;
			}
			set
			{
				this._OfferProviders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Offer_Demand", Storage="_Demands", ThisKey="Id", OtherKey="OfferId")]
		public EntitySet<Demand> Demands
		{
			get
			{
				return this._Demands;
			}
			set
			{
				this._Demands.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Offer_OfferProviderPackage", Storage="_OfferProviderPackages", ThisKey="Id", OtherKey="OfferId")]
		public EntitySet<OfferProviderPackage> OfferProviderPackages
		{
			get
			{
				return this._OfferProviderPackages;
			}
			set
			{
				this._OfferProviderPackages.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Offer_OfferBranch", Storage="_OfferBranches", ThisKey="Id", OtherKey="OfferId")]
		public EntitySet<OfferBranch> OfferBranches
		{
			get
			{
				return this._OfferBranches;
			}
			set
			{
				this._OfferBranches.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Offer_WorkOrderRequest", Storage="_WorkOrderRequests", ThisKey="Id", OtherKey="NewOfferId")]
		public EntitySet<WorkOrderRequest> WorkOrderRequests
		{
			get
			{
				return this._WorkOrderRequests;
			}
			set
			{
				this._WorkOrderRequests.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_WorkOrderHistories(WorkOrderHistory entity)
		{
			this.SendPropertyChanging();
			entity.Offer = this;
		}
		
		private void detach_WorkOrderHistories(WorkOrderHistory entity)
		{
			this.SendPropertyChanging();
			entity.Offer = null;
		}
		
		private void attach_WorkOrders(WorkOrder entity)
		{
			this.SendPropertyChanging();
			entity.Offer = this;
		}
		
		private void detach_WorkOrders(WorkOrder entity)
		{
			this.SendPropertyChanging();
			entity.Offer = null;
		}
		
		private void attach_OfferResellers(OfferReseller entity)
		{
			this.SendPropertyChanging();
			entity.Offer = this;
		}
		
		private void detach_OfferResellers(OfferReseller entity)
		{
			this.SendPropertyChanging();
			entity.Offer = null;
		}
		
		private void attach_OfferProviders(OfferProvider entity)
		{
			this.SendPropertyChanging();
			entity.Offer = this;
		}
		
		private void detach_OfferProviders(OfferProvider entity)
		{
			this.SendPropertyChanging();
			entity.Offer = null;
		}
		
		private void attach_Demands(Demand entity)
		{
			this.SendPropertyChanging();
			entity.Offer = this;
		}
		
		private void detach_Demands(Demand entity)
		{
			this.SendPropertyChanging();
			entity.Offer = null;
		}
		
		private void attach_OfferProviderPackages(OfferProviderPackage entity)
		{
			this.SendPropertyChanging();
			entity.Offer = this;
		}
		
		private void detach_OfferProviderPackages(OfferProviderPackage entity)
		{
			this.SendPropertyChanging();
			entity.Offer = null;
		}
		
		private void attach_OfferBranches(OfferBranch entity)
		{
			this.SendPropertyChanging();
			entity.Offer = this;
		}
		
		private void detach_OfferBranches(OfferBranch entity)
		{
			this.SendPropertyChanging();
			entity.Offer = null;
		}
		
		private void attach_WorkOrderRequests(WorkOrderRequest entity)
		{
			this.SendPropertyChanging();
			entity.Offer = this;
		}
		
		private void detach_WorkOrderRequests(WorkOrderRequest entity)
		{
			this.SendPropertyChanging();
			entity.Offer = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Reminders")]
	public partial class Reminder : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Body;
		
		private System.DateTime _Date;
		
		private string _Time;
		
		private int _UserId;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnBodyChanging(string value);
    partial void OnBodyChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnTimeChanging(string value);
    partial void OnTimeChanged();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    #endregion
		
		public Reminder()
		{
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Body", DbType="NVarChar(2000) NOT NULL", CanBeNull=false)]
		public string Body
		{
			get
			{
				return this._Body;
			}
			set
			{
				if ((this._Body != value))
				{
					this.OnBodyChanging(value);
					this.SendPropertyChanging();
					this._Body = value;
					this.SendPropertyChanged("Body");
					this.OnBodyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time", DbType="NVarChar(50)")]
		public string Time
		{
			get
			{
				return this._Time;
			}
			set
			{
				if ((this._Time != value))
				{
					this.OnTimeChanging(value);
					this.SendPropertyChanging();
					this._Time = value;
					this.SendPropertyChanged("Time");
					this.OnTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL")]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Reminder", Storage="_User", ThisKey="UserId", OtherKey="ID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Reminders.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Reminders.Add(this);
						this._UserId = value.ID;
					}
					else
					{
						this._UserId = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.QuickSupport")]
	public partial class QuickSupport : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Url;
		
		private string _Body;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUrlChanging(string value);
    partial void OnUrlChanged();
    partial void OnBodyChanging(string value);
    partial void OnBodyChanged();
    #endregion
		
		public QuickSupport()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Url", DbType="NVarChar(300) NOT NULL", CanBeNull=false)]
		public string Url
		{
			get
			{
				return this._Url;
			}
			set
			{
				if ((this._Url != value))
				{
					this.OnUrlChanging(value);
					this.SendPropertyChanging();
					this._Url = value;
					this.SendPropertyChanged("Url");
					this.OnUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Body", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Body
		{
			get
			{
				return this._Body;
			}
			set
			{
				if ((this._Body != value))
				{
					this.OnBodyChanging(value);
					this.SendPropertyChanging();
					this._Body = value;
					this.SendPropertyChanged("Body");
					this.OnBodyChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PaymentTypes")]
	public partial class PaymentType1 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _PaymentTypeName;
		
		private System.Nullable<double> _Amount;
		
		private string _Notes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnPaymentTypeNameChanging(string value);
    partial void OnPaymentTypeNameChanged();
    partial void OnAmountChanging(System.Nullable<double> value);
    partial void OnAmountChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    #endregion
		
		public PaymentType1()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentTypeName", DbType="NVarChar(255)")]
		public string PaymentTypeName
		{
			get
			{
				return this._PaymentTypeName;
			}
			set
			{
				if ((this._PaymentTypeName != value))
				{
					this.OnPaymentTypeNameChanging(value);
					this.SendPropertyChanging();
					this._PaymentTypeName = value;
					this.SendPropertyChanged("PaymentTypeName");
					this.OnPaymentTypeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Float")]
		public System.Nullable<double> Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NChar(10)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[privileges]")]
	public partial class privilege : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private System.Nullable<int> _ParentID;
		
		private string _Url;
		
		private string _Notes;
		
		private System.Nullable<int> _PrivilegeTypeID;
		
		private System.Nullable<int> _PrivOrder;
		
		private System.Nullable<bool> _ISLinked;
		
		private string _LinkedName;
		
		private System.Nullable<bool> _Isparent;
		
		private string _ParentPageName;
		
		private EntitySet<GroupPrivilege> _GroupPrivileges;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnParentIDChanging(System.Nullable<int> value);
    partial void OnParentIDChanged();
    partial void OnUrlChanging(string value);
    partial void OnUrlChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnPrivilegeTypeIDChanging(System.Nullable<int> value);
    partial void OnPrivilegeTypeIDChanged();
    partial void OnPrivOrderChanging(System.Nullable<int> value);
    partial void OnPrivOrderChanged();
    partial void OnISLinkedChanging(System.Nullable<bool> value);
    partial void OnISLinkedChanged();
    partial void OnLinkedNameChanging(string value);
    partial void OnLinkedNameChanged();
    partial void OnIsparentChanging(System.Nullable<bool> value);
    partial void OnIsparentChanged();
    partial void OnParentPageNameChanging(string value);
    partial void OnParentPageNameChanged();
    #endregion
		
		public privilege()
		{
			this._GroupPrivileges = new EntitySet<GroupPrivilege>(new Action<GroupPrivilege>(this.attach_GroupPrivileges), new Action<GroupPrivilege>(this.detach_GroupPrivileges));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(255)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentID", DbType="Int")]
		public System.Nullable<int> ParentID
		{
			get
			{
				return this._ParentID;
			}
			set
			{
				if ((this._ParentID != value))
				{
					this.OnParentIDChanging(value);
					this.SendPropertyChanging();
					this._ParentID = value;
					this.SendPropertyChanged("ParentID");
					this.OnParentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Url", DbType="NVarChar(255)")]
		public string Url
		{
			get
			{
				return this._Url;
			}
			set
			{
				if ((this._Url != value))
				{
					this.OnUrlChanging(value);
					this.SendPropertyChanging();
					this._Url = value;
					this.SendPropertyChanged("Url");
					this.OnUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrivilegeTypeID", DbType="Int")]
		public System.Nullable<int> PrivilegeTypeID
		{
			get
			{
				return this._PrivilegeTypeID;
			}
			set
			{
				if ((this._PrivilegeTypeID != value))
				{
					this.OnPrivilegeTypeIDChanging(value);
					this.SendPropertyChanging();
					this._PrivilegeTypeID = value;
					this.SendPropertyChanged("PrivilegeTypeID");
					this.OnPrivilegeTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrivOrder", DbType="Int")]
		public System.Nullable<int> PrivOrder
		{
			get
			{
				return this._PrivOrder;
			}
			set
			{
				if ((this._PrivOrder != value))
				{
					this.OnPrivOrderChanging(value);
					this.SendPropertyChanging();
					this._PrivOrder = value;
					this.SendPropertyChanged("PrivOrder");
					this.OnPrivOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISLinked", DbType="Bit")]
		public System.Nullable<bool> ISLinked
		{
			get
			{
				return this._ISLinked;
			}
			set
			{
				if ((this._ISLinked != value))
				{
					this.OnISLinkedChanging(value);
					this.SendPropertyChanging();
					this._ISLinked = value;
					this.SendPropertyChanged("ISLinked");
					this.OnISLinkedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LinkedName", DbType="NVarChar(255)")]
		public string LinkedName
		{
			get
			{
				return this._LinkedName;
			}
			set
			{
				if ((this._LinkedName != value))
				{
					this.OnLinkedNameChanging(value);
					this.SendPropertyChanging();
					this._LinkedName = value;
					this.SendPropertyChanged("LinkedName");
					this.OnLinkedNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Isparent", DbType="Bit")]
		public System.Nullable<bool> Isparent
		{
			get
			{
				return this._Isparent;
			}
			set
			{
				if ((this._Isparent != value))
				{
					this.OnIsparentChanging(value);
					this.SendPropertyChanging();
					this._Isparent = value;
					this.SendPropertyChanged("Isparent");
					this.OnIsparentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentPageName", DbType="NVarChar(255)")]
		public string ParentPageName
		{
			get
			{
				return this._ParentPageName;
			}
			set
			{
				if ((this._ParentPageName != value))
				{
					this.OnParentPageNameChanging(value);
					this.SendPropertyChanging();
					this._ParentPageName = value;
					this.SendPropertyChanged("ParentPageName");
					this.OnParentPageNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="privilege_GroupPrivilege", Storage="_GroupPrivileges", ThisKey="ID", OtherKey="PrivilegeID")]
		public EntitySet<GroupPrivilege> GroupPrivileges
		{
			get
			{
				return this._GroupPrivileges;
			}
			set
			{
				this._GroupPrivileges.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_GroupPrivileges(GroupPrivilege entity)
		{
			this.SendPropertyChanging();
			entity.privilege = this;
		}
		
		private void detach_GroupPrivileges(GroupPrivilege entity)
		{
			this.SendPropertyChanging();
			entity.privilege = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Groups")]
	public partial class Group : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _DataLevelID;
		
		private string _GroupName;
		
		private string _Notes;
		
		private EntitySet<User> _Users;
		
		private EntitySet<GroupPrivilege> _GroupPrivileges;
		
		private EntitySet<UpdatedResellerBSPrivilage> _UpdatedResellerBSPrivilages;
		
		private EntityRef<DataLevel> _DataLevel;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnDataLevelIDChanging(System.Nullable<int> value);
    partial void OnDataLevelIDChanged();
    partial void OnGroupNameChanging(string value);
    partial void OnGroupNameChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    #endregion
		
		public Group()
		{
			this._Users = new EntitySet<User>(new Action<User>(this.attach_Users), new Action<User>(this.detach_Users));
			this._GroupPrivileges = new EntitySet<GroupPrivilege>(new Action<GroupPrivilege>(this.attach_GroupPrivileges), new Action<GroupPrivilege>(this.detach_GroupPrivileges));
			this._UpdatedResellerBSPrivilages = new EntitySet<UpdatedResellerBSPrivilage>(new Action<UpdatedResellerBSPrivilage>(this.attach_UpdatedResellerBSPrivilages), new Action<UpdatedResellerBSPrivilage>(this.detach_UpdatedResellerBSPrivilages));
			this._DataLevel = default(EntityRef<DataLevel>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataLevelID", DbType="Int")]
		public System.Nullable<int> DataLevelID
		{
			get
			{
				return this._DataLevelID;
			}
			set
			{
				if ((this._DataLevelID != value))
				{
					if (this._DataLevel.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDataLevelIDChanging(value);
					this.SendPropertyChanging();
					this._DataLevelID = value;
					this.SendPropertyChanged("DataLevelID");
					this.OnDataLevelIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupName", DbType="NVarChar(255)")]
		public string GroupName
		{
			get
			{
				return this._GroupName;
			}
			set
			{
				if ((this._GroupName != value))
				{
					this.OnGroupNameChanging(value);
					this.SendPropertyChanging();
					this._GroupName = value;
					this.SendPropertyChanged("GroupName");
					this.OnGroupNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(MAX)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Group_User", Storage="_Users", ThisKey="ID", OtherKey="GroupID")]
		public EntitySet<User> Users
		{
			get
			{
				return this._Users;
			}
			set
			{
				this._Users.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Group_GroupPrivilege", Storage="_GroupPrivileges", ThisKey="ID", OtherKey="GroupID")]
		public EntitySet<GroupPrivilege> GroupPrivileges
		{
			get
			{
				return this._GroupPrivileges;
			}
			set
			{
				this._GroupPrivileges.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Group_UpdatedResellerBSPrivilage", Storage="_UpdatedResellerBSPrivilages", ThisKey="ID", OtherKey="GroupId")]
		public EntitySet<UpdatedResellerBSPrivilage> UpdatedResellerBSPrivilages
		{
			get
			{
				return this._UpdatedResellerBSPrivilages;
			}
			set
			{
				this._UpdatedResellerBSPrivilages.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DataLevel_Group", Storage="_DataLevel", ThisKey="DataLevelID", OtherKey="ID", IsForeignKey=true)]
		public DataLevel DataLevel
		{
			get
			{
				return this._DataLevel.Entity;
			}
			set
			{
				DataLevel previousValue = this._DataLevel.Entity;
				if (((previousValue != value) 
							|| (this._DataLevel.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DataLevel.Entity = null;
						previousValue.Groups.Remove(this);
					}
					this._DataLevel.Entity = value;
					if ((value != null))
					{
						value.Groups.Add(this);
						this._DataLevelID = value.ID;
					}
					else
					{
						this._DataLevelID = default(Nullable<int>);
					}
					this.SendPropertyChanged("DataLevel");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Users(User entity)
		{
			this.SendPropertyChanging();
			entity.Group = this;
		}
		
		private void detach_Users(User entity)
		{
			this.SendPropertyChanging();
			entity.Group = null;
		}
		
		private void attach_GroupPrivileges(GroupPrivilege entity)
		{
			this.SendPropertyChanging();
			entity.Group = this;
		}
		
		private void detach_GroupPrivileges(GroupPrivilege entity)
		{
			this.SendPropertyChanging();
			entity.Group = null;
		}
		
		private void attach_UpdatedResellerBSPrivilages(UpdatedResellerBSPrivilage entity)
		{
			this.SendPropertyChanging();
			entity.Group = this;
		}
		
		private void detach_UpdatedResellerBSPrivilages(UpdatedResellerBSPrivilage entity)
		{
			this.SendPropertyChanging();
			entity.Group = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GroupPrivileges")]
	public partial class GroupPrivilege : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _GroupID;
		
		private System.Nullable<int> _PrivilegeID;
		
		private System.Nullable<int> _Notes;
		
		private EntityRef<Group> _Group;
		
		private EntityRef<privilege> _privilege;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnGroupIDChanging(System.Nullable<int> value);
    partial void OnGroupIDChanged();
    partial void OnPrivilegeIDChanging(System.Nullable<int> value);
    partial void OnPrivilegeIDChanged();
    partial void OnNotesChanging(System.Nullable<int> value);
    partial void OnNotesChanged();
    #endregion
		
		public GroupPrivilege()
		{
			this._Group = default(EntityRef<Group>);
			this._privilege = default(EntityRef<privilege>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupID", DbType="Int")]
		public System.Nullable<int> GroupID
		{
			get
			{
				return this._GroupID;
			}
			set
			{
				if ((this._GroupID != value))
				{
					if (this._Group.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGroupIDChanging(value);
					this.SendPropertyChanging();
					this._GroupID = value;
					this.SendPropertyChanged("GroupID");
					this.OnGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrivilegeID", DbType="Int")]
		public System.Nullable<int> PrivilegeID
		{
			get
			{
				return this._PrivilegeID;
			}
			set
			{
				if ((this._PrivilegeID != value))
				{
					if (this._privilege.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPrivilegeIDChanging(value);
					this.SendPropertyChanging();
					this._PrivilegeID = value;
					this.SendPropertyChanged("PrivilegeID");
					this.OnPrivilegeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="Int")]
		public System.Nullable<int> Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Group_GroupPrivilege", Storage="_Group", ThisKey="GroupID", OtherKey="ID", IsForeignKey=true)]
		public Group Group
		{
			get
			{
				return this._Group.Entity;
			}
			set
			{
				Group previousValue = this._Group.Entity;
				if (((previousValue != value) 
							|| (this._Group.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Group.Entity = null;
						previousValue.GroupPrivileges.Remove(this);
					}
					this._Group.Entity = value;
					if ((value != null))
					{
						value.GroupPrivileges.Add(this);
						this._GroupID = value.ID;
					}
					else
					{
						this._GroupID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Group");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="privilege_GroupPrivilege", Storage="_privilege", ThisKey="PrivilegeID", OtherKey="ID", IsForeignKey=true)]
		public privilege privilege
		{
			get
			{
				return this._privilege.Entity;
			}
			set
			{
				privilege previousValue = this._privilege.Entity;
				if (((previousValue != value) 
							|| (this._privilege.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._privilege.Entity = null;
						previousValue.GroupPrivileges.Remove(this);
					}
					this._privilege.Entity = value;
					if ((value != null))
					{
						value.GroupPrivileges.Add(this);
						this._PrivilegeID = value.ID;
					}
					else
					{
						this._PrivilegeID = default(Nullable<int>);
					}
					this.SendPropertyChanged("privilege");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DataLevel")]
	public partial class DataLevel : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private string _Notes;
		
		private EntitySet<Group> _Groups;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    #endregion
		
		public DataLevel()
		{
			this._Groups = new EntitySet<Group>(new Action<Group>(this.attach_Groups), new Action<Group>(this.detach_Groups));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(255)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(MAX)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DataLevel_Group", Storage="_Groups", ThisKey="ID", OtherKey="DataLevelID")]
		public EntitySet<Group> Groups
		{
			get
			{
				return this._Groups;
			}
			set
			{
				this._Groups.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Groups(Group entity)
		{
			this.SendPropertyChanging();
			entity.DataLevel = this;
		}
		
		private void detach_Groups(Group entity)
		{
			this.SendPropertyChanging();
			entity.DataLevel = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ExtraGigas")]
	public partial class ExtraGiga : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private decimal _Price;
		
		private EntitySet<WorkOrder> _WorkOrders;
		
		private EntitySet<WorkOrderRequest> _WorkOrderRequests;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnPriceChanging(decimal value);
    partial void OnPriceChanged();
    #endregion
		
		public ExtraGiga()
		{
			this._WorkOrders = new EntitySet<WorkOrder>(new Action<WorkOrder>(this.attach_WorkOrders), new Action<WorkOrder>(this.detach_WorkOrders));
			this._WorkOrderRequests = new EntitySet<WorkOrderRequest>(new Action<WorkOrderRequest>(this.attach_WorkOrderRequests), new Action<WorkOrderRequest>(this.detach_WorkOrderRequests));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(555) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Money NOT NULL")]
		public decimal Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ExtraGiga_WorkOrder", Storage="_WorkOrders", ThisKey="Id", OtherKey="ExtraGigaId")]
		public EntitySet<WorkOrder> WorkOrders
		{
			get
			{
				return this._WorkOrders;
			}
			set
			{
				this._WorkOrders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ExtraGiga_WorkOrderRequest", Storage="_WorkOrderRequests", ThisKey="Id", OtherKey="ExtraGigaId")]
		public EntitySet<WorkOrderRequest> WorkOrderRequests
		{
			get
			{
				return this._WorkOrderRequests;
			}
			set
			{
				this._WorkOrderRequests.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_WorkOrders(WorkOrder entity)
		{
			this.SendPropertyChanging();
			entity.ExtraGiga = this;
		}
		
		private void detach_WorkOrders(WorkOrder entity)
		{
			this.SendPropertyChanging();
			entity.ExtraGiga = null;
		}
		
		private void attach_WorkOrderRequests(WorkOrderRequest entity)
		{
			this.SendPropertyChanging();
			entity.ExtraGiga = this;
		}
		
		private void detach_WorkOrderRequests(WorkOrderRequest entity)
		{
			this.SendPropertyChanging();
			entity.ExtraGiga = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ResellerPackagesDiscounts")]
	public partial class ResellerPackagesDiscount : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _ResellerId;
		
		private int _ProviderId;
		
		private int _PackageId;
		
		private decimal _Discount;
		
		private string _Notes;
		
		private EntityRef<ServicePackage> _ServicePackage;
		
		private EntityRef<ServiceProvider> _ServiceProvider;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnResellerIdChanging(int value);
    partial void OnResellerIdChanged();
    partial void OnProviderIdChanging(int value);
    partial void OnProviderIdChanged();
    partial void OnPackageIdChanging(int value);
    partial void OnPackageIdChanged();
    partial void OnDiscountChanging(decimal value);
    partial void OnDiscountChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    #endregion
		
		public ResellerPackagesDiscount()
		{
			this._ServicePackage = default(EntityRef<ServicePackage>);
			this._ServiceProvider = default(EntityRef<ServiceProvider>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResellerId", DbType="Int NOT NULL")]
		public int ResellerId
		{
			get
			{
				return this._ResellerId;
			}
			set
			{
				if ((this._ResellerId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnResellerIdChanging(value);
					this.SendPropertyChanging();
					this._ResellerId = value;
					this.SendPropertyChanged("ResellerId");
					this.OnResellerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProviderId", DbType="Int NOT NULL")]
		public int ProviderId
		{
			get
			{
				return this._ProviderId;
			}
			set
			{
				if ((this._ProviderId != value))
				{
					if (this._ServiceProvider.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProviderIdChanging(value);
					this.SendPropertyChanging();
					this._ProviderId = value;
					this.SendPropertyChanged("ProviderId");
					this.OnProviderIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PackageId", DbType="Int NOT NULL")]
		public int PackageId
		{
			get
			{
				return this._PackageId;
			}
			set
			{
				if ((this._PackageId != value))
				{
					if (this._ServicePackage.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPackageIdChanging(value);
					this.SendPropertyChanging();
					this._PackageId = value;
					this.SendPropertyChanged("PackageId");
					this.OnPackageIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Discount", DbType="Money NOT NULL")]
		public decimal Discount
		{
			get
			{
				return this._Discount;
			}
			set
			{
				if ((this._Discount != value))
				{
					this.OnDiscountChanging(value);
					this.SendPropertyChanging();
					this._Discount = value;
					this.SendPropertyChanged("Discount");
					this.OnDiscountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(955)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ServicePackage_ResellerPackagesDiscount", Storage="_ServicePackage", ThisKey="PackageId", OtherKey="ID", IsForeignKey=true)]
		public ServicePackage ServicePackage
		{
			get
			{
				return this._ServicePackage.Entity;
			}
			set
			{
				ServicePackage previousValue = this._ServicePackage.Entity;
				if (((previousValue != value) 
							|| (this._ServicePackage.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ServicePackage.Entity = null;
						previousValue.ResellerPackagesDiscounts.Remove(this);
					}
					this._ServicePackage.Entity = value;
					if ((value != null))
					{
						value.ResellerPackagesDiscounts.Add(this);
						this._PackageId = value.ID;
					}
					else
					{
						this._PackageId = default(int);
					}
					this.SendPropertyChanged("ServicePackage");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ServiceProvider_ResellerPackagesDiscount", Storage="_ServiceProvider", ThisKey="ProviderId", OtherKey="ID", IsForeignKey=true)]
		public ServiceProvider ServiceProvider
		{
			get
			{
				return this._ServiceProvider.Entity;
			}
			set
			{
				ServiceProvider previousValue = this._ServiceProvider.Entity;
				if (((previousValue != value) 
							|| (this._ServiceProvider.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ServiceProvider.Entity = null;
						previousValue.ResellerPackagesDiscounts.Remove(this);
					}
					this._ServiceProvider.Entity = value;
					if ((value != null))
					{
						value.ResellerPackagesDiscounts.Add(this);
						this._ProviderId = value.ID;
					}
					else
					{
						this._ProviderId = default(int);
					}
					this.SendPropertyChanged("ServiceProvider");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_ResellerPackagesDiscount", Storage="_User", ThisKey="ResellerId", OtherKey="ID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.ResellerPackagesDiscounts.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.ResellerPackagesDiscounts.Add(this);
						this._ResellerId = value.ID;
					}
					else
					{
						this._ResellerId = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Demands")]
	public partial class Demand : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.DateTime _StartAt;
		
		private System.DateTime _EndAt;
		
		private int _WorkOrderId;
		
		private bool _Paid;
		
		private decimal _Amount;
		
		private System.Nullable<int> _OfferId;
		
		private string _Notes;
		
		private int _UserId;
		
		private string _PaymentComment;
		
		private System.Nullable<System.DateTime> _PaymentDate;
		
		private System.Nullable<int> _Year;
		
		private System.Nullable<int> _Month;
		
		private System.Nullable<bool> _BranchPaid;
		
		private System.Nullable<bool> _IsRequested;
		
		private System.Nullable<decimal> _CaseDetectSuspend;
		
		private System.Nullable<int> _BoxCreditId;
		
		private System.Nullable<bool> _IsResellerCommisstions;
		
		private EntitySet<Receipt> _Receipts;
		
		private EntitySet<DebtsInvoice> _DebtsInvoices;
		
		private EntitySet<PayingCustomersReseller> _PayingCustomersResellers;
		
		private EntitySet<ResellerUnpaidDemandComment> _ResellerUnpaidDemandComments;
		
		private EntitySet<BranchInvoiceComment> _BranchInvoiceComments;
		
		private EntitySet<WorkOrderRequest> _WorkOrderRequests;
		
		private EntitySet<FawryPaymentRecord> _FawryPaymentRecords;
		
		private EntityRef<Offer> _Offer;
		
		private EntityRef<User> _User;
		
		private EntityRef<WorkOrder> _WorkOrder;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnStartAtChanging(System.DateTime value);
    partial void OnStartAtChanged();
    partial void OnEndAtChanging(System.DateTime value);
    partial void OnEndAtChanged();
    partial void OnWorkOrderIdChanging(int value);
    partial void OnWorkOrderIdChanged();
    partial void OnPaidChanging(bool value);
    partial void OnPaidChanged();
    partial void OnAmountChanging(decimal value);
    partial void OnAmountChanged();
    partial void OnOfferIdChanging(System.Nullable<int> value);
    partial void OnOfferIdChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnPaymentCommentChanging(string value);
    partial void OnPaymentCommentChanged();
    partial void OnPaymentDateChanging(System.Nullable<System.DateTime> value);
    partial void OnPaymentDateChanged();
    partial void OnYearChanging(System.Nullable<int> value);
    partial void OnYearChanged();
    partial void OnMonthChanging(System.Nullable<int> value);
    partial void OnMonthChanged();
    partial void OnBranchPaidChanging(System.Nullable<bool> value);
    partial void OnBranchPaidChanged();
    partial void OnIsRequestedChanging(System.Nullable<bool> value);
    partial void OnIsRequestedChanged();
    partial void OnCaseDetectSuspendChanging(System.Nullable<decimal> value);
    partial void OnCaseDetectSuspendChanged();
    partial void OnBoxCreditIdChanging(System.Nullable<int> value);
    partial void OnBoxCreditIdChanged();
    partial void OnIsResellerCommisstionsChanging(System.Nullable<bool> value);
    partial void OnIsResellerCommisstionsChanged();
    #endregion
		
		public Demand()
		{
			this._Receipts = new EntitySet<Receipt>(new Action<Receipt>(this.attach_Receipts), new Action<Receipt>(this.detach_Receipts));
			this._DebtsInvoices = new EntitySet<DebtsInvoice>(new Action<DebtsInvoice>(this.attach_DebtsInvoices), new Action<DebtsInvoice>(this.detach_DebtsInvoices));
			this._PayingCustomersResellers = new EntitySet<PayingCustomersReseller>(new Action<PayingCustomersReseller>(this.attach_PayingCustomersResellers), new Action<PayingCustomersReseller>(this.detach_PayingCustomersResellers));
			this._ResellerUnpaidDemandComments = new EntitySet<ResellerUnpaidDemandComment>(new Action<ResellerUnpaidDemandComment>(this.attach_ResellerUnpaidDemandComments), new Action<ResellerUnpaidDemandComment>(this.detach_ResellerUnpaidDemandComments));
			this._BranchInvoiceComments = new EntitySet<BranchInvoiceComment>(new Action<BranchInvoiceComment>(this.attach_BranchInvoiceComments), new Action<BranchInvoiceComment>(this.detach_BranchInvoiceComments));
			this._WorkOrderRequests = new EntitySet<WorkOrderRequest>(new Action<WorkOrderRequest>(this.attach_WorkOrderRequests), new Action<WorkOrderRequest>(this.detach_WorkOrderRequests));
			this._FawryPaymentRecords = new EntitySet<FawryPaymentRecord>(new Action<FawryPaymentRecord>(this.attach_FawryPaymentRecords), new Action<FawryPaymentRecord>(this.detach_FawryPaymentRecords));
			this._Offer = default(EntityRef<Offer>);
			this._User = default(EntityRef<User>);
			this._WorkOrder = default(EntityRef<WorkOrder>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartAt", DbType="DateTime NOT NULL")]
		public System.DateTime StartAt
		{
			get
			{
				return this._StartAt;
			}
			set
			{
				if ((this._StartAt != value))
				{
					this.OnStartAtChanging(value);
					this.SendPropertyChanging();
					this._StartAt = value;
					this.SendPropertyChanged("StartAt");
					this.OnStartAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndAt", DbType="DateTime NOT NULL")]
		public System.DateTime EndAt
		{
			get
			{
				return this._EndAt;
			}
			set
			{
				if ((this._EndAt != value))
				{
					this.OnEndAtChanging(value);
					this.SendPropertyChanging();
					this._EndAt = value;
					this.SendPropertyChanged("EndAt");
					this.OnEndAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkOrderId", DbType="Int NOT NULL")]
		public int WorkOrderId
		{
			get
			{
				return this._WorkOrderId;
			}
			set
			{
				if ((this._WorkOrderId != value))
				{
					if (this._WorkOrder.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWorkOrderIdChanging(value);
					this.SendPropertyChanging();
					this._WorkOrderId = value;
					this.SendPropertyChanged("WorkOrderId");
					this.OnWorkOrderIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Paid", DbType="Bit NOT NULL")]
		public bool Paid
		{
			get
			{
				return this._Paid;
			}
			set
			{
				if ((this._Paid != value))
				{
					this.OnPaidChanging(value);
					this.SendPropertyChanging();
					this._Paid = value;
					this.SendPropertyChanged("Paid");
					this.OnPaidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Money NOT NULL")]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OfferId", DbType="Int")]
		public System.Nullable<int> OfferId
		{
			get
			{
				return this._OfferId;
			}
			set
			{
				if ((this._OfferId != value))
				{
					if (this._Offer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOfferIdChanging(value);
					this.SendPropertyChanging();
					this._OfferId = value;
					this.SendPropertyChanged("OfferId");
					this.OnOfferIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(1000)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL")]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentComment", DbType="NVarChar(1000)")]
		public string PaymentComment
		{
			get
			{
				return this._PaymentComment;
			}
			set
			{
				if ((this._PaymentComment != value))
				{
					this.OnPaymentCommentChanging(value);
					this.SendPropertyChanging();
					this._PaymentComment = value;
					this.SendPropertyChanged("PaymentComment");
					this.OnPaymentCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentDate", DbType="datetime")]
		public System.Nullable<System.DateTime> PaymentDate
		{
			get
			{
				return this._PaymentDate;
			}
			set
			{
				if ((this._PaymentDate != value))
				{
					this.OnPaymentDateChanging(value);
					this.SendPropertyChanging();
					this._PaymentDate = value;
					this.SendPropertyChanged("PaymentDate");
					this.OnPaymentDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Year", DbType="int")]
		public System.Nullable<int> Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this.OnYearChanging(value);
					this.SendPropertyChanging();
					this._Year = value;
					this.SendPropertyChanged("Year");
					this.OnYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Month", DbType="int")]
		public System.Nullable<int> Month
		{
			get
			{
				return this._Month;
			}
			set
			{
				if ((this._Month != value))
				{
					this.OnMonthChanging(value);
					this.SendPropertyChanging();
					this._Month = value;
					this.SendPropertyChanged("Month");
					this.OnMonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchPaid", DbType="bit")]
		public System.Nullable<bool> BranchPaid
		{
			get
			{
				return this._BranchPaid;
			}
			set
			{
				if ((this._BranchPaid != value))
				{
					this.OnBranchPaidChanging(value);
					this.SendPropertyChanging();
					this._BranchPaid = value;
					this.SendPropertyChanged("BranchPaid");
					this.OnBranchPaidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRequested", DbType="bit")]
		public System.Nullable<bool> IsRequested
		{
			get
			{
				return this._IsRequested;
			}
			set
			{
				if ((this._IsRequested != value))
				{
					this.OnIsRequestedChanging(value);
					this.SendPropertyChanging();
					this._IsRequested = value;
					this.SendPropertyChanged("IsRequested");
					this.OnIsRequestedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CaseDetectSuspend", DbType="Money NOT NULL")]
		public System.Nullable<decimal> CaseDetectSuspend
		{
			get
			{
				return this._CaseDetectSuspend;
			}
			set
			{
				if ((this._CaseDetectSuspend != value))
				{
					this.OnCaseDetectSuspendChanging(value);
					this.SendPropertyChanging();
					this._CaseDetectSuspend = value;
					this.SendPropertyChanged("CaseDetectSuspend");
					this.OnCaseDetectSuspendChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BoxCreditId", DbType="int")]
		public System.Nullable<int> BoxCreditId
		{
			get
			{
				return this._BoxCreditId;
			}
			set
			{
				if ((this._BoxCreditId != value))
				{
					this.OnBoxCreditIdChanging(value);
					this.SendPropertyChanging();
					this._BoxCreditId = value;
					this.SendPropertyChanged("BoxCreditId");
					this.OnBoxCreditIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="IsResellerCommisstion", Storage="_IsResellerCommisstions", DbType="Bit")]
		public System.Nullable<bool> IsResellerCommisstions
		{
			get
			{
				return this._IsResellerCommisstions;
			}
			set
			{
				if ((this._IsResellerCommisstions != value))
				{
					this.OnIsResellerCommisstionsChanging(value);
					this.SendPropertyChanging();
					this._IsResellerCommisstions = value;
					this.SendPropertyChanged("IsResellerCommisstions");
					this.OnIsResellerCommisstionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Demand_Receipt", Storage="_Receipts", ThisKey="Id", OtherKey="DemandId")]
		public EntitySet<Receipt> Receipts
		{
			get
			{
				return this._Receipts;
			}
			set
			{
				this._Receipts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Demand_DebtsInvoice", Storage="_DebtsInvoices", ThisKey="Id", OtherKey="DemandId")]
		public EntitySet<DebtsInvoice> DebtsInvoices
		{
			get
			{
				return this._DebtsInvoices;
			}
			set
			{
				this._DebtsInvoices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Demand_PayingCustomersReseller", Storage="_PayingCustomersResellers", ThisKey="Id", OtherKey="DemandId")]
		public EntitySet<PayingCustomersReseller> PayingCustomersResellers
		{
			get
			{
				return this._PayingCustomersResellers;
			}
			set
			{
				this._PayingCustomersResellers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Demand_ResellerUnpaidDemandComment", Storage="_ResellerUnpaidDemandComments", ThisKey="Id", OtherKey="DemandId")]
		public EntitySet<ResellerUnpaidDemandComment> ResellerUnpaidDemandComments
		{
			get
			{
				return this._ResellerUnpaidDemandComments;
			}
			set
			{
				this._ResellerUnpaidDemandComments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Demand_BranchInvoiceComment", Storage="_BranchInvoiceComments", ThisKey="Id", OtherKey="DemandId")]
		public EntitySet<BranchInvoiceComment> BranchInvoiceComments
		{
			get
			{
				return this._BranchInvoiceComments;
			}
			set
			{
				this._BranchInvoiceComments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Demand_WorkOrderRequest", Storage="_WorkOrderRequests", ThisKey="Id", OtherKey="DemandId")]
		public EntitySet<WorkOrderRequest> WorkOrderRequests
		{
			get
			{
				return this._WorkOrderRequests;
			}
			set
			{
				this._WorkOrderRequests.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Demand_FawryPaymentRecord", Storage="_FawryPaymentRecords", ThisKey="Id", OtherKey="DemandId")]
		public EntitySet<FawryPaymentRecord> FawryPaymentRecords
		{
			get
			{
				return this._FawryPaymentRecords;
			}
			set
			{
				this._FawryPaymentRecords.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Offer_Demand", Storage="_Offer", ThisKey="OfferId", OtherKey="Id", IsForeignKey=true)]
		public Offer Offer
		{
			get
			{
				return this._Offer.Entity;
			}
			set
			{
				Offer previousValue = this._Offer.Entity;
				if (((previousValue != value) 
							|| (this._Offer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Offer.Entity = null;
						previousValue.Demands.Remove(this);
					}
					this._Offer.Entity = value;
					if ((value != null))
					{
						value.Demands.Add(this);
						this._OfferId = value.Id;
					}
					else
					{
						this._OfferId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Offer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Demand", Storage="_User", ThisKey="UserId", OtherKey="ID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Demands.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Demands.Add(this);
						this._UserId = value.ID;
					}
					else
					{
						this._UserId = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WorkOrder_Demand", Storage="_WorkOrder", ThisKey="WorkOrderId", OtherKey="ID", IsForeignKey=true)]
		public WorkOrder WorkOrder
		{
			get
			{
				return this._WorkOrder.Entity;
			}
			set
			{
				WorkOrder previousValue = this._WorkOrder.Entity;
				if (((previousValue != value) 
							|| (this._WorkOrder.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WorkOrder.Entity = null;
						previousValue.Demands.Remove(this);
					}
					this._WorkOrder.Entity = value;
					if ((value != null))
					{
						value.Demands.Add(this);
						this._WorkOrderId = value.ID;
					}
					else
					{
						this._WorkOrderId = default(int);
					}
					this.SendPropertyChanged("WorkOrder");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Receipts(Receipt entity)
		{
			this.SendPropertyChanging();
			entity.Demand = this;
		}
		
		private void detach_Receipts(Receipt entity)
		{
			this.SendPropertyChanging();
			entity.Demand = null;
		}
		
		private void attach_DebtsInvoices(DebtsInvoice entity)
		{
			this.SendPropertyChanging();
			entity.Demand = this;
		}
		
		private void detach_DebtsInvoices(DebtsInvoice entity)
		{
			this.SendPropertyChanging();
			entity.Demand = null;
		}
		
		private void attach_PayingCustomersResellers(PayingCustomersReseller entity)
		{
			this.SendPropertyChanging();
			entity.Demand = this;
		}
		
		private void detach_PayingCustomersResellers(PayingCustomersReseller entity)
		{
			this.SendPropertyChanging();
			entity.Demand = null;
		}
		
		private void attach_ResellerUnpaidDemandComments(ResellerUnpaidDemandComment entity)
		{
			this.SendPropertyChanging();
			entity.Demand = this;
		}
		
		private void detach_ResellerUnpaidDemandComments(ResellerUnpaidDemandComment entity)
		{
			this.SendPropertyChanging();
			entity.Demand = null;
		}
		
		private void attach_BranchInvoiceComments(BranchInvoiceComment entity)
		{
			this.SendPropertyChanging();
			entity.Demand = this;
		}
		
		private void detach_BranchInvoiceComments(BranchInvoiceComment entity)
		{
			this.SendPropertyChanging();
			entity.Demand = null;
		}
		
		private void attach_WorkOrderRequests(WorkOrderRequest entity)
		{
			this.SendPropertyChanging();
			entity.Demand = this;
		}
		
		private void detach_WorkOrderRequests(WorkOrderRequest entity)
		{
			this.SendPropertyChanging();
			entity.Demand = null;
		}
		
		private void attach_FawryPaymentRecords(FawryPaymentRecord entity)
		{
			this.SendPropertyChanging();
			entity.Demand = this;
		}
		
		private void detach_FawryPaymentRecords(FawryPaymentRecord entity)
		{
			this.SendPropertyChanging();
			entity.Demand = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OfferProviderPackages")]
	public partial class OfferProviderPackage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _OfferId;
		
		private int _PackageId;
		
		private EntityRef<Offer> _Offer;
		
		private EntityRef<ServicePackage> _ServicePackage;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOfferIdChanging(int value);
    partial void OnOfferIdChanged();
    partial void OnPackageIdChanging(int value);
    partial void OnPackageIdChanged();
    #endregion
		
		public OfferProviderPackage()
		{
			this._Offer = default(EntityRef<Offer>);
			this._ServicePackage = default(EntityRef<ServicePackage>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OfferId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int OfferId
		{
			get
			{
				return this._OfferId;
			}
			set
			{
				if ((this._OfferId != value))
				{
					if (this._Offer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOfferIdChanging(value);
					this.SendPropertyChanging();
					this._OfferId = value;
					this.SendPropertyChanged("OfferId");
					this.OnOfferIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PackageId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int PackageId
		{
			get
			{
				return this._PackageId;
			}
			set
			{
				if ((this._PackageId != value))
				{
					if (this._ServicePackage.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPackageIdChanging(value);
					this.SendPropertyChanging();
					this._PackageId = value;
					this.SendPropertyChanged("PackageId");
					this.OnPackageIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Offer_OfferProviderPackage", Storage="_Offer", ThisKey="OfferId", OtherKey="Id", IsForeignKey=true)]
		public Offer Offer
		{
			get
			{
				return this._Offer.Entity;
			}
			set
			{
				Offer previousValue = this._Offer.Entity;
				if (((previousValue != value) 
							|| (this._Offer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Offer.Entity = null;
						previousValue.OfferProviderPackages.Remove(this);
					}
					this._Offer.Entity = value;
					if ((value != null))
					{
						value.OfferProviderPackages.Add(this);
						this._OfferId = value.Id;
					}
					else
					{
						this._OfferId = default(int);
					}
					this.SendPropertyChanged("Offer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ServicePackage_OfferProviderPackage", Storage="_ServicePackage", ThisKey="PackageId", OtherKey="ID", IsForeignKey=true)]
		public ServicePackage ServicePackage
		{
			get
			{
				return this._ServicePackage.Entity;
			}
			set
			{
				ServicePackage previousValue = this._ServicePackage.Entity;
				if (((previousValue != value) 
							|| (this._ServicePackage.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ServicePackage.Entity = null;
						previousValue.OfferProviderPackages.Remove(this);
					}
					this._ServicePackage.Entity = value;
					if ((value != null))
					{
						value.OfferProviderPackages.Add(this);
						this._PackageId = value.ID;
					}
					else
					{
						this._PackageId = default(int);
					}
					this.SendPropertyChanged("ServicePackage");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OfferBranches")]
	public partial class OfferBranch : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _OfferId;
		
		private int _BranchId;
		
		private EntityRef<Branch> _Branch;
		
		private EntityRef<Offer> _Offer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOfferIdChanging(int value);
    partial void OnOfferIdChanged();
    partial void OnBranchIdChanging(int value);
    partial void OnBranchIdChanged();
    #endregion
		
		public OfferBranch()
		{
			this._Branch = default(EntityRef<Branch>);
			this._Offer = default(EntityRef<Offer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OfferId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int OfferId
		{
			get
			{
				return this._OfferId;
			}
			set
			{
				if ((this._OfferId != value))
				{
					if (this._Offer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOfferIdChanging(value);
					this.SendPropertyChanging();
					this._OfferId = value;
					this.SendPropertyChanged("OfferId");
					this.OnOfferIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int BranchId
		{
			get
			{
				return this._BranchId;
			}
			set
			{
				if ((this._BranchId != value))
				{
					if (this._Branch.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBranchIdChanging(value);
					this.SendPropertyChanging();
					this._BranchId = value;
					this.SendPropertyChanged("BranchId");
					this.OnBranchIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Branch_OfferBranch", Storage="_Branch", ThisKey="BranchId", OtherKey="ID", IsForeignKey=true)]
		public Branch Branch
		{
			get
			{
				return this._Branch.Entity;
			}
			set
			{
				Branch previousValue = this._Branch.Entity;
				if (((previousValue != value) 
							|| (this._Branch.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Branch.Entity = null;
						previousValue.OfferBranches.Remove(this);
					}
					this._Branch.Entity = value;
					if ((value != null))
					{
						value.OfferBranches.Add(this);
						this._BranchId = value.ID;
					}
					else
					{
						this._BranchId = default(int);
					}
					this.SendPropertyChanged("Branch");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Offer_OfferBranch", Storage="_Offer", ThisKey="OfferId", OtherKey="Id", IsForeignKey=true)]
		public Offer Offer
		{
			get
			{
				return this._Offer.Entity;
			}
			set
			{
				Offer previousValue = this._Offer.Entity;
				if (((previousValue != value) 
							|| (this._Offer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Offer.Entity = null;
						previousValue.OfferBranches.Remove(this);
					}
					this._Offer.Entity = value;
					if ((value != null))
					{
						value.OfferBranches.Add(this);
						this._OfferId = value.Id;
					}
					else
					{
						this._OfferId = default(int);
					}
					this.SendPropertyChanged("Offer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OutgoingExpenses")]
	public partial class OutgoingExpense : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _BranchID;
		
		private System.Nullable<int> _OutgoingTypeID;
		
		private System.Nullable<double> _Value;
		
		private string _Comment;
		
		private string _Notes;
		
		private System.Nullable<System.DateTime> _Date;
		
		private System.Nullable<int> _UserId;
		
		private EntityRef<Branch> _Branch;
		
		private EntityRef<OutgoingType> _OutgoingType;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnBranchIDChanging(System.Nullable<int> value);
    partial void OnBranchIDChanged();
    partial void OnOutgoingTypeIDChanging(System.Nullable<int> value);
    partial void OnOutgoingTypeIDChanged();
    partial void OnValueChanging(System.Nullable<double> value);
    partial void OnValueChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateChanged();
    partial void OnUserIdChanging(System.Nullable<int> value);
    partial void OnUserIdChanged();
    #endregion
		
		public OutgoingExpense()
		{
			this._Branch = default(EntityRef<Branch>);
			this._OutgoingType = default(EntityRef<OutgoingType>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchID", DbType="Int")]
		public System.Nullable<int> BranchID
		{
			get
			{
				return this._BranchID;
			}
			set
			{
				if ((this._BranchID != value))
				{
					if (this._Branch.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBranchIDChanging(value);
					this.SendPropertyChanging();
					this._BranchID = value;
					this.SendPropertyChanged("BranchID");
					this.OnBranchIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OutgoingTypeID", DbType="Int")]
		public System.Nullable<int> OutgoingTypeID
		{
			get
			{
				return this._OutgoingTypeID;
			}
			set
			{
				if ((this._OutgoingTypeID != value))
				{
					if (this._OutgoingType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOutgoingTypeIDChanging(value);
					this.SendPropertyChanging();
					this._OutgoingTypeID = value;
					this.SendPropertyChanged("OutgoingTypeID");
					this.OnOutgoingTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="Float")]
		public System.Nullable<double> Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(MAX)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(MAX)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int")]
		public System.Nullable<int> UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Branch_OutgoingExpense", Storage="_Branch", ThisKey="BranchID", OtherKey="ID", IsForeignKey=true)]
		public Branch Branch
		{
			get
			{
				return this._Branch.Entity;
			}
			set
			{
				Branch previousValue = this._Branch.Entity;
				if (((previousValue != value) 
							|| (this._Branch.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Branch.Entity = null;
						previousValue.OutgoingExpenses.Remove(this);
					}
					this._Branch.Entity = value;
					if ((value != null))
					{
						value.OutgoingExpenses.Add(this);
						this._BranchID = value.ID;
					}
					else
					{
						this._BranchID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Branch");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OutgoingType_OutgoingExpense", Storage="_OutgoingType", ThisKey="OutgoingTypeID", OtherKey="ID", IsForeignKey=true)]
		public OutgoingType OutgoingType
		{
			get
			{
				return this._OutgoingType.Entity;
			}
			set
			{
				OutgoingType previousValue = this._OutgoingType.Entity;
				if (((previousValue != value) 
							|| (this._OutgoingType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OutgoingType.Entity = null;
						previousValue.OutgoingExpenses.Remove(this);
					}
					this._OutgoingType.Entity = value;
					if ((value != null))
					{
						value.OutgoingExpenses.Add(this);
						this._OutgoingTypeID = value.ID;
					}
					else
					{
						this._OutgoingTypeID = default(Nullable<int>);
					}
					this.SendPropertyChanged("OutgoingType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_OutgoingExpense", Storage="_User", ThisKey="UserId", OtherKey="ID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.OutgoingExpenses.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.OutgoingExpenses.Add(this);
						this._UserId = value.ID;
					}
					else
					{
						this._UserId = default(Nullable<int>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BranchPackagesDiscounts")]
	public partial class BranchPackagesDiscount : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _BranchId;
		
		private int _ProviderId;
		
		private int _PackageId;
		
		private decimal _Discount;
		
		private string _Notes;
		
		private EntityRef<Branch> _Branch;
		
		private EntityRef<ServicePackage> _ServicePackage;
		
		private EntityRef<ServiceProvider> _ServiceProvider;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnBranchIdChanging(int value);
    partial void OnBranchIdChanged();
    partial void OnProviderIdChanging(int value);
    partial void OnProviderIdChanged();
    partial void OnPackageIdChanging(int value);
    partial void OnPackageIdChanged();
    partial void OnDiscountChanging(decimal value);
    partial void OnDiscountChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    #endregion
		
		public BranchPackagesDiscount()
		{
			this._Branch = default(EntityRef<Branch>);
			this._ServicePackage = default(EntityRef<ServicePackage>);
			this._ServiceProvider = default(EntityRef<ServiceProvider>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchId", DbType="Int NOT NULL")]
		public int BranchId
		{
			get
			{
				return this._BranchId;
			}
			set
			{
				if ((this._BranchId != value))
				{
					if (this._Branch.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBranchIdChanging(value);
					this.SendPropertyChanging();
					this._BranchId = value;
					this.SendPropertyChanged("BranchId");
					this.OnBranchIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProviderId", DbType="Int NOT NULL")]
		public int ProviderId
		{
			get
			{
				return this._ProviderId;
			}
			set
			{
				if ((this._ProviderId != value))
				{
					if (this._ServiceProvider.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProviderIdChanging(value);
					this.SendPropertyChanging();
					this._ProviderId = value;
					this.SendPropertyChanged("ProviderId");
					this.OnProviderIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PackageId", DbType="Int NOT NULL")]
		public int PackageId
		{
			get
			{
				return this._PackageId;
			}
			set
			{
				if ((this._PackageId != value))
				{
					if (this._ServicePackage.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPackageIdChanging(value);
					this.SendPropertyChanging();
					this._PackageId = value;
					this.SendPropertyChanged("PackageId");
					this.OnPackageIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Discount", DbType="Money NOT NULL")]
		public decimal Discount
		{
			get
			{
				return this._Discount;
			}
			set
			{
				if ((this._Discount != value))
				{
					this.OnDiscountChanging(value);
					this.SendPropertyChanging();
					this._Discount = value;
					this.SendPropertyChanged("Discount");
					this.OnDiscountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(955)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Branch_BranchPackagesDiscount", Storage="_Branch", ThisKey="BranchId", OtherKey="ID", IsForeignKey=true)]
		public Branch Branch
		{
			get
			{
				return this._Branch.Entity;
			}
			set
			{
				Branch previousValue = this._Branch.Entity;
				if (((previousValue != value) 
							|| (this._Branch.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Branch.Entity = null;
						previousValue.BranchPackagesDiscounts.Remove(this);
					}
					this._Branch.Entity = value;
					if ((value != null))
					{
						value.BranchPackagesDiscounts.Add(this);
						this._BranchId = value.ID;
					}
					else
					{
						this._BranchId = default(int);
					}
					this.SendPropertyChanged("Branch");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ServicePackage_BranchPackagesDiscount", Storage="_ServicePackage", ThisKey="PackageId", OtherKey="ID", IsForeignKey=true)]
		public ServicePackage ServicePackage
		{
			get
			{
				return this._ServicePackage.Entity;
			}
			set
			{
				ServicePackage previousValue = this._ServicePackage.Entity;
				if (((previousValue != value) 
							|| (this._ServicePackage.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ServicePackage.Entity = null;
						previousValue.BranchPackagesDiscounts.Remove(this);
					}
					this._ServicePackage.Entity = value;
					if ((value != null))
					{
						value.BranchPackagesDiscounts.Add(this);
						this._PackageId = value.ID;
					}
					else
					{
						this._PackageId = default(int);
					}
					this.SendPropertyChanged("ServicePackage");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ServiceProvider_BranchPackagesDiscount", Storage="_ServiceProvider", ThisKey="ProviderId", OtherKey="ID", IsForeignKey=true)]
		public ServiceProvider ServiceProvider
		{
			get
			{
				return this._ServiceProvider.Entity;
			}
			set
			{
				ServiceProvider previousValue = this._ServiceProvider.Entity;
				if (((previousValue != value) 
							|| (this._ServiceProvider.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ServiceProvider.Entity = null;
						previousValue.BranchPackagesDiscounts.Remove(this);
					}
					this._ServiceProvider.Entity = value;
					if ((value != null))
					{
						value.BranchPackagesDiscounts.Add(this);
						this._ProviderId = value.ID;
					}
					else
					{
						this._ProviderId = default(int);
					}
					this.SendPropertyChanged("ServiceProvider");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WorkOrderNotes")]
	public partial class WorkOrderNote : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _WorkOrderId;
		
		private System.DateTime _Time;
		
		private string _Text;
		
		private int _UserId;
		
		private bool _Processed;
		
		private string _Comment;
		
		private System.Nullable<int> _ToUserId;
		
		private EntityRef<User> _User;
		
		private EntityRef<WorkOrder> _WorkOrder;
		
		private EntityRef<User> _User1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnWorkOrderIdChanging(int value);
    partial void OnWorkOrderIdChanged();
    partial void OnTimeChanging(System.DateTime value);
    partial void OnTimeChanged();
    partial void OnTextChanging(string value);
    partial void OnTextChanged();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnProcessedChanging(bool value);
    partial void OnProcessedChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnToUserIdChanging(System.Nullable<int> value);
    partial void OnToUserIdChanged();
    #endregion
		
		public WorkOrderNote()
		{
			this._User = default(EntityRef<User>);
			this._WorkOrder = default(EntityRef<WorkOrder>);
			this._User1 = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkOrderId", DbType="Int NOT NULL")]
		public int WorkOrderId
		{
			get
			{
				return this._WorkOrderId;
			}
			set
			{
				if ((this._WorkOrderId != value))
				{
					if (this._WorkOrder.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWorkOrderIdChanging(value);
					this.SendPropertyChanging();
					this._WorkOrderId = value;
					this.SendPropertyChanged("WorkOrderId");
					this.OnWorkOrderIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time", DbType="DateTime NOT NULL")]
		public System.DateTime Time
		{
			get
			{
				return this._Time;
			}
			set
			{
				if ((this._Time != value))
				{
					this.OnTimeChanging(value);
					this.SendPropertyChanging();
					this._Time = value;
					this.SendPropertyChanged("Time");
					this.OnTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Text", DbType="NVarChar(2555) NOT NULL", CanBeNull=false)]
		public string Text
		{
			get
			{
				return this._Text;
			}
			set
			{
				if ((this._Text != value))
				{
					this.OnTextChanging(value);
					this.SendPropertyChanging();
					this._Text = value;
					this.SendPropertyChanged("Text");
					this.OnTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL")]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Processed", DbType="Bit NOT NULL")]
		public bool Processed
		{
			get
			{
				return this._Processed;
			}
			set
			{
				if ((this._Processed != value))
				{
					this.OnProcessedChanging(value);
					this.SendPropertyChanging();
					this._Processed = value;
					this.SendPropertyChanged("Processed");
					this.OnProcessedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="nvarchar(1555)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToUserId", DbType="int")]
		public System.Nullable<int> ToUserId
		{
			get
			{
				return this._ToUserId;
			}
			set
			{
				if ((this._ToUserId != value))
				{
					if (this._User1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnToUserIdChanging(value);
					this.SendPropertyChanging();
					this._ToUserId = value;
					this.SendPropertyChanged("ToUserId");
					this.OnToUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_WorkOrderNote", Storage="_User", ThisKey="UserId", OtherKey="ID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.WorkOrderNotes.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.WorkOrderNotes.Add(this);
						this._UserId = value.ID;
					}
					else
					{
						this._UserId = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WorkOrder_WorkOrderNote", Storage="_WorkOrder", ThisKey="WorkOrderId", OtherKey="ID", IsForeignKey=true)]
		public WorkOrder WorkOrder
		{
			get
			{
				return this._WorkOrder.Entity;
			}
			set
			{
				WorkOrder previousValue = this._WorkOrder.Entity;
				if (((previousValue != value) 
							|| (this._WorkOrder.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WorkOrder.Entity = null;
						previousValue.WorkOrderNotes.Remove(this);
					}
					this._WorkOrder.Entity = value;
					if ((value != null))
					{
						value.WorkOrderNotes.Add(this);
						this._WorkOrderId = value.ID;
					}
					else
					{
						this._WorkOrderId = default(int);
					}
					this.SendPropertyChanged("WorkOrder");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_WorkOrderNote1", Storage="_User1", ThisKey="ToUserId", OtherKey="ID", IsForeignKey=true)]
		public User User1
		{
			get
			{
				return this._User1.Entity;
			}
			set
			{
				User previousValue = this._User1.Entity;
				if (((previousValue != value) 
							|| (this._User1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User1.Entity = null;
						previousValue.WorkOrderNotes1.Remove(this);
					}
					this._User1.Entity = value;
					if ((value != null))
					{
						value.WorkOrderNotes1.Add(this);
						this._ToUserId = value.ID;
					}
					else
					{
						this._ToUserId = default(Nullable<int>);
					}
					this.SendPropertyChanged("User1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OffersDetails")]
	public partial class OffersDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private string _Data;
		
		private string _ImageUrl;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDataChanging(string value);
    partial void OnDataChanged();
    partial void OnImageUrlChanging(string value);
    partial void OnImageUrlChanged();
    #endregion
		
		public OffersDetail()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(555) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Data
		{
			get
			{
				return this._Data;
			}
			set
			{
				if ((this._Data != value))
				{
					this.OnDataChanging(value);
					this.SendPropertyChanging();
					this._Data = value;
					this.SendPropertyChanged("Data");
					this.OnDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageUrl", DbType="NVarChar(1555) NOT NULL", CanBeNull=false)]
		public string ImageUrl
		{
			get
			{
				return this._ImageUrl;
			}
			set
			{
				if ((this._ImageUrl != value))
				{
					this.OnImageUrlChanging(value);
					this.SendPropertyChanging();
					this._ImageUrl = value;
					this.SendPropertyChanged("ImageUrl");
					this.OnImageUrlChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NumberAttachments")]
	public partial class NumberAttachment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _AttachmentName;
		
		private string _Number;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnAttachmentNameChanging(string value);
    partial void OnAttachmentNameChanged();
    partial void OnNumberChanging(string value);
    partial void OnNumberChanged();
    #endregion
		
		public NumberAttachment()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachmentName", DbType="NVarChar(1555) NOT NULL", CanBeNull=false)]
		public string AttachmentName
		{
			get
			{
				return this._AttachmentName;
			}
			set
			{
				if ((this._AttachmentName != value))
				{
					this.OnAttachmentNameChanging(value);
					this.SendPropertyChanging();
					this._AttachmentName = value;
					this.SendPropertyChanged("AttachmentName");
					this.OnAttachmentNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Number", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Number
		{
			get
			{
				return this._Number;
			}
			set
			{
				if ((this._Number != value))
				{
					this.OnNumberChanging(value);
					this.SendPropertyChanging();
					this._Number = value;
					this.SendPropertyChanged("Number");
					this.OnNumberChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ResellerAttachment")]
	public partial class ResellerAttachment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _FileNameBefor;
		
		private System.Nullable<int> _ResellerId;
		
		private System.Nullable<System.DateTime> _Date;
		
		private string _FileNameAfter;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnFileNameBeforChanging(string value);
    partial void OnFileNameBeforChanged();
    partial void OnResellerIdChanging(System.Nullable<int> value);
    partial void OnResellerIdChanged();
    partial void OnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateChanged();
    partial void OnFileNameAfterChanging(string value);
    partial void OnFileNameAfterChanged();
    #endregion
		
		public ResellerAttachment()
		{
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileNameBefor", DbType="NVarChar(500)")]
		public string FileNameBefor
		{
			get
			{
				return this._FileNameBefor;
			}
			set
			{
				if ((this._FileNameBefor != value))
				{
					this.OnFileNameBeforChanging(value);
					this.SendPropertyChanging();
					this._FileNameBefor = value;
					this.SendPropertyChanged("FileNameBefor");
					this.OnFileNameBeforChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResellerId", DbType="Int")]
		public System.Nullable<int> ResellerId
		{
			get
			{
				return this._ResellerId;
			}
			set
			{
				if ((this._ResellerId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnResellerIdChanging(value);
					this.SendPropertyChanging();
					this._ResellerId = value;
					this.SendPropertyChanged("ResellerId");
					this.OnResellerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileNameAfter", DbType="NVarChar(500)")]
		public string FileNameAfter
		{
			get
			{
				return this._FileNameAfter;
			}
			set
			{
				if ((this._FileNameAfter != value))
				{
					this.OnFileNameAfterChanging(value);
					this.SendPropertyChanging();
					this._FileNameAfter = value;
					this.SendPropertyChanged("FileNameAfter");
					this.OnFileNameAfterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_ResellerAttachment", Storage="_User", ThisKey="ResellerId", OtherKey="ID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.ResellerAttachments.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.ResellerAttachments.Add(this);
						this._ResellerId = value.ID;
					}
					else
					{
						this._ResellerId = default(Nullable<int>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OptionProviders")]
	public partial class OptionProvider : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _ProviderId;
		
		private EntityRef<ServiceProvider> _ServiceProvider;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnProviderIdChanging(System.Nullable<int> value);
    partial void OnProviderIdChanged();
    #endregion
		
		public OptionProvider()
		{
			this._ServiceProvider = default(EntityRef<ServiceProvider>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProviderId", DbType="Int")]
		public System.Nullable<int> ProviderId
		{
			get
			{
				return this._ProviderId;
			}
			set
			{
				if ((this._ProviderId != value))
				{
					if (this._ServiceProvider.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProviderIdChanging(value);
					this.SendPropertyChanging();
					this._ProviderId = value;
					this.SendPropertyChanged("ProviderId");
					this.OnProviderIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ServiceProvider_OptionProvider", Storage="_ServiceProvider", ThisKey="ProviderId", OtherKey="ID", IsForeignKey=true)]
		public ServiceProvider ServiceProvider
		{
			get
			{
				return this._ServiceProvider.Entity;
			}
			set
			{
				ServiceProvider previousValue = this._ServiceProvider.Entity;
				if (((previousValue != value) 
							|| (this._ServiceProvider.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ServiceProvider.Entity = null;
						previousValue.OptionProviders.Remove(this);
					}
					this._ServiceProvider.Entity = value;
					if ((value != null))
					{
						value.OptionProviders.Add(this);
						this._ProviderId = value.ID;
					}
					else
					{
						this._ProviderId = default(Nullable<int>);
					}
					this.SendPropertyChanged("ServiceProvider");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ResellerCreditsVoice")]
	public partial class ResellerCreditsVoice : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _ResellerId;
		
		private int _UserId;
		
		private decimal _Amount;
		
		private decimal _Net;
		
		private System.DateTime _Time;
		
		private string _Notes;
		
		private System.Nullable<int> _RechargeRequestId;
		
		private EntityRef<User> _User;
		
		private EntityRef<User> _User1;
		
		private EntityRef<RechargeRequest> _RechargeRequest;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnResellerIdChanging(int value);
    partial void OnResellerIdChanged();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnAmountChanging(decimal value);
    partial void OnAmountChanged();
    partial void OnNetChanging(decimal value);
    partial void OnNetChanged();
    partial void OnTimeChanging(System.DateTime value);
    partial void OnTimeChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnRechargeRequestIdChanging(System.Nullable<int> value);
    partial void OnRechargeRequestIdChanged();
    #endregion
		
		public ResellerCreditsVoice()
		{
			this._User = default(EntityRef<User>);
			this._User1 = default(EntityRef<User>);
			this._RechargeRequest = default(EntityRef<RechargeRequest>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResellerId", DbType="Int NOT NULL")]
		public int ResellerId
		{
			get
			{
				return this._ResellerId;
			}
			set
			{
				if ((this._ResellerId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnResellerIdChanging(value);
					this.SendPropertyChanging();
					this._ResellerId = value;
					this.SendPropertyChanged("ResellerId");
					this.OnResellerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL")]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._User1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Money NOT NULL")]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Net", DbType="Money NOT NULL")]
		public decimal Net
		{
			get
			{
				return this._Net;
			}
			set
			{
				if ((this._Net != value))
				{
					this.OnNetChanging(value);
					this.SendPropertyChanging();
					this._Net = value;
					this.SendPropertyChanged("Net");
					this.OnNetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time", DbType="DateTime NOT NULL")]
		public System.DateTime Time
		{
			get
			{
				return this._Time;
			}
			set
			{
				if ((this._Time != value))
				{
					this.OnTimeChanging(value);
					this.SendPropertyChanging();
					this._Time = value;
					this.SendPropertyChanged("Time");
					this.OnTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(MAX)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RechargeRequestId", DbType="int")]
		public System.Nullable<int> RechargeRequestId
		{
			get
			{
				return this._RechargeRequestId;
			}
			set
			{
				if ((this._RechargeRequestId != value))
				{
					if (this._RechargeRequest.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRechargeRequestIdChanging(value);
					this.SendPropertyChanging();
					this._RechargeRequestId = value;
					this.SendPropertyChanged("RechargeRequestId");
					this.OnRechargeRequestIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_ResellerCreditsVoice", Storage="_User", ThisKey="ResellerId", OtherKey="ID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.ResellerCreditsVoices.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.ResellerCreditsVoices.Add(this);
						this._ResellerId = value.ID;
					}
					else
					{
						this._ResellerId = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_ResellerCreditsVoice1", Storage="_User1", ThisKey="UserId", OtherKey="ID", IsForeignKey=true)]
		public User User1
		{
			get
			{
				return this._User1.Entity;
			}
			set
			{
				User previousValue = this._User1.Entity;
				if (((previousValue != value) 
							|| (this._User1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User1.Entity = null;
						previousValue.ResellerCreditsVoices1.Remove(this);
					}
					this._User1.Entity = value;
					if ((value != null))
					{
						value.ResellerCreditsVoices1.Add(this);
						this._UserId = value.ID;
					}
					else
					{
						this._UserId = default(int);
					}
					this.SendPropertyChanged("User1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RechargeRequest_ResellerCreditsVoice", Storage="_RechargeRequest", ThisKey="RechargeRequestId", OtherKey="ID", IsForeignKey=true)]
		public RechargeRequest RechargeRequest
		{
			get
			{
				return this._RechargeRequest.Entity;
			}
			set
			{
				RechargeRequest previousValue = this._RechargeRequest.Entity;
				if (((previousValue != value) 
							|| (this._RechargeRequest.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RechargeRequest.Entity = null;
						previousValue.ResellerCreditsVoices.Remove(this);
					}
					this._RechargeRequest.Entity = value;
					if ((value != null))
					{
						value.ResellerCreditsVoices.Add(this);
						this._RechargeRequestId = value.ID;
					}
					else
					{
						this._RechargeRequestId = default(Nullable<int>);
					}
					this.SendPropertyChanged("RechargeRequest");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UpdatedResellerBS")]
	public partial class UpdatedResellerB : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _ResellerId;
		
		private string _Invoice;
		
		private System.Nullable<decimal> _InvoiceBeforeReview;
		
		private System.Nullable<decimal> _InvoiceAfterReview;
		
		private System.Nullable<int> _UserId;
		
		private EntityRef<User> _User;
		
		private EntityRef<User> _User1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnResellerIdChanging(System.Nullable<int> value);
    partial void OnResellerIdChanged();
    partial void OnInvoiceChanging(string value);
    partial void OnInvoiceChanged();
    partial void OnInvoiceBeforeReviewChanging(System.Nullable<decimal> value);
    partial void OnInvoiceBeforeReviewChanged();
    partial void OnInvoiceAfterReviewChanging(System.Nullable<decimal> value);
    partial void OnInvoiceAfterReviewChanged();
    partial void OnUserIdChanging(System.Nullable<int> value);
    partial void OnUserIdChanged();
    #endregion
		
		public UpdatedResellerB()
		{
			this._User = default(EntityRef<User>);
			this._User1 = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResellerId", DbType="Int")]
		public System.Nullable<int> ResellerId
		{
			get
			{
				return this._ResellerId;
			}
			set
			{
				if ((this._ResellerId != value))
				{
					if (this._User1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnResellerIdChanging(value);
					this.SendPropertyChanging();
					this._ResellerId = value;
					this.SendPropertyChanged("ResellerId");
					this.OnResellerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Invoice", DbType="NVarChar(50)")]
		public string Invoice
		{
			get
			{
				return this._Invoice;
			}
			set
			{
				if ((this._Invoice != value))
				{
					this.OnInvoiceChanging(value);
					this.SendPropertyChanging();
					this._Invoice = value;
					this.SendPropertyChanged("Invoice");
					this.OnInvoiceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceBeforeReview", DbType="Money")]
		public System.Nullable<decimal> InvoiceBeforeReview
		{
			get
			{
				return this._InvoiceBeforeReview;
			}
			set
			{
				if ((this._InvoiceBeforeReview != value))
				{
					this.OnInvoiceBeforeReviewChanging(value);
					this.SendPropertyChanging();
					this._InvoiceBeforeReview = value;
					this.SendPropertyChanged("InvoiceBeforeReview");
					this.OnInvoiceBeforeReviewChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceAfterReview", DbType="Money")]
		public System.Nullable<decimal> InvoiceAfterReview
		{
			get
			{
				return this._InvoiceAfterReview;
			}
			set
			{
				if ((this._InvoiceAfterReview != value))
				{
					this.OnInvoiceAfterReviewChanging(value);
					this.SendPropertyChanging();
					this._InvoiceAfterReview = value;
					this.SendPropertyChanged("InvoiceAfterReview");
					this.OnInvoiceAfterReviewChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int")]
		public System.Nullable<int> UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UpdatedResellerB", Storage="_User", ThisKey="UserId", OtherKey="ID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.UpdatedResellerBs.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.UpdatedResellerBs.Add(this);
						this._UserId = value.ID;
					}
					else
					{
						this._UserId = default(Nullable<int>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UpdatedResellerB1", Storage="_User1", ThisKey="ResellerId", OtherKey="ID", IsForeignKey=true)]
		public User User1
		{
			get
			{
				return this._User1.Entity;
			}
			set
			{
				User previousValue = this._User1.Entity;
				if (((previousValue != value) 
							|| (this._User1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User1.Entity = null;
						previousValue.UpdatedResellerBs1.Remove(this);
					}
					this._User1.Entity = value;
					if ((value != null))
					{
						value.UpdatedResellerBs1.Add(this);
						this._ResellerId = value.ID;
					}
					else
					{
						this._ResellerId = default(Nullable<int>);
					}
					this.SendPropertyChanged("User1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UpdatedResellerPayment")]
	public partial class UpdatedResellerPayment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _ResellerId;
		
		private System.Nullable<decimal> _Total;
		
		private string _Notes;
		
		private System.Nullable<System.DateTime> _Time;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnResellerIdChanging(System.Nullable<int> value);
    partial void OnResellerIdChanged();
    partial void OnTotalChanging(System.Nullable<decimal> value);
    partial void OnTotalChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnTimeChanged();
    #endregion
		
		public UpdatedResellerPayment()
		{
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResellerId", DbType="Int")]
		public System.Nullable<int> ResellerId
		{
			get
			{
				return this._ResellerId;
			}
			set
			{
				if ((this._ResellerId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnResellerIdChanging(value);
					this.SendPropertyChanging();
					this._ResellerId = value;
					this.SendPropertyChanged("ResellerId");
					this.OnResellerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Total", DbType="Money")]
		public System.Nullable<decimal> Total
		{
			get
			{
				return this._Total;
			}
			set
			{
				if ((this._Total != value))
				{
					this.OnTotalChanging(value);
					this.SendPropertyChanging();
					this._Total = value;
					this.SendPropertyChanged("Total");
					this.OnTotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(MAX)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time", DbType="DateTime")]
		public System.Nullable<System.DateTime> Time
		{
			get
			{
				return this._Time;
			}
			set
			{
				if ((this._Time != value))
				{
					this.OnTimeChanging(value);
					this.SendPropertyChanging();
					this._Time = value;
					this.SendPropertyChanged("Time");
					this.OnTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UpdatedResellerPayment", Storage="_User", ThisKey="ResellerId", OtherKey="ID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.UpdatedResellerPayments.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.UpdatedResellerPayments.Add(this);
						this._ResellerId = value.ID;
					}
					else
					{
						this._ResellerId = default(Nullable<int>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RechargeClientRequest")]
	public partial class RechargeClientRequest : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _ResellerId;
		
		private string _ClientName;
		
		private string _ClientTelephone;
		
		private System.Nullable<decimal> _Amount;
		
		private System.Nullable<bool> _IsApproved;
		
		private string _Notes;
		
		private string _RejectReason;
		
		private System.Nullable<System.DateTime> _Time;
		
		private System.Nullable<int> _VoiceCompanyID;
		
		private EntityRef<User> _User;
		
		private EntityRef<VoiceCompany> _VoiceCompany;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnResellerIdChanging(System.Nullable<int> value);
    partial void OnResellerIdChanged();
    partial void OnClientNameChanging(string value);
    partial void OnClientNameChanged();
    partial void OnClientTelephoneChanging(string value);
    partial void OnClientTelephoneChanged();
    partial void OnAmountChanging(System.Nullable<decimal> value);
    partial void OnAmountChanged();
    partial void OnIsApprovedChanging(System.Nullable<bool> value);
    partial void OnIsApprovedChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnRejectReasonChanging(string value);
    partial void OnRejectReasonChanged();
    partial void OnTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnTimeChanged();
    partial void OnVoiceCompanyIDChanging(System.Nullable<int> value);
    partial void OnVoiceCompanyIDChanged();
    #endregion
		
		public RechargeClientRequest()
		{
			this._User = default(EntityRef<User>);
			this._VoiceCompany = default(EntityRef<VoiceCompany>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResellerId", DbType="Int")]
		public System.Nullable<int> ResellerId
		{
			get
			{
				return this._ResellerId;
			}
			set
			{
				if ((this._ResellerId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnResellerIdChanging(value);
					this.SendPropertyChanging();
					this._ResellerId = value;
					this.SendPropertyChanged("ResellerId");
					this.OnResellerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientName", DbType="NVarChar(250)")]
		public string ClientName
		{
			get
			{
				return this._ClientName;
			}
			set
			{
				if ((this._ClientName != value))
				{
					this.OnClientNameChanging(value);
					this.SendPropertyChanging();
					this._ClientName = value;
					this.SendPropertyChanged("ClientName");
					this.OnClientNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientTelephone", DbType="NVarChar(50)")]
		public string ClientTelephone
		{
			get
			{
				return this._ClientTelephone;
			}
			set
			{
				if ((this._ClientTelephone != value))
				{
					this.OnClientTelephoneChanging(value);
					this.SendPropertyChanging();
					this._ClientTelephone = value;
					this.SendPropertyChanged("ClientTelephone");
					this.OnClientTelephoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Money")]
		public System.Nullable<decimal> Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsApproved", DbType="Bit")]
		public System.Nullable<bool> IsApproved
		{
			get
			{
				return this._IsApproved;
			}
			set
			{
				if ((this._IsApproved != value))
				{
					this.OnIsApprovedChanging(value);
					this.SendPropertyChanging();
					this._IsApproved = value;
					this.SendPropertyChanged("IsApproved");
					this.OnIsApprovedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(MAX)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RejectReason", DbType="NVarChar(MAX)")]
		public string RejectReason
		{
			get
			{
				return this._RejectReason;
			}
			set
			{
				if ((this._RejectReason != value))
				{
					this.OnRejectReasonChanging(value);
					this.SendPropertyChanging();
					this._RejectReason = value;
					this.SendPropertyChanged("RejectReason");
					this.OnRejectReasonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time", DbType="DateTime")]
		public System.Nullable<System.DateTime> Time
		{
			get
			{
				return this._Time;
			}
			set
			{
				if ((this._Time != value))
				{
					this.OnTimeChanging(value);
					this.SendPropertyChanging();
					this._Time = value;
					this.SendPropertyChanged("Time");
					this.OnTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VoiceCompanyID", DbType="Int")]
		public System.Nullable<int> VoiceCompanyID
		{
			get
			{
				return this._VoiceCompanyID;
			}
			set
			{
				if ((this._VoiceCompanyID != value))
				{
					if (this._VoiceCompany.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVoiceCompanyIDChanging(value);
					this.SendPropertyChanging();
					this._VoiceCompanyID = value;
					this.SendPropertyChanged("VoiceCompanyID");
					this.OnVoiceCompanyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_RechargeClientRequest", Storage="_User", ThisKey="ResellerId", OtherKey="ID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.RechargeClientRequests.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.RechargeClientRequests.Add(this);
						this._ResellerId = value.ID;
					}
					else
					{
						this._ResellerId = default(Nullable<int>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VoiceCompany_RechargeClientRequest", Storage="_VoiceCompany", ThisKey="VoiceCompanyID", OtherKey="Id", IsForeignKey=true)]
		public VoiceCompany VoiceCompany
		{
			get
			{
				return this._VoiceCompany.Entity;
			}
			set
			{
				VoiceCompany previousValue = this._VoiceCompany.Entity;
				if (((previousValue != value) 
							|| (this._VoiceCompany.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._VoiceCompany.Entity = null;
						previousValue.RechargeClientRequests.Remove(this);
					}
					this._VoiceCompany.Entity = value;
					if ((value != null))
					{
						value.RechargeClientRequests.Add(this);
						this._VoiceCompanyID = value.Id;
					}
					else
					{
						this._VoiceCompanyID = default(Nullable<int>);
					}
					this.SendPropertyChanged("VoiceCompany");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RechargeBranchRequest")]
	public partial class RechargeBranchRequest : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _BranchId;
		
		private string _ClientName;
		
		private string _ClientTelephone;
		
		private System.Nullable<decimal> _Amount;
		
		private System.Nullable<bool> _IsApproved;
		
		private string _Notes;
		
		private string _RejectReason;
		
		private System.Nullable<System.DateTime> _Time;
		
		private System.Nullable<int> _VoiceCompanyId;
		
		private EntityRef<Branch> _Branch;
		
		private EntityRef<VoiceCompany> _VoiceCompany;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnBranchIdChanging(System.Nullable<int> value);
    partial void OnBranchIdChanged();
    partial void OnClientNameChanging(string value);
    partial void OnClientNameChanged();
    partial void OnClientTelephoneChanging(string value);
    partial void OnClientTelephoneChanged();
    partial void OnAmountChanging(System.Nullable<decimal> value);
    partial void OnAmountChanged();
    partial void OnIsApprovedChanging(System.Nullable<bool> value);
    partial void OnIsApprovedChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnRejectReasonChanging(string value);
    partial void OnRejectReasonChanged();
    partial void OnTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnTimeChanged();
    partial void OnVoiceCompanyIdChanging(System.Nullable<int> value);
    partial void OnVoiceCompanyIdChanged();
    #endregion
		
		public RechargeBranchRequest()
		{
			this._Branch = default(EntityRef<Branch>);
			this._VoiceCompany = default(EntityRef<VoiceCompany>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchId", DbType="Int")]
		public System.Nullable<int> BranchId
		{
			get
			{
				return this._BranchId;
			}
			set
			{
				if ((this._BranchId != value))
				{
					if (this._Branch.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBranchIdChanging(value);
					this.SendPropertyChanging();
					this._BranchId = value;
					this.SendPropertyChanged("BranchId");
					this.OnBranchIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientName", DbType="NVarChar(250)")]
		public string ClientName
		{
			get
			{
				return this._ClientName;
			}
			set
			{
				if ((this._ClientName != value))
				{
					this.OnClientNameChanging(value);
					this.SendPropertyChanging();
					this._ClientName = value;
					this.SendPropertyChanged("ClientName");
					this.OnClientNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientTelephone", DbType="NVarChar(50)")]
		public string ClientTelephone
		{
			get
			{
				return this._ClientTelephone;
			}
			set
			{
				if ((this._ClientTelephone != value))
				{
					this.OnClientTelephoneChanging(value);
					this.SendPropertyChanging();
					this._ClientTelephone = value;
					this.SendPropertyChanged("ClientTelephone");
					this.OnClientTelephoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Money")]
		public System.Nullable<decimal> Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsApproved", DbType="Bit")]
		public System.Nullable<bool> IsApproved
		{
			get
			{
				return this._IsApproved;
			}
			set
			{
				if ((this._IsApproved != value))
				{
					this.OnIsApprovedChanging(value);
					this.SendPropertyChanging();
					this._IsApproved = value;
					this.SendPropertyChanged("IsApproved");
					this.OnIsApprovedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(MAX)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RejectReason", DbType="NVarChar(MAX)")]
		public string RejectReason
		{
			get
			{
				return this._RejectReason;
			}
			set
			{
				if ((this._RejectReason != value))
				{
					this.OnRejectReasonChanging(value);
					this.SendPropertyChanging();
					this._RejectReason = value;
					this.SendPropertyChanged("RejectReason");
					this.OnRejectReasonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time", DbType="DateTime")]
		public System.Nullable<System.DateTime> Time
		{
			get
			{
				return this._Time;
			}
			set
			{
				if ((this._Time != value))
				{
					this.OnTimeChanging(value);
					this.SendPropertyChanging();
					this._Time = value;
					this.SendPropertyChanged("Time");
					this.OnTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VoiceCompanyId", DbType="Int")]
		public System.Nullable<int> VoiceCompanyId
		{
			get
			{
				return this._VoiceCompanyId;
			}
			set
			{
				if ((this._VoiceCompanyId != value))
				{
					if (this._VoiceCompany.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVoiceCompanyIdChanging(value);
					this.SendPropertyChanging();
					this._VoiceCompanyId = value;
					this.SendPropertyChanged("VoiceCompanyId");
					this.OnVoiceCompanyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Branch_RechargeBranchRequest", Storage="_Branch", ThisKey="BranchId", OtherKey="ID", IsForeignKey=true)]
		public Branch Branch
		{
			get
			{
				return this._Branch.Entity;
			}
			set
			{
				Branch previousValue = this._Branch.Entity;
				if (((previousValue != value) 
							|| (this._Branch.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Branch.Entity = null;
						previousValue.RechargeBranchRequests.Remove(this);
					}
					this._Branch.Entity = value;
					if ((value != null))
					{
						value.RechargeBranchRequests.Add(this);
						this._BranchId = value.ID;
					}
					else
					{
						this._BranchId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Branch");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VoiceCompany_RechargeBranchRequest", Storage="_VoiceCompany", ThisKey="VoiceCompanyId", OtherKey="Id", IsForeignKey=true)]
		public VoiceCompany VoiceCompany
		{
			get
			{
				return this._VoiceCompany.Entity;
			}
			set
			{
				VoiceCompany previousValue = this._VoiceCompany.Entity;
				if (((previousValue != value) 
							|| (this._VoiceCompany.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._VoiceCompany.Entity = null;
						previousValue.RechargeBranchRequests.Remove(this);
					}
					this._VoiceCompany.Entity = value;
					if ((value != null))
					{
						value.RechargeBranchRequests.Add(this);
						this._VoiceCompanyId = value.Id;
					}
					else
					{
						this._VoiceCompanyId = default(Nullable<int>);
					}
					this.SendPropertyChanged("VoiceCompany");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BranchCreditVoice")]
	public partial class BranchCreditVoice : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _BranchId;
		
		private System.Nullable<int> _UserId;
		
		private System.Nullable<decimal> _Amount;
		
		private System.Nullable<decimal> _Net;
		
		private System.Nullable<System.DateTime> _Time;
		
		private string _Notes;
		
		private EntityRef<Branch> _Branch;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnBranchIdChanging(System.Nullable<int> value);
    partial void OnBranchIdChanged();
    partial void OnUserIdChanging(System.Nullable<int> value);
    partial void OnUserIdChanged();
    partial void OnAmountChanging(System.Nullable<decimal> value);
    partial void OnAmountChanged();
    partial void OnNetChanging(System.Nullable<decimal> value);
    partial void OnNetChanged();
    partial void OnTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnTimeChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    #endregion
		
		public BranchCreditVoice()
		{
			this._Branch = default(EntityRef<Branch>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchId", DbType="Int")]
		public System.Nullable<int> BranchId
		{
			get
			{
				return this._BranchId;
			}
			set
			{
				if ((this._BranchId != value))
				{
					if (this._Branch.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBranchIdChanging(value);
					this.SendPropertyChanging();
					this._BranchId = value;
					this.SendPropertyChanged("BranchId");
					this.OnBranchIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int")]
		public System.Nullable<int> UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Money")]
		public System.Nullable<decimal> Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Net", DbType="Money")]
		public System.Nullable<decimal> Net
		{
			get
			{
				return this._Net;
			}
			set
			{
				if ((this._Net != value))
				{
					this.OnNetChanging(value);
					this.SendPropertyChanging();
					this._Net = value;
					this.SendPropertyChanged("Net");
					this.OnNetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time", DbType="DateTime")]
		public System.Nullable<System.DateTime> Time
		{
			get
			{
				return this._Time;
			}
			set
			{
				if ((this._Time != value))
				{
					this.OnTimeChanging(value);
					this.SendPropertyChanging();
					this._Time = value;
					this.SendPropertyChanged("Time");
					this.OnTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(MAX)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Branch_BranchCreditVoice", Storage="_Branch", ThisKey="BranchId", OtherKey="ID", IsForeignKey=true)]
		public Branch Branch
		{
			get
			{
				return this._Branch.Entity;
			}
			set
			{
				Branch previousValue = this._Branch.Entity;
				if (((previousValue != value) 
							|| (this._Branch.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Branch.Entity = null;
						previousValue.BranchCreditVoices.Remove(this);
					}
					this._Branch.Entity = value;
					if ((value != null))
					{
						value.BranchCreditVoices.Add(this);
						this._BranchId = value.ID;
					}
					else
					{
						this._BranchId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Branch");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_BranchCreditVoice", Storage="_User", ThisKey="UserId", OtherKey="ID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.BranchCreditVoices.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.BranchCreditVoices.Add(this);
						this._UserId = value.ID;
					}
					else
					{
						this._UserId = default(Nullable<int>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FriendlyLinks")]
	public partial class FriendlyLink : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _PageName;
		
		private string _Url;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnPageNameChanging(string value);
    partial void OnPageNameChanged();
    partial void OnUrlChanging(string value);
    partial void OnUrlChanged();
    #endregion
		
		public FriendlyLink()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageName", DbType="NVarChar(550) NOT NULL", CanBeNull=false)]
		public string PageName
		{
			get
			{
				return this._PageName;
			}
			set
			{
				if ((this._PageName != value))
				{
					this.OnPageNameChanging(value);
					this.SendPropertyChanging();
					this._PageName = value;
					this.SendPropertyChanged("PageName");
					this.OnPageNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Url", DbType="NVarChar(550) NOT NULL", CanBeNull=false)]
		public string Url
		{
			get
			{
				return this._Url;
			}
			set
			{
				if ((this._Url != value))
				{
					this.OnUrlChanging(value);
					this.SendPropertyChanging();
					this._Url = value;
					this.SendPropertyChanged("Url");
					this.OnUrlChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DebtsInvoices")]
	public partial class DebtsInvoice : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _DemandId;
		
		private System.Nullable<decimal> _Amount;
		
		private System.Nullable<bool> _paid;
		
		private EntityRef<Demand> _Demand;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnDemandIdChanging(System.Nullable<int> value);
    partial void OnDemandIdChanged();
    partial void OnAmountChanging(System.Nullable<decimal> value);
    partial void OnAmountChanged();
    partial void OnpaidChanging(System.Nullable<bool> value);
    partial void OnpaidChanged();
    #endregion
		
		public DebtsInvoice()
		{
			this._Demand = default(EntityRef<Demand>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DemandId", DbType="Int")]
		public System.Nullable<int> DemandId
		{
			get
			{
				return this._DemandId;
			}
			set
			{
				if ((this._DemandId != value))
				{
					if (this._Demand.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDemandIdChanging(value);
					this.SendPropertyChanging();
					this._DemandId = value;
					this.SendPropertyChanged("DemandId");
					this.OnDemandIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Money")]
		public System.Nullable<decimal> Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_paid", DbType="Bit")]
		public System.Nullable<bool> paid
		{
			get
			{
				return this._paid;
			}
			set
			{
				if ((this._paid != value))
				{
					this.OnpaidChanging(value);
					this.SendPropertyChanging();
					this._paid = value;
					this.SendPropertyChanged("paid");
					this.OnpaidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Demand_DebtsInvoice", Storage="_Demand", ThisKey="DemandId", OtherKey="Id", IsForeignKey=true)]
		public Demand Demand
		{
			get
			{
				return this._Demand.Entity;
			}
			set
			{
				Demand previousValue = this._Demand.Entity;
				if (((previousValue != value) 
							|| (this._Demand.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Demand.Entity = null;
						previousValue.DebtsInvoices.Remove(this);
					}
					this._Demand.Entity = value;
					if ((value != null))
					{
						value.DebtsInvoices.Add(this);
						this._DemandId = value.Id;
					}
					else
					{
						this._DemandId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Demand");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ResellerCredits")]
	public partial class ResellerCredit : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _ResellerId;
		
		private int _UserId;
		
		private decimal _Amount;
		
		private decimal _Net;
		
		private System.DateTime _Time;
		
		private string _Notes;
		
		private System.Nullable<int> _RechargeRequestId;
		
		private EntityRef<User> _User;
		
		private EntityRef<User> _User1;
		
		private EntityRef<RechargeRequest> _RechargeRequest;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnResellerIdChanging(int value);
    partial void OnResellerIdChanged();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnAmountChanging(decimal value);
    partial void OnAmountChanged();
    partial void OnNetChanging(decimal value);
    partial void OnNetChanged();
    partial void OnTimeChanging(System.DateTime value);
    partial void OnTimeChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnRechargeRequestIdChanging(System.Nullable<int> value);
    partial void OnRechargeRequestIdChanged();
    #endregion
		
		public ResellerCredit()
		{
			this._User = default(EntityRef<User>);
			this._User1 = default(EntityRef<User>);
			this._RechargeRequest = default(EntityRef<RechargeRequest>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResellerId", DbType="Int NOT NULL")]
		public int ResellerId
		{
			get
			{
				return this._ResellerId;
			}
			set
			{
				if ((this._ResellerId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnResellerIdChanging(value);
					this.SendPropertyChanging();
					this._ResellerId = value;
					this.SendPropertyChanged("ResellerId");
					this.OnResellerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL")]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._User1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Money NOT NULL")]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Net", DbType="Money NOT NULL")]
		public decimal Net
		{
			get
			{
				return this._Net;
			}
			set
			{
				if ((this._Net != value))
				{
					this.OnNetChanging(value);
					this.SendPropertyChanging();
					this._Net = value;
					this.SendPropertyChanged("Net");
					this.OnNetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time", DbType="DateTime NOT NULL")]
		public System.DateTime Time
		{
			get
			{
				return this._Time;
			}
			set
			{
				if ((this._Time != value))
				{
					this.OnTimeChanging(value);
					this.SendPropertyChanging();
					this._Time = value;
					this.SendPropertyChanged("Time");
					this.OnTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(MAX)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RechargeRequestId", DbType="Int")]
		public System.Nullable<int> RechargeRequestId
		{
			get
			{
				return this._RechargeRequestId;
			}
			set
			{
				if ((this._RechargeRequestId != value))
				{
					if (this._RechargeRequest.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRechargeRequestIdChanging(value);
					this.SendPropertyChanging();
					this._RechargeRequestId = value;
					this.SendPropertyChanged("RechargeRequestId");
					this.OnRechargeRequestIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_ResellerCredit", Storage="_User", ThisKey="ResellerId", OtherKey="ID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.ResellerCredits.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.ResellerCredits.Add(this);
						this._ResellerId = value.ID;
					}
					else
					{
						this._ResellerId = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_ResellerCredit1", Storage="_User1", ThisKey="UserId", OtherKey="ID", IsForeignKey=true)]
		public User User1
		{
			get
			{
				return this._User1.Entity;
			}
			set
			{
				User previousValue = this._User1.Entity;
				if (((previousValue != value) 
							|| (this._User1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User1.Entity = null;
						previousValue.ResellerCredits1.Remove(this);
					}
					this._User1.Entity = value;
					if ((value != null))
					{
						value.ResellerCredits1.Add(this);
						this._UserId = value.ID;
					}
					else
					{
						this._UserId = default(int);
					}
					this.SendPropertyChanged("User1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RechargeRequest_ResellerCredit", Storage="_RechargeRequest", ThisKey="RechargeRequestId", OtherKey="ID", IsForeignKey=true)]
		public RechargeRequest RechargeRequest
		{
			get
			{
				return this._RechargeRequest.Entity;
			}
			set
			{
				RechargeRequest previousValue = this._RechargeRequest.Entity;
				if (((previousValue != value) 
							|| (this._RechargeRequest.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RechargeRequest.Entity = null;
						previousValue.ResellerCredits.Remove(this);
					}
					this._RechargeRequest.Entity = value;
					if ((value != null))
					{
						value.ResellerCredits.Add(this);
						this._RechargeRequestId = value.ID;
					}
					else
					{
						this._RechargeRequestId = default(Nullable<int>);
					}
					this.SendPropertyChanged("RechargeRequest");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RechargeRequest")]
	public partial class RechargeRequest : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _ResellerId;
		
		private System.Nullable<int> _BoxId;
		
		private string _DepositorName;
		
		private System.Nullable<decimal> _Amount;
		
		private string _RecieptImage;
		
		private System.Nullable<System.DateTime> _Time;
		
		private System.Nullable<bool> _IsApproved;
		
		private string _RejectReason;
		
		private System.Nullable<int> _CreditORVoice;
		
		private EntitySet<ResellerCreditsVoice> _ResellerCreditsVoices;
		
		private EntitySet<ResellerCredit> _ResellerCredits;
		
		private EntitySet<BoxCredit> _BoxCredits;
		
		private EntityRef<User> _User;
		
		private EntityRef<Box> _Box;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnResellerIdChanging(System.Nullable<int> value);
    partial void OnResellerIdChanged();
    partial void OnBoxIdChanging(System.Nullable<int> value);
    partial void OnBoxIdChanged();
    partial void OnDepositorNameChanging(string value);
    partial void OnDepositorNameChanged();
    partial void OnAmountChanging(System.Nullable<decimal> value);
    partial void OnAmountChanged();
    partial void OnRecieptImageChanging(string value);
    partial void OnRecieptImageChanged();
    partial void OnTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnTimeChanged();
    partial void OnIsApprovedChanging(System.Nullable<bool> value);
    partial void OnIsApprovedChanged();
    partial void OnRejectReasonChanging(string value);
    partial void OnRejectReasonChanged();
    partial void OnCreditORVoiceChanging(System.Nullable<int> value);
    partial void OnCreditORVoiceChanged();
    #endregion
		
		public RechargeRequest()
		{
			this._ResellerCreditsVoices = new EntitySet<ResellerCreditsVoice>(new Action<ResellerCreditsVoice>(this.attach_ResellerCreditsVoices), new Action<ResellerCreditsVoice>(this.detach_ResellerCreditsVoices));
			this._ResellerCredits = new EntitySet<ResellerCredit>(new Action<ResellerCredit>(this.attach_ResellerCredits), new Action<ResellerCredit>(this.detach_ResellerCredits));
			this._BoxCredits = new EntitySet<BoxCredit>(new Action<BoxCredit>(this.attach_BoxCredits), new Action<BoxCredit>(this.detach_BoxCredits));
			this._User = default(EntityRef<User>);
			this._Box = default(EntityRef<Box>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResellerId", DbType="Int")]
		public System.Nullable<int> ResellerId
		{
			get
			{
				return this._ResellerId;
			}
			set
			{
				if ((this._ResellerId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnResellerIdChanging(value);
					this.SendPropertyChanging();
					this._ResellerId = value;
					this.SendPropertyChanged("ResellerId");
					this.OnResellerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BoxId", DbType="Int")]
		public System.Nullable<int> BoxId
		{
			get
			{
				return this._BoxId;
			}
			set
			{
				if ((this._BoxId != value))
				{
					if (this._Box.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBoxIdChanging(value);
					this.SendPropertyChanging();
					this._BoxId = value;
					this.SendPropertyChanged("BoxId");
					this.OnBoxIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepositorName", DbType="NVarChar(150)")]
		public string DepositorName
		{
			get
			{
				return this._DepositorName;
			}
			set
			{
				if ((this._DepositorName != value))
				{
					this.OnDepositorNameChanging(value);
					this.SendPropertyChanging();
					this._DepositorName = value;
					this.SendPropertyChanged("DepositorName");
					this.OnDepositorNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Money")]
		public System.Nullable<decimal> Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecieptImage", DbType="NVarChar(350)")]
		public string RecieptImage
		{
			get
			{
				return this._RecieptImage;
			}
			set
			{
				if ((this._RecieptImage != value))
				{
					this.OnRecieptImageChanging(value);
					this.SendPropertyChanging();
					this._RecieptImage = value;
					this.SendPropertyChanged("RecieptImage");
					this.OnRecieptImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time", DbType="DateTime")]
		public System.Nullable<System.DateTime> Time
		{
			get
			{
				return this._Time;
			}
			set
			{
				if ((this._Time != value))
				{
					this.OnTimeChanging(value);
					this.SendPropertyChanging();
					this._Time = value;
					this.SendPropertyChanged("Time");
					this.OnTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsApproved", DbType="Bit")]
		public System.Nullable<bool> IsApproved
		{
			get
			{
				return this._IsApproved;
			}
			set
			{
				if ((this._IsApproved != value))
				{
					this.OnIsApprovedChanging(value);
					this.SendPropertyChanging();
					this._IsApproved = value;
					this.SendPropertyChanged("IsApproved");
					this.OnIsApprovedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RejectReason", DbType="NVarChar(MAX)")]
		public string RejectReason
		{
			get
			{
				return this._RejectReason;
			}
			set
			{
				if ((this._RejectReason != value))
				{
					this.OnRejectReasonChanging(value);
					this.SendPropertyChanging();
					this._RejectReason = value;
					this.SendPropertyChanged("RejectReason");
					this.OnRejectReasonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreditORVoice", DbType="int")]
		public System.Nullable<int> CreditORVoice
		{
			get
			{
				return this._CreditORVoice;
			}
			set
			{
				if ((this._CreditORVoice != value))
				{
					this.OnCreditORVoiceChanging(value);
					this.SendPropertyChanging();
					this._CreditORVoice = value;
					this.SendPropertyChanged("CreditORVoice");
					this.OnCreditORVoiceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RechargeRequest_ResellerCreditsVoice", Storage="_ResellerCreditsVoices", ThisKey="ID", OtherKey="RechargeRequestId")]
		public EntitySet<ResellerCreditsVoice> ResellerCreditsVoices
		{
			get
			{
				return this._ResellerCreditsVoices;
			}
			set
			{
				this._ResellerCreditsVoices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RechargeRequest_ResellerCredit", Storage="_ResellerCredits", ThisKey="ID", OtherKey="RechargeRequestId")]
		public EntitySet<ResellerCredit> ResellerCredits
		{
			get
			{
				return this._ResellerCredits;
			}
			set
			{
				this._ResellerCredits.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RechargeRequest_BoxCredit", Storage="_BoxCredits", ThisKey="ID", OtherKey="RechargeRequestId")]
		public EntitySet<BoxCredit> BoxCredits
		{
			get
			{
				return this._BoxCredits;
			}
			set
			{
				this._BoxCredits.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_RechargeRequest", Storage="_User", ThisKey="ResellerId", OtherKey="ID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.RechargeRequests.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.RechargeRequests.Add(this);
						this._ResellerId = value.ID;
					}
					else
					{
						this._ResellerId = default(Nullable<int>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Box_RechargeRequest", Storage="_Box", ThisKey="BoxId", OtherKey="ID", IsForeignKey=true)]
		public Box Box
		{
			get
			{
				return this._Box.Entity;
			}
			set
			{
				Box previousValue = this._Box.Entity;
				if (((previousValue != value) 
							|| (this._Box.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Box.Entity = null;
						previousValue.RechargeRequests.Remove(this);
					}
					this._Box.Entity = value;
					if ((value != null))
					{
						value.RechargeRequests.Add(this);
						this._BoxId = value.ID;
					}
					else
					{
						this._BoxId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Box");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ResellerCreditsVoices(ResellerCreditsVoice entity)
		{
			this.SendPropertyChanging();
			entity.RechargeRequest = this;
		}
		
		private void detach_ResellerCreditsVoices(ResellerCreditsVoice entity)
		{
			this.SendPropertyChanging();
			entity.RechargeRequest = null;
		}
		
		private void attach_ResellerCredits(ResellerCredit entity)
		{
			this.SendPropertyChanging();
			entity.RechargeRequest = this;
		}
		
		private void detach_ResellerCredits(ResellerCredit entity)
		{
			this.SendPropertyChanging();
			entity.RechargeRequest = null;
		}
		
		private void attach_BoxCredits(BoxCredit entity)
		{
			this.SendPropertyChanging();
			entity.RechargeRequest = this;
		}
		
		private void detach_BoxCredits(BoxCredit entity)
		{
			this.SendPropertyChanging();
			entity.RechargeRequest = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TextOfRechargeAccount")]
	public partial class TextOfRechargeAccount : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Text;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTextChanging(string value);
    partial void OnTextChanged();
    #endregion
		
		public TextOfRechargeAccount()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Text", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Text
		{
			get
			{
				return this._Text;
			}
			set
			{
				if ((this._Text != value))
				{
					this.OnTextChanging(value);
					this.SendPropertyChanging();
					this._Text = value;
					this.SendPropertyChanged("Text");
					this.OnTextChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Boxes")]
	public partial class Box : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _BoxName;
		
		private System.Nullable<bool> _ShowBox;
		
		private System.Nullable<bool> _ShowBoxInResellerPPR;
		
		private System.Nullable<bool> _ShowInCustomerDemands;
		
		private EntitySet<RechargeRequest> _RechargeRequests;
		
		private EntitySet<RechargeRequestBranch> _RechargeRequestBranches;
		
		private EntitySet<BoxCredit> _BoxCredits;
		
		private EntitySet<CustomerPayment> _CustomerPayments;
		
		private EntitySet<DistributorOption> _DistributorOptions;
		
		private EntitySet<DistributorPaymentRecord> _DistributorPaymentRecords;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnBoxNameChanging(string value);
    partial void OnBoxNameChanged();
    partial void OnShowBoxChanging(System.Nullable<bool> value);
    partial void OnShowBoxChanged();
    partial void OnShowBoxInResellerPPRChanging(System.Nullable<bool> value);
    partial void OnShowBoxInResellerPPRChanged();
    partial void OnShowInCustomerDemandsChanging(System.Nullable<bool> value);
    partial void OnShowInCustomerDemandsChanged();
    #endregion
		
		public Box()
		{
			this._RechargeRequests = new EntitySet<RechargeRequest>(new Action<RechargeRequest>(this.attach_RechargeRequests), new Action<RechargeRequest>(this.detach_RechargeRequests));
			this._RechargeRequestBranches = new EntitySet<RechargeRequestBranch>(new Action<RechargeRequestBranch>(this.attach_RechargeRequestBranches), new Action<RechargeRequestBranch>(this.detach_RechargeRequestBranches));
			this._BoxCredits = new EntitySet<BoxCredit>(new Action<BoxCredit>(this.attach_BoxCredits), new Action<BoxCredit>(this.detach_BoxCredits));
			this._CustomerPayments = new EntitySet<CustomerPayment>(new Action<CustomerPayment>(this.attach_CustomerPayments), new Action<CustomerPayment>(this.detach_CustomerPayments));
			this._DistributorOptions = new EntitySet<DistributorOption>(new Action<DistributorOption>(this.attach_DistributorOptions), new Action<DistributorOption>(this.detach_DistributorOptions));
			this._DistributorPaymentRecords = new EntitySet<DistributorPaymentRecord>(new Action<DistributorPaymentRecord>(this.attach_DistributorPaymentRecords), new Action<DistributorPaymentRecord>(this.detach_DistributorPaymentRecords));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BoxName", DbType="NVarChar(100)")]
		public string BoxName
		{
			get
			{
				return this._BoxName;
			}
			set
			{
				if ((this._BoxName != value))
				{
					this.OnBoxNameChanging(value);
					this.SendPropertyChanging();
					this._BoxName = value;
					this.SendPropertyChanged("BoxName");
					this.OnBoxNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShowBox", DbType="Bit")]
		public System.Nullable<bool> ShowBox
		{
			get
			{
				return this._ShowBox;
			}
			set
			{
				if ((this._ShowBox != value))
				{
					this.OnShowBoxChanging(value);
					this.SendPropertyChanging();
					this._ShowBox = value;
					this.SendPropertyChanged("ShowBox");
					this.OnShowBoxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShowBoxInResellerPPR", DbType="Bit")]
		public System.Nullable<bool> ShowBoxInResellerPPR
		{
			get
			{
				return this._ShowBoxInResellerPPR;
			}
			set
			{
				if ((this._ShowBoxInResellerPPR != value))
				{
					this.OnShowBoxInResellerPPRChanging(value);
					this.SendPropertyChanging();
					this._ShowBoxInResellerPPR = value;
					this.SendPropertyChanged("ShowBoxInResellerPPR");
					this.OnShowBoxInResellerPPRChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShowInCustomerDemands", DbType="Bit")]
		public System.Nullable<bool> ShowInCustomerDemands
		{
			get
			{
				return this._ShowInCustomerDemands;
			}
			set
			{
				if ((this._ShowInCustomerDemands != value))
				{
					this.OnShowInCustomerDemandsChanging(value);
					this.SendPropertyChanging();
					this._ShowInCustomerDemands = value;
					this.SendPropertyChanged("ShowInCustomerDemands");
					this.OnShowInCustomerDemandsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Box_RechargeRequest", Storage="_RechargeRequests", ThisKey="ID", OtherKey="BoxId")]
		public EntitySet<RechargeRequest> RechargeRequests
		{
			get
			{
				return this._RechargeRequests;
			}
			set
			{
				this._RechargeRequests.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Box_RechargeRequestBranch", Storage="_RechargeRequestBranches", ThisKey="ID", OtherKey="BoxId")]
		public EntitySet<RechargeRequestBranch> RechargeRequestBranches
		{
			get
			{
				return this._RechargeRequestBranches;
			}
			set
			{
				this._RechargeRequestBranches.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Box_BoxCredit", Storage="_BoxCredits", ThisKey="ID", OtherKey="BoxId")]
		public EntitySet<BoxCredit> BoxCredits
		{
			get
			{
				return this._BoxCredits;
			}
			set
			{
				this._BoxCredits.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Box_CustomerPayment", Storage="_CustomerPayments", ThisKey="ID", OtherKey="BoxId")]
		public EntitySet<CustomerPayment> CustomerPayments
		{
			get
			{
				return this._CustomerPayments;
			}
			set
			{
				this._CustomerPayments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Box_DistributorOption", Storage="_DistributorOptions", ThisKey="ID", OtherKey="BoxId")]
		public EntitySet<DistributorOption> DistributorOptions
		{
			get
			{
				return this._DistributorOptions;
			}
			set
			{
				this._DistributorOptions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Box_DistributorPaymentRecord", Storage="_DistributorPaymentRecords", ThisKey="ID", OtherKey="BoxId")]
		public EntitySet<DistributorPaymentRecord> DistributorPaymentRecords
		{
			get
			{
				return this._DistributorPaymentRecords;
			}
			set
			{
				this._DistributorPaymentRecords.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_RechargeRequests(RechargeRequest entity)
		{
			this.SendPropertyChanging();
			entity.Box = this;
		}
		
		private void detach_RechargeRequests(RechargeRequest entity)
		{
			this.SendPropertyChanging();
			entity.Box = null;
		}
		
		private void attach_RechargeRequestBranches(RechargeRequestBranch entity)
		{
			this.SendPropertyChanging();
			entity.Box = this;
		}
		
		private void detach_RechargeRequestBranches(RechargeRequestBranch entity)
		{
			this.SendPropertyChanging();
			entity.Box = null;
		}
		
		private void attach_BoxCredits(BoxCredit entity)
		{
			this.SendPropertyChanging();
			entity.Box = this;
		}
		
		private void detach_BoxCredits(BoxCredit entity)
		{
			this.SendPropertyChanging();
			entity.Box = null;
		}
		
		private void attach_CustomerPayments(CustomerPayment entity)
		{
			this.SendPropertyChanging();
			entity.Box = this;
		}
		
		private void detach_CustomerPayments(CustomerPayment entity)
		{
			this.SendPropertyChanging();
			entity.Box = null;
		}
		
		private void attach_DistributorOptions(DistributorOption entity)
		{
			this.SendPropertyChanging();
			entity.Box = this;
		}
		
		private void detach_DistributorOptions(DistributorOption entity)
		{
			this.SendPropertyChanging();
			entity.Box = null;
		}
		
		private void attach_DistributorPaymentRecords(DistributorPaymentRecord entity)
		{
			this.SendPropertyChanging();
			entity.Box = this;
		}
		
		private void detach_DistributorPaymentRecords(DistributorPaymentRecord entity)
		{
			this.SendPropertyChanging();
			entity.Box = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RechargeRequestBranch")]
	public partial class RechargeRequestBranch : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _BranchId;
		
		private System.Nullable<int> _BoxId;
		
		private string _DepositorName;
		
		private System.Nullable<decimal> _Amount;
		
		private string _RecieptImage;
		
		private System.Nullable<System.DateTime> _Time;
		
		private System.Nullable<bool> _IsApproved;
		
		private string _RejectReason;
		
		private System.Nullable<int> _CreditOrVoice;
		
		private EntitySet<BranchCredit> _BranchCredits;
		
		private EntitySet<BoxCredit> _BoxCredits;
		
		private EntityRef<Box> _Box;
		
		private EntityRef<Branch> _Branch;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnBranchIdChanging(System.Nullable<int> value);
    partial void OnBranchIdChanged();
    partial void OnBoxIdChanging(System.Nullable<int> value);
    partial void OnBoxIdChanged();
    partial void OnDepositorNameChanging(string value);
    partial void OnDepositorNameChanged();
    partial void OnAmountChanging(System.Nullable<decimal> value);
    partial void OnAmountChanged();
    partial void OnRecieptImageChanging(string value);
    partial void OnRecieptImageChanged();
    partial void OnTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnTimeChanged();
    partial void OnIsApprovedChanging(System.Nullable<bool> value);
    partial void OnIsApprovedChanged();
    partial void OnRejectReasonChanging(string value);
    partial void OnRejectReasonChanged();
    partial void OnCreditOrVoiceChanging(System.Nullable<int> value);
    partial void OnCreditOrVoiceChanged();
    #endregion
		
		public RechargeRequestBranch()
		{
			this._BranchCredits = new EntitySet<BranchCredit>(new Action<BranchCredit>(this.attach_BranchCredits), new Action<BranchCredit>(this.detach_BranchCredits));
			this._BoxCredits = new EntitySet<BoxCredit>(new Action<BoxCredit>(this.attach_BoxCredits), new Action<BoxCredit>(this.detach_BoxCredits));
			this._Box = default(EntityRef<Box>);
			this._Branch = default(EntityRef<Branch>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchId", DbType="Int")]
		public System.Nullable<int> BranchId
		{
			get
			{
				return this._BranchId;
			}
			set
			{
				if ((this._BranchId != value))
				{
					if (this._Branch.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBranchIdChanging(value);
					this.SendPropertyChanging();
					this._BranchId = value;
					this.SendPropertyChanged("BranchId");
					this.OnBranchIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BoxId", DbType="Int")]
		public System.Nullable<int> BoxId
		{
			get
			{
				return this._BoxId;
			}
			set
			{
				if ((this._BoxId != value))
				{
					if (this._Box.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBoxIdChanging(value);
					this.SendPropertyChanging();
					this._BoxId = value;
					this.SendPropertyChanged("BoxId");
					this.OnBoxIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepositorName", DbType="NVarChar(150)")]
		public string DepositorName
		{
			get
			{
				return this._DepositorName;
			}
			set
			{
				if ((this._DepositorName != value))
				{
					this.OnDepositorNameChanging(value);
					this.SendPropertyChanging();
					this._DepositorName = value;
					this.SendPropertyChanged("DepositorName");
					this.OnDepositorNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Money")]
		public System.Nullable<decimal> Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecieptImage", DbType="NVarChar(350)")]
		public string RecieptImage
		{
			get
			{
				return this._RecieptImage;
			}
			set
			{
				if ((this._RecieptImage != value))
				{
					this.OnRecieptImageChanging(value);
					this.SendPropertyChanging();
					this._RecieptImage = value;
					this.SendPropertyChanged("RecieptImage");
					this.OnRecieptImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time", DbType="DateTime")]
		public System.Nullable<System.DateTime> Time
		{
			get
			{
				return this._Time;
			}
			set
			{
				if ((this._Time != value))
				{
					this.OnTimeChanging(value);
					this.SendPropertyChanging();
					this._Time = value;
					this.SendPropertyChanged("Time");
					this.OnTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsApproved", DbType="Bit")]
		public System.Nullable<bool> IsApproved
		{
			get
			{
				return this._IsApproved;
			}
			set
			{
				if ((this._IsApproved != value))
				{
					this.OnIsApprovedChanging(value);
					this.SendPropertyChanging();
					this._IsApproved = value;
					this.SendPropertyChanged("IsApproved");
					this.OnIsApprovedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RejectReason", DbType="NVarChar(MAX)")]
		public string RejectReason
		{
			get
			{
				return this._RejectReason;
			}
			set
			{
				if ((this._RejectReason != value))
				{
					this.OnRejectReasonChanging(value);
					this.SendPropertyChanging();
					this._RejectReason = value;
					this.SendPropertyChanged("RejectReason");
					this.OnRejectReasonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreditOrVoice", DbType="Int")]
		public System.Nullable<int> CreditOrVoice
		{
			get
			{
				return this._CreditOrVoice;
			}
			set
			{
				if ((this._CreditOrVoice != value))
				{
					this.OnCreditOrVoiceChanging(value);
					this.SendPropertyChanging();
					this._CreditOrVoice = value;
					this.SendPropertyChanged("CreditOrVoice");
					this.OnCreditOrVoiceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RechargeRequestBranch_BranchCredit", Storage="_BranchCredits", ThisKey="Id", OtherKey="RechargeRequestBranchId")]
		public EntitySet<BranchCredit> BranchCredits
		{
			get
			{
				return this._BranchCredits;
			}
			set
			{
				this._BranchCredits.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RechargeRequestBranch_BoxCredit", Storage="_BoxCredits", ThisKey="Id", OtherKey="RechargeBranchId")]
		public EntitySet<BoxCredit> BoxCredits
		{
			get
			{
				return this._BoxCredits;
			}
			set
			{
				this._BoxCredits.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Box_RechargeRequestBranch", Storage="_Box", ThisKey="BoxId", OtherKey="ID", IsForeignKey=true)]
		public Box Box
		{
			get
			{
				return this._Box.Entity;
			}
			set
			{
				Box previousValue = this._Box.Entity;
				if (((previousValue != value) 
							|| (this._Box.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Box.Entity = null;
						previousValue.RechargeRequestBranches.Remove(this);
					}
					this._Box.Entity = value;
					if ((value != null))
					{
						value.RechargeRequestBranches.Add(this);
						this._BoxId = value.ID;
					}
					else
					{
						this._BoxId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Box");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Branch_RechargeRequestBranch", Storage="_Branch", ThisKey="BranchId", OtherKey="ID", IsForeignKey=true)]
		public Branch Branch
		{
			get
			{
				return this._Branch.Entity;
			}
			set
			{
				Branch previousValue = this._Branch.Entity;
				if (((previousValue != value) 
							|| (this._Branch.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Branch.Entity = null;
						previousValue.RechargeRequestBranches.Remove(this);
					}
					this._Branch.Entity = value;
					if ((value != null))
					{
						value.RechargeRequestBranches.Add(this);
						this._BranchId = value.ID;
					}
					else
					{
						this._BranchId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Branch");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BranchCredits(BranchCredit entity)
		{
			this.SendPropertyChanging();
			entity.RechargeRequestBranch = this;
		}
		
		private void detach_BranchCredits(BranchCredit entity)
		{
			this.SendPropertyChanging();
			entity.RechargeRequestBranch = null;
		}
		
		private void attach_BoxCredits(BoxCredit entity)
		{
			this.SendPropertyChanging();
			entity.RechargeRequestBranch = this;
		}
		
		private void detach_BoxCredits(BoxCredit entity)
		{
			this.SendPropertyChanging();
			entity.RechargeRequestBranch = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BranchCredits")]
	public partial class BranchCredit : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _BranchId;
		
		private int _UserId;
		
		private decimal _Amount;
		
		private decimal _Net;
		
		private System.DateTime _Time;
		
		private string _Notes;
		
		private System.Nullable<int> _RechargeRequestBranchId;
		
		private EntityRef<Branch> _Branch;
		
		private EntityRef<RechargeRequestBranch> _RechargeRequestBranch;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnBranchIdChanging(int value);
    partial void OnBranchIdChanged();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnAmountChanging(decimal value);
    partial void OnAmountChanged();
    partial void OnNetChanging(decimal value);
    partial void OnNetChanged();
    partial void OnTimeChanging(System.DateTime value);
    partial void OnTimeChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnRechargeRequestBranchIdChanging(System.Nullable<int> value);
    partial void OnRechargeRequestBranchIdChanged();
    #endregion
		
		public BranchCredit()
		{
			this._Branch = default(EntityRef<Branch>);
			this._RechargeRequestBranch = default(EntityRef<RechargeRequestBranch>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchId", DbType="Int NOT NULL")]
		public int BranchId
		{
			get
			{
				return this._BranchId;
			}
			set
			{
				if ((this._BranchId != value))
				{
					if (this._Branch.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBranchIdChanging(value);
					this.SendPropertyChanging();
					this._BranchId = value;
					this.SendPropertyChanged("BranchId");
					this.OnBranchIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL")]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Money NOT NULL")]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Net", DbType="Money NOT NULL")]
		public decimal Net
		{
			get
			{
				return this._Net;
			}
			set
			{
				if ((this._Net != value))
				{
					this.OnNetChanging(value);
					this.SendPropertyChanging();
					this._Net = value;
					this.SendPropertyChanged("Net");
					this.OnNetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time", DbType="DateTime NOT NULL")]
		public System.DateTime Time
		{
			get
			{
				return this._Time;
			}
			set
			{
				if ((this._Time != value))
				{
					this.OnTimeChanging(value);
					this.SendPropertyChanging();
					this._Time = value;
					this.SendPropertyChanged("Time");
					this.OnTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(MAX)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RechargeRequestBranchId", DbType="Int")]
		public System.Nullable<int> RechargeRequestBranchId
		{
			get
			{
				return this._RechargeRequestBranchId;
			}
			set
			{
				if ((this._RechargeRequestBranchId != value))
				{
					if (this._RechargeRequestBranch.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRechargeRequestBranchIdChanging(value);
					this.SendPropertyChanging();
					this._RechargeRequestBranchId = value;
					this.SendPropertyChanged("RechargeRequestBranchId");
					this.OnRechargeRequestBranchIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Branch_BranchCredit", Storage="_Branch", ThisKey="BranchId", OtherKey="ID", IsForeignKey=true)]
		public Branch Branch
		{
			get
			{
				return this._Branch.Entity;
			}
			set
			{
				Branch previousValue = this._Branch.Entity;
				if (((previousValue != value) 
							|| (this._Branch.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Branch.Entity = null;
						previousValue.BranchCredits.Remove(this);
					}
					this._Branch.Entity = value;
					if ((value != null))
					{
						value.BranchCredits.Add(this);
						this._BranchId = value.ID;
					}
					else
					{
						this._BranchId = default(int);
					}
					this.SendPropertyChanged("Branch");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RechargeRequestBranch_BranchCredit", Storage="_RechargeRequestBranch", ThisKey="RechargeRequestBranchId", OtherKey="Id", IsForeignKey=true)]
		public RechargeRequestBranch RechargeRequestBranch
		{
			get
			{
				return this._RechargeRequestBranch.Entity;
			}
			set
			{
				RechargeRequestBranch previousValue = this._RechargeRequestBranch.Entity;
				if (((previousValue != value) 
							|| (this._RechargeRequestBranch.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RechargeRequestBranch.Entity = null;
						previousValue.BranchCredits.Remove(this);
					}
					this._RechargeRequestBranch.Entity = value;
					if ((value != null))
					{
						value.BranchCredits.Add(this);
						this._RechargeRequestBranchId = value.Id;
					}
					else
					{
						this._RechargeRequestBranchId = default(Nullable<int>);
					}
					this.SendPropertyChanged("RechargeRequestBranch");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_BranchCredit", Storage="_User", ThisKey="UserId", OtherKey="ID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.BranchCredits.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.BranchCredits.Add(this);
						this._UserId = value.ID;
					}
					else
					{
						this._UserId = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UpdatedResellerBSPrivilages")]
	public partial class UpdatedResellerBSPrivilage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _GroupId;
		
		private string _ItemName;
		
		private EntityRef<Group> _Group;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnGroupIdChanging(System.Nullable<int> value);
    partial void OnGroupIdChanged();
    partial void OnItemNameChanging(string value);
    partial void OnItemNameChanged();
    #endregion
		
		public UpdatedResellerBSPrivilage()
		{
			this._Group = default(EntityRef<Group>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupId", DbType="Int")]
		public System.Nullable<int> GroupId
		{
			get
			{
				return this._GroupId;
			}
			set
			{
				if ((this._GroupId != value))
				{
					if (this._Group.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGroupIdChanging(value);
					this.SendPropertyChanging();
					this._GroupId = value;
					this.SendPropertyChanged("GroupId");
					this.OnGroupIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemName", DbType="NVarChar(50)")]
		public string ItemName
		{
			get
			{
				return this._ItemName;
			}
			set
			{
				if ((this._ItemName != value))
				{
					this.OnItemNameChanging(value);
					this.SendPropertyChanging();
					this._ItemName = value;
					this.SendPropertyChanged("ItemName");
					this.OnItemNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Group_UpdatedResellerBSPrivilage", Storage="_Group", ThisKey="GroupId", OtherKey="ID", IsForeignKey=true)]
		public Group Group
		{
			get
			{
				return this._Group.Entity;
			}
			set
			{
				Group previousValue = this._Group.Entity;
				if (((previousValue != value) 
							|| (this._Group.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Group.Entity = null;
						previousValue.UpdatedResellerBSPrivilages.Remove(this);
					}
					this._Group.Entity = value;
					if ((value != null))
					{
						value.UpdatedResellerBSPrivilages.Add(this);
						this._GroupId = value.ID;
					}
					else
					{
						this._GroupId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Group");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ArrangedInvoice")]
	public partial class ArrangedInvoice : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Customernumber;
		
		private string _Customername;
		
		private string _packagename;
		
		private string _Netamout;
		
		private string _Startdate;
		
		private string _Enddate;
		
		private string _Description;
		
		private string _Phonenumber;
		
		private string _Exchange;
		
		private string _CumstomerBranch;
		
		private string _CustomerReseller;
		
		private string _CustomerOffer;
		
		private string _CustomerStatus;
		
		private bool _isfounded;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCustomernumberChanging(string value);
    partial void OnCustomernumberChanged();
    partial void OnCustomernameChanging(string value);
    partial void OnCustomernameChanged();
    partial void OnpackagenameChanging(string value);
    partial void OnpackagenameChanged();
    partial void OnNetamoutChanging(string value);
    partial void OnNetamoutChanged();
    partial void OnStartdateChanging(string value);
    partial void OnStartdateChanged();
    partial void OnEnddateChanging(string value);
    partial void OnEnddateChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnPhonenumberChanging(string value);
    partial void OnPhonenumberChanged();
    partial void OnExchangeChanging(string value);
    partial void OnExchangeChanged();
    partial void OnCumstomerBranchChanging(string value);
    partial void OnCumstomerBranchChanged();
    partial void OnCustomerResellerChanging(string value);
    partial void OnCustomerResellerChanged();
    partial void OnCustomerOfferChanging(string value);
    partial void OnCustomerOfferChanged();
    partial void OnCustomerStatusChanging(string value);
    partial void OnCustomerStatusChanged();
    partial void OnisfoundedChanging(bool value);
    partial void OnisfoundedChanged();
    #endregion
		
		public ArrangedInvoice()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Customernumber", DbType="NVarChar(250)")]
		public string Customernumber
		{
			get
			{
				return this._Customernumber;
			}
			set
			{
				if ((this._Customernumber != value))
				{
					this.OnCustomernumberChanging(value);
					this.SendPropertyChanging();
					this._Customernumber = value;
					this.SendPropertyChanged("Customernumber");
					this.OnCustomernumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Customername", DbType="NVarChar(250)")]
		public string Customername
		{
			get
			{
				return this._Customername;
			}
			set
			{
				if ((this._Customername != value))
				{
					this.OnCustomernameChanging(value);
					this.SendPropertyChanging();
					this._Customername = value;
					this.SendPropertyChanged("Customername");
					this.OnCustomernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_packagename", DbType="NVarChar(250)")]
		public string packagename
		{
			get
			{
				return this._packagename;
			}
			set
			{
				if ((this._packagename != value))
				{
					this.OnpackagenameChanging(value);
					this.SendPropertyChanging();
					this._packagename = value;
					this.SendPropertyChanged("packagename");
					this.OnpackagenameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Netamout", DbType="NVarChar(250)")]
		public string Netamout
		{
			get
			{
				return this._Netamout;
			}
			set
			{
				if ((this._Netamout != value))
				{
					this.OnNetamoutChanging(value);
					this.SendPropertyChanging();
					this._Netamout = value;
					this.SendPropertyChanged("Netamout");
					this.OnNetamoutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Startdate", DbType="NVarChar(250)")]
		public string Startdate
		{
			get
			{
				return this._Startdate;
			}
			set
			{
				if ((this._Startdate != value))
				{
					this.OnStartdateChanging(value);
					this.SendPropertyChanging();
					this._Startdate = value;
					this.SendPropertyChanged("Startdate");
					this.OnStartdateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Enddate", DbType="NVarChar(250)")]
		public string Enddate
		{
			get
			{
				return this._Enddate;
			}
			set
			{
				if ((this._Enddate != value))
				{
					this.OnEnddateChanging(value);
					this.SendPropertyChanging();
					this._Enddate = value;
					this.SendPropertyChanged("Enddate");
					this.OnEnddateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(250)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phonenumber", DbType="NVarChar(250)")]
		public string Phonenumber
		{
			get
			{
				return this._Phonenumber;
			}
			set
			{
				if ((this._Phonenumber != value))
				{
					this.OnPhonenumberChanging(value);
					this.SendPropertyChanging();
					this._Phonenumber = value;
					this.SendPropertyChanged("Phonenumber");
					this.OnPhonenumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Exchange", DbType="NVarChar(250)")]
		public string Exchange
		{
			get
			{
				return this._Exchange;
			}
			set
			{
				if ((this._Exchange != value))
				{
					this.OnExchangeChanging(value);
					this.SendPropertyChanging();
					this._Exchange = value;
					this.SendPropertyChanged("Exchange");
					this.OnExchangeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CumstomerBranch", DbType="NVarChar(250)")]
		public string CumstomerBranch
		{
			get
			{
				return this._CumstomerBranch;
			}
			set
			{
				if ((this._CumstomerBranch != value))
				{
					this.OnCumstomerBranchChanging(value);
					this.SendPropertyChanging();
					this._CumstomerBranch = value;
					this.SendPropertyChanged("CumstomerBranch");
					this.OnCumstomerBranchChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerReseller", DbType="NVarChar(250)")]
		public string CustomerReseller
		{
			get
			{
				return this._CustomerReseller;
			}
			set
			{
				if ((this._CustomerReseller != value))
				{
					this.OnCustomerResellerChanging(value);
					this.SendPropertyChanging();
					this._CustomerReseller = value;
					this.SendPropertyChanged("CustomerReseller");
					this.OnCustomerResellerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerOffer", DbType="NVarChar(250)")]
		public string CustomerOffer
		{
			get
			{
				return this._CustomerOffer;
			}
			set
			{
				if ((this._CustomerOffer != value))
				{
					this.OnCustomerOfferChanging(value);
					this.SendPropertyChanging();
					this._CustomerOffer = value;
					this.SendPropertyChanged("CustomerOffer");
					this.OnCustomerOfferChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerStatus", DbType="NVarChar(250)")]
		public string CustomerStatus
		{
			get
			{
				return this._CustomerStatus;
			}
			set
			{
				if ((this._CustomerStatus != value))
				{
					this.OnCustomerStatusChanging(value);
					this.SendPropertyChanging();
					this._CustomerStatus = value;
					this.SendPropertyChanged("CustomerStatus");
					this.OnCustomerStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isfounded", DbType="Bit NOT NULL")]
		public bool isfounded
		{
			get
			{
				return this._isfounded;
			}
			set
			{
				if ((this._isfounded != value))
				{
					this.OnisfoundedChanging(value);
					this.SendPropertyChanging();
					this._isfounded = value;
					this.SendPropertyChanged("isfounded");
					this.OnisfoundedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CenterCredit")]
	public partial class CenterCredit : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _CenterUserId;
		
		private System.Nullable<int> _UserId;
		
		private System.Nullable<decimal> _Amount;
		
		private decimal _Net;
		
		private System.DateTime _Time;
		
		private string _Notes;
		
		private EntityRef<User> _User;
		
		private EntityRef<User> _User1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCenterUserIdChanging(int value);
    partial void OnCenterUserIdChanged();
    partial void OnUserIdChanging(System.Nullable<int> value);
    partial void OnUserIdChanged();
    partial void OnAmountChanging(System.Nullable<decimal> value);
    partial void OnAmountChanged();
    partial void OnNetChanging(decimal value);
    partial void OnNetChanged();
    partial void OnTimeChanging(System.DateTime value);
    partial void OnTimeChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    #endregion
		
		public CenterCredit()
		{
			this._User = default(EntityRef<User>);
			this._User1 = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CenterUserId", DbType="Int NOT NULL")]
		public int CenterUserId
		{
			get
			{
				return this._CenterUserId;
			}
			set
			{
				if ((this._CenterUserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCenterUserIdChanging(value);
					this.SendPropertyChanging();
					this._CenterUserId = value;
					this.SendPropertyChanged("CenterUserId");
					this.OnCenterUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int")]
		public System.Nullable<int> UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._User1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Money")]
		public System.Nullable<decimal> Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Net", DbType="Money")]
		public decimal Net
		{
			get
			{
				return this._Net;
			}
			set
			{
				if ((this._Net != value))
				{
					this.OnNetChanging(value);
					this.SendPropertyChanging();
					this._Net = value;
					this.SendPropertyChanged("Net");
					this.OnNetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time", DbType="DateTime")]
		public System.DateTime Time
		{
			get
			{
				return this._Time;
			}
			set
			{
				if ((this._Time != value))
				{
					this.OnTimeChanging(value);
					this.SendPropertyChanging();
					this._Time = value;
					this.SendPropertyChanged("Time");
					this.OnTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(MAX)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_CenterCredit", Storage="_User", ThisKey="CenterUserId", OtherKey="ID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.CenterCredits.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.CenterCredits.Add(this);
						this._CenterUserId = value.ID;
					}
					else
					{
						this._CenterUserId = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_CenterCredit1", Storage="_User1", ThisKey="UserId", OtherKey="ID", IsForeignKey=true)]
		public User User1
		{
			get
			{
				return this._User1.Entity;
			}
			set
			{
				User previousValue = this._User1.Entity;
				if (((previousValue != value) 
							|| (this._User1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User1.Entity = null;
						previousValue.CenterCredits1.Remove(this);
					}
					this._User1.Entity = value;
					if ((value != null))
					{
						value.CenterCredits1.Add(this);
						this._UserId = value.ID;
					}
					else
					{
						this._UserId = default(Nullable<int>);
					}
					this.SendPropertyChanged("User1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SiteDatas")]
	public partial class SiteData : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _SiteName;
		
		private string _LogoUrl;
		
		private string _SiteUrl;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnSiteNameChanging(string value);
    partial void OnSiteNameChanged();
    partial void OnLogoUrlChanging(string value);
    partial void OnLogoUrlChanged();
    partial void OnSiteUrlChanging(string value);
    partial void OnSiteUrlChanged();
    #endregion
		
		public SiteData()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteName", DbType="NVarChar(555) NOT NULL", CanBeNull=false)]
		public string SiteName
		{
			get
			{
				return this._SiteName;
			}
			set
			{
				if ((this._SiteName != value))
				{
					this.OnSiteNameChanging(value);
					this.SendPropertyChanging();
					this._SiteName = value;
					this.SendPropertyChanged("SiteName");
					this.OnSiteNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogoUrl", DbType="NVarChar(555) NOT NULL", CanBeNull=false)]
		public string LogoUrl
		{
			get
			{
				return this._LogoUrl;
			}
			set
			{
				if ((this._LogoUrl != value))
				{
					this.OnLogoUrlChanging(value);
					this.SendPropertyChanging();
					this._LogoUrl = value;
					this.SendPropertyChanged("LogoUrl");
					this.OnLogoUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteUrl", DbType="NVarChar(550) NOT NULL")]
		public string SiteUrl
		{
			get
			{
				return this._SiteUrl;
			}
			set
			{
				if ((this._SiteUrl != value))
				{
					this.OnSiteUrlChanging(value);
					this.SendPropertyChanging();
					this._SiteUrl = value;
					this.SendPropertyChanged("SiteUrl");
					this.OnSiteUrlChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BoxCredits")]
	public partial class BoxCredit : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _BoxId;
		
		private System.Nullable<int> _UserId;
		
		private System.Nullable<decimal> _Amount;
		
		private System.Nullable<decimal> _Net;
		
		private System.Nullable<System.DateTime> _Time;
		
		private string _Notes;
		
		private System.Nullable<int> _RechargeRequestId;
		
		private System.Nullable<int> _RechargeBranchId;
		
		private EntityRef<Box> _Box;
		
		private EntityRef<RechargeRequest> _RechargeRequest;
		
		private EntityRef<User> _User;
		
		private EntityRef<RechargeRequestBranch> _RechargeRequestBranch;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnBoxIdChanging(System.Nullable<int> value);
    partial void OnBoxIdChanged();
    partial void OnUserIdChanging(System.Nullable<int> value);
    partial void OnUserIdChanged();
    partial void OnAmountChanging(System.Nullable<decimal> value);
    partial void OnAmountChanged();
    partial void OnNetChanging(System.Nullable<decimal> value);
    partial void OnNetChanged();
    partial void OnTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnTimeChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnRechargeRequestIdChanging(System.Nullable<int> value);
    partial void OnRechargeRequestIdChanged();
    partial void OnRechargeBranchIdChanging(System.Nullable<int> value);
    partial void OnRechargeBranchIdChanged();
    #endregion
		
		public BoxCredit()
		{
			this._Box = default(EntityRef<Box>);
			this._RechargeRequest = default(EntityRef<RechargeRequest>);
			this._User = default(EntityRef<User>);
			this._RechargeRequestBranch = default(EntityRef<RechargeRequestBranch>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BoxId", DbType="Int")]
		public System.Nullable<int> BoxId
		{
			get
			{
				return this._BoxId;
			}
			set
			{
				if ((this._BoxId != value))
				{
					if (this._Box.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBoxIdChanging(value);
					this.SendPropertyChanging();
					this._BoxId = value;
					this.SendPropertyChanged("BoxId");
					this.OnBoxIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int")]
		public System.Nullable<int> UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Money")]
		public System.Nullable<decimal> Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Net", DbType="Money")]
		public System.Nullable<decimal> Net
		{
			get
			{
				return this._Net;
			}
			set
			{
				if ((this._Net != value))
				{
					this.OnNetChanging(value);
					this.SendPropertyChanging();
					this._Net = value;
					this.SendPropertyChanged("Net");
					this.OnNetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time", DbType="DateTime")]
		public System.Nullable<System.DateTime> Time
		{
			get
			{
				return this._Time;
			}
			set
			{
				if ((this._Time != value))
				{
					this.OnTimeChanging(value);
					this.SendPropertyChanging();
					this._Time = value;
					this.SendPropertyChanged("Time");
					this.OnTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(MAX)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RechargeRequestId", DbType="Int")]
		public System.Nullable<int> RechargeRequestId
		{
			get
			{
				return this._RechargeRequestId;
			}
			set
			{
				if ((this._RechargeRequestId != value))
				{
					if (this._RechargeRequest.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRechargeRequestIdChanging(value);
					this.SendPropertyChanging();
					this._RechargeRequestId = value;
					this.SendPropertyChanged("RechargeRequestId");
					this.OnRechargeRequestIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RechargeBranchId", DbType="Int")]
		public System.Nullable<int> RechargeBranchId
		{
			get
			{
				return this._RechargeBranchId;
			}
			set
			{
				if ((this._RechargeBranchId != value))
				{
					if (this._RechargeRequestBranch.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRechargeBranchIdChanging(value);
					this.SendPropertyChanging();
					this._RechargeBranchId = value;
					this.SendPropertyChanged("RechargeBranchId");
					this.OnRechargeBranchIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Box_BoxCredit", Storage="_Box", ThisKey="BoxId", OtherKey="ID", IsForeignKey=true)]
		public Box Box
		{
			get
			{
				return this._Box.Entity;
			}
			set
			{
				Box previousValue = this._Box.Entity;
				if (((previousValue != value) 
							|| (this._Box.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Box.Entity = null;
						previousValue.BoxCredits.Remove(this);
					}
					this._Box.Entity = value;
					if ((value != null))
					{
						value.BoxCredits.Add(this);
						this._BoxId = value.ID;
					}
					else
					{
						this._BoxId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Box");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RechargeRequest_BoxCredit", Storage="_RechargeRequest", ThisKey="RechargeRequestId", OtherKey="ID", IsForeignKey=true)]
		public RechargeRequest RechargeRequest
		{
			get
			{
				return this._RechargeRequest.Entity;
			}
			set
			{
				RechargeRequest previousValue = this._RechargeRequest.Entity;
				if (((previousValue != value) 
							|| (this._RechargeRequest.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RechargeRequest.Entity = null;
						previousValue.BoxCredits.Remove(this);
					}
					this._RechargeRequest.Entity = value;
					if ((value != null))
					{
						value.BoxCredits.Add(this);
						this._RechargeRequestId = value.ID;
					}
					else
					{
						this._RechargeRequestId = default(Nullable<int>);
					}
					this.SendPropertyChanged("RechargeRequest");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_BoxCredit", Storage="_User", ThisKey="UserId", OtherKey="ID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.BoxCredits.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.BoxCredits.Add(this);
						this._UserId = value.ID;
					}
					else
					{
						this._UserId = default(Nullable<int>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RechargeRequestBranch_BoxCredit", Storage="_RechargeRequestBranch", ThisKey="RechargeBranchId", OtherKey="Id", IsForeignKey=true)]
		public RechargeRequestBranch RechargeRequestBranch
		{
			get
			{
				return this._RechargeRequestBranch.Entity;
			}
			set
			{
				RechargeRequestBranch previousValue = this._RechargeRequestBranch.Entity;
				if (((previousValue != value) 
							|| (this._RechargeRequestBranch.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RechargeRequestBranch.Entity = null;
						previousValue.BoxCredits.Remove(this);
					}
					this._RechargeRequestBranch.Entity = value;
					if ((value != null))
					{
						value.BoxCredits.Add(this);
						this._RechargeBranchId = value.Id;
					}
					else
					{
						this._RechargeBranchId = default(Nullable<int>);
					}
					this.SendPropertyChanged("RechargeRequestBranch");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SMSCaseNotification")]
	public partial class SMSCaseNotification : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _CaseName;
		
		private string _Message;
		
		private System.Nullable<bool> _Send;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCaseNameChanging(string value);
    partial void OnCaseNameChanged();
    partial void OnMessageChanging(string value);
    partial void OnMessageChanged();
    partial void OnSendChanging(System.Nullable<bool> value);
    partial void OnSendChanged();
    #endregion
		
		public SMSCaseNotification()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CaseName", DbType="NVarChar(350) NOT NULL", CanBeNull=false)]
		public string CaseName
		{
			get
			{
				return this._CaseName;
			}
			set
			{
				if ((this._CaseName != value))
				{
					this.OnCaseNameChanging(value);
					this.SendPropertyChanging();
					this._CaseName = value;
					this.SendPropertyChanged("CaseName");
					this.OnCaseNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="NVarChar(MAX)")]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this.OnMessageChanging(value);
					this.SendPropertyChanging();
					this._Message = value;
					this.SendPropertyChanged("Message");
					this.OnMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Send", DbType="Bit")]
		public System.Nullable<bool> Send
		{
			get
			{
				return this._Send;
			}
			set
			{
				if ((this._Send != value))
				{
					this.OnSendChanging(value);
					this.SendPropertyChanging();
					this._Send = value;
					this.SendPropertyChanged("Send");
					this.OnSendChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SMSCnfg")]
	public partial class SMSCnfg : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _UserName;
		
		private string _Password;
		
		private string _Sender;
		
		private System.Nullable<bool> _sendsms;
		
		private string _UrlAPI;
		
		private string _UrlCredit;
		
		private string _UrlMessageStatus;
		
		private string _UrlMessageCount;
		
		private string _UrlCurrentCredit;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnSenderChanging(string value);
    partial void OnSenderChanged();
    partial void OnsendsmsChanging(System.Nullable<bool> value);
    partial void OnsendsmsChanged();
    partial void OnUrlAPIChanging(string value);
    partial void OnUrlAPIChanged();
    partial void OnUrlCreditChanging(string value);
    partial void OnUrlCreditChanged();
    partial void OnUrlMessageStatusChanging(string value);
    partial void OnUrlMessageStatusChanged();
    partial void OnUrlMessageCountChanging(string value);
    partial void OnUrlMessageCountChanged();
    partial void OnUrlCurrentCreditChanging(string value);
    partial void OnUrlCurrentCreditChanged();
    #endregion
		
		public SMSCnfg()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sender", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string Sender
		{
			get
			{
				return this._Sender;
			}
			set
			{
				if ((this._Sender != value))
				{
					this.OnSenderChanging(value);
					this.SendPropertyChanging();
					this._Sender = value;
					this.SendPropertyChanged("Sender");
					this.OnSenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sendsms", DbType="Bit")]
		public System.Nullable<bool> sendsms
		{
			get
			{
				return this._sendsms;
			}
			set
			{
				if ((this._sendsms != value))
				{
					this.OnsendsmsChanging(value);
					this.SendPropertyChanging();
					this._sendsms = value;
					this.SendPropertyChanged("sendsms");
					this.OnsendsmsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UrlAPI", DbType="NVarChar(350)")]
		public string UrlAPI
		{
			get
			{
				return this._UrlAPI;
			}
			set
			{
				if ((this._UrlAPI != value))
				{
					this.OnUrlAPIChanging(value);
					this.SendPropertyChanging();
					this._UrlAPI = value;
					this.SendPropertyChanged("UrlAPI");
					this.OnUrlAPIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UrlCredit", DbType="NVarChar(350)")]
		public string UrlCredit
		{
			get
			{
				return this._UrlCredit;
			}
			set
			{
				if ((this._UrlCredit != value))
				{
					this.OnUrlCreditChanging(value);
					this.SendPropertyChanging();
					this._UrlCredit = value;
					this.SendPropertyChanged("UrlCredit");
					this.OnUrlCreditChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UrlMessageStatus", DbType="NVarChar(350)")]
		public string UrlMessageStatus
		{
			get
			{
				return this._UrlMessageStatus;
			}
			set
			{
				if ((this._UrlMessageStatus != value))
				{
					this.OnUrlMessageStatusChanging(value);
					this.SendPropertyChanging();
					this._UrlMessageStatus = value;
					this.SendPropertyChanged("UrlMessageStatus");
					this.OnUrlMessageStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UrlMessageCount", DbType="NVarChar(350)")]
		public string UrlMessageCount
		{
			get
			{
				return this._UrlMessageCount;
			}
			set
			{
				if ((this._UrlMessageCount != value))
				{
					this.OnUrlMessageCountChanging(value);
					this.SendPropertyChanging();
					this._UrlMessageCount = value;
					this.SendPropertyChanged("UrlMessageCount");
					this.OnUrlMessageCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UrlCurrentCredit", DbType="NVarChar(350)")]
		public string UrlCurrentCredit
		{
			get
			{
				return this._UrlCurrentCredit;
			}
			set
			{
				if ((this._UrlCurrentCredit != value))
				{
					this.OnUrlCurrentCreditChanging(value);
					this.SendPropertyChanging();
					this._UrlCurrentCredit = value;
					this.SendPropertyChanged("UrlCurrentCredit");
					this.OnUrlCurrentCreditChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OptionInvoiceProvider")]
	public partial class OptionInvoiceProvider : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _ProviderId;
		
		private EntityRef<ServiceProvider> _ServiceProvider;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnProviderIdChanging(System.Nullable<int> value);
    partial void OnProviderIdChanged();
    #endregion
		
		public OptionInvoiceProvider()
		{
			this._ServiceProvider = default(EntityRef<ServiceProvider>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProviderId", DbType="Int")]
		public System.Nullable<int> ProviderId
		{
			get
			{
				return this._ProviderId;
			}
			set
			{
				if ((this._ProviderId != value))
				{
					if (this._ServiceProvider.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProviderIdChanging(value);
					this.SendPropertyChanging();
					this._ProviderId = value;
					this.SendPropertyChanged("ProviderId");
					this.OnProviderIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ServiceProvider_OptionInvoiceProvider", Storage="_ServiceProvider", ThisKey="ProviderId", OtherKey="ID", IsForeignKey=true)]
		public ServiceProvider ServiceProvider
		{
			get
			{
				return this._ServiceProvider.Entity;
			}
			set
			{
				ServiceProvider previousValue = this._ServiceProvider.Entity;
				if (((previousValue != value) 
							|| (this._ServiceProvider.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ServiceProvider.Entity = null;
						previousValue.OptionInvoiceProviders.Remove(this);
					}
					this._ServiceProvider.Entity = value;
					if ((value != null))
					{
						value.OptionInvoiceProviders.Add(this);
						this._ProviderId = value.ID;
					}
					else
					{
						this._ProviderId = default(Nullable<int>);
					}
					this.SendPropertyChanged("ServiceProvider");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.IncomingExpenses")]
	public partial class IncomingExpense : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _BranchID;
		
		private System.Nullable<double> _Value;
		
		private string _Comment;
		
		private string _Notes;
		
		private System.Nullable<System.DateTime> _Date;
		
		private System.Nullable<int> _UserId;
		
		private System.Nullable<int> _RevenueTypeId;
		
		private EntityRef<Branch> _Branch;
		
		private EntityRef<User> _User;
		
		private EntityRef<RevenueType> _RevenueType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnBranchIDChanging(System.Nullable<int> value);
    partial void OnBranchIDChanged();
    partial void OnValueChanging(System.Nullable<double> value);
    partial void OnValueChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateChanged();
    partial void OnUserIdChanging(System.Nullable<int> value);
    partial void OnUserIdChanged();
    partial void OnRevenueTypeIdChanging(System.Nullable<int> value);
    partial void OnRevenueTypeIdChanged();
    #endregion
		
		public IncomingExpense()
		{
			this._Branch = default(EntityRef<Branch>);
			this._User = default(EntityRef<User>);
			this._RevenueType = default(EntityRef<RevenueType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchID", DbType="Int")]
		public System.Nullable<int> BranchID
		{
			get
			{
				return this._BranchID;
			}
			set
			{
				if ((this._BranchID != value))
				{
					if (this._Branch.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBranchIDChanging(value);
					this.SendPropertyChanging();
					this._BranchID = value;
					this.SendPropertyChanged("BranchID");
					this.OnBranchIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="Float")]
		public System.Nullable<double> Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(MAX)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(MAX)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int")]
		public System.Nullable<int> UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RevenueTypeId", DbType="Int")]
		public System.Nullable<int> RevenueTypeId
		{
			get
			{
				return this._RevenueTypeId;
			}
			set
			{
				if ((this._RevenueTypeId != value))
				{
					if (this._RevenueType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRevenueTypeIdChanging(value);
					this.SendPropertyChanging();
					this._RevenueTypeId = value;
					this.SendPropertyChanged("RevenueTypeId");
					this.OnRevenueTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Branch_IncomingExpense", Storage="_Branch", ThisKey="BranchID", OtherKey="ID", IsForeignKey=true)]
		public Branch Branch
		{
			get
			{
				return this._Branch.Entity;
			}
			set
			{
				Branch previousValue = this._Branch.Entity;
				if (((previousValue != value) 
							|| (this._Branch.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Branch.Entity = null;
						previousValue.IncomingExpenses.Remove(this);
					}
					this._Branch.Entity = value;
					if ((value != null))
					{
						value.IncomingExpenses.Add(this);
						this._BranchID = value.ID;
					}
					else
					{
						this._BranchID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Branch");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_IncomingExpense", Storage="_User", ThisKey="UserId", OtherKey="ID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.IncomingExpenses.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.IncomingExpenses.Add(this);
						this._UserId = value.ID;
					}
					else
					{
						this._UserId = default(Nullable<int>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RevenueType_IncomingExpense", Storage="_RevenueType", ThisKey="RevenueTypeId", OtherKey="Id", IsForeignKey=true)]
		public RevenueType RevenueType
		{
			get
			{
				return this._RevenueType.Entity;
			}
			set
			{
				RevenueType previousValue = this._RevenueType.Entity;
				if (((previousValue != value) 
							|| (this._RevenueType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RevenueType.Entity = null;
						previousValue.IncomingExpenses.Remove(this);
					}
					this._RevenueType.Entity = value;
					if ((value != null))
					{
						value.IncomingExpenses.Add(this);
						this._RevenueTypeId = value.Id;
					}
					else
					{
						this._RevenueTypeId = default(Nullable<int>);
					}
					this.SendPropertyChanged("RevenueType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RevenueTypes")]
	public partial class RevenueType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private string _Notes;
		
		private EntitySet<IncomingExpense> _IncomingExpenses;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    #endregion
		
		public RevenueType()
		{
			this._IncomingExpenses = new EntitySet<IncomingExpense>(new Action<IncomingExpense>(this.attach_IncomingExpenses), new Action<IncomingExpense>(this.detach_IncomingExpenses));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(350)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(MAX)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RevenueType_IncomingExpense", Storage="_IncomingExpenses", ThisKey="Id", OtherKey="RevenueTypeId")]
		public EntitySet<IncomingExpense> IncomingExpenses
		{
			get
			{
				return this._IncomingExpenses;
			}
			set
			{
				this._IncomingExpenses.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_IncomingExpenses(IncomingExpense entity)
		{
			this.SendPropertyChanging();
			entity.RevenueType = this;
		}
		
		private void detach_IncomingExpenses(IncomingExpense entity)
		{
			this.SendPropertyChanging();
			entity.RevenueType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CustomerPayment")]
	public partial class CustomerPayment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _BoxId;
		
		private string _CustomerName;
		
		private string _CustomerTelephone;
		
		private decimal _InvoiceAmount;
		
		private string _Notes;
		
		private System.DateTime _Time;
		
		private System.Nullable<int> _VoiceCompanyId;
		
		private System.Nullable<decimal> _BoxAmount;
		
		private System.Nullable<int> _ConfirmerId;
		
		private EntityRef<Box> _Box;
		
		private EntityRef<User> _User;
		
		private EntityRef<VoiceCompany> _VoiceCompany;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnBoxIdChanging(System.Nullable<int> value);
    partial void OnBoxIdChanged();
    partial void OnCustomerNameChanging(string value);
    partial void OnCustomerNameChanged();
    partial void OnCustomerTelephoneChanging(string value);
    partial void OnCustomerTelephoneChanged();
    partial void OnInvoiceAmountChanging(decimal value);
    partial void OnInvoiceAmountChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnTimeChanging(System.DateTime value);
    partial void OnTimeChanged();
    partial void OnVoiceCompanyIdChanging(System.Nullable<int> value);
    partial void OnVoiceCompanyIdChanged();
    partial void OnBoxAmountChanging(System.Nullable<decimal> value);
    partial void OnBoxAmountChanged();
    partial void OnConfirmerIdChanging(System.Nullable<int> value);
    partial void OnConfirmerIdChanged();
    #endregion
		
		public CustomerPayment()
		{
			this._Box = default(EntityRef<Box>);
			this._User = default(EntityRef<User>);
			this._VoiceCompany = default(EntityRef<VoiceCompany>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BoxId", DbType="Int")]
		public System.Nullable<int> BoxId
		{
			get
			{
				return this._BoxId;
			}
			set
			{
				if ((this._BoxId != value))
				{
					if (this._Box.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBoxIdChanging(value);
					this.SendPropertyChanging();
					this._BoxId = value;
					this.SendPropertyChanged("BoxId");
					this.OnBoxIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerName", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string CustomerName
		{
			get
			{
				return this._CustomerName;
			}
			set
			{
				if ((this._CustomerName != value))
				{
					this.OnCustomerNameChanging(value);
					this.SendPropertyChanging();
					this._CustomerName = value;
					this.SendPropertyChanged("CustomerName");
					this.OnCustomerNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerTelephone", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CustomerTelephone
		{
			get
			{
				return this._CustomerTelephone;
			}
			set
			{
				if ((this._CustomerTelephone != value))
				{
					this.OnCustomerTelephoneChanging(value);
					this.SendPropertyChanging();
					this._CustomerTelephone = value;
					this.SendPropertyChanged("CustomerTelephone");
					this.OnCustomerTelephoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceAmount", DbType="Money NOT NULL")]
		public decimal InvoiceAmount
		{
			get
			{
				return this._InvoiceAmount;
			}
			set
			{
				if ((this._InvoiceAmount != value))
				{
					this.OnInvoiceAmountChanging(value);
					this.SendPropertyChanging();
					this._InvoiceAmount = value;
					this.SendPropertyChanged("InvoiceAmount");
					this.OnInvoiceAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(MAX)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time", DbType="DateTime NOT NULL")]
		public System.DateTime Time
		{
			get
			{
				return this._Time;
			}
			set
			{
				if ((this._Time != value))
				{
					this.OnTimeChanging(value);
					this.SendPropertyChanging();
					this._Time = value;
					this.SendPropertyChanged("Time");
					this.OnTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VoiceCompanyId", DbType="Int NOT NULL")]
		public System.Nullable<int> VoiceCompanyId
		{
			get
			{
				return this._VoiceCompanyId;
			}
			set
			{
				if ((this._VoiceCompanyId != value))
				{
					if (this._VoiceCompany.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVoiceCompanyIdChanging(value);
					this.SendPropertyChanging();
					this._VoiceCompanyId = value;
					this.SendPropertyChanged("VoiceCompanyId");
					this.OnVoiceCompanyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BoxAmount", DbType="Money")]
		public System.Nullable<decimal> BoxAmount
		{
			get
			{
				return this._BoxAmount;
			}
			set
			{
				if ((this._BoxAmount != value))
				{
					this.OnBoxAmountChanging(value);
					this.SendPropertyChanging();
					this._BoxAmount = value;
					this.SendPropertyChanged("BoxAmount");
					this.OnBoxAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConfirmerId", DbType="Int")]
		public System.Nullable<int> ConfirmerId
		{
			get
			{
				return this._ConfirmerId;
			}
			set
			{
				if ((this._ConfirmerId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnConfirmerIdChanging(value);
					this.SendPropertyChanging();
					this._ConfirmerId = value;
					this.SendPropertyChanged("ConfirmerId");
					this.OnConfirmerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Box_CustomerPayment", Storage="_Box", ThisKey="BoxId", OtherKey="ID", IsForeignKey=true)]
		public Box Box
		{
			get
			{
				return this._Box.Entity;
			}
			set
			{
				Box previousValue = this._Box.Entity;
				if (((previousValue != value) 
							|| (this._Box.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Box.Entity = null;
						previousValue.CustomerPayments.Remove(this);
					}
					this._Box.Entity = value;
					if ((value != null))
					{
						value.CustomerPayments.Add(this);
						this._BoxId = value.ID;
					}
					else
					{
						this._BoxId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Box");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_CustomerPayment", Storage="_User", ThisKey="ConfirmerId", OtherKey="ID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.CustomerPayments.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.CustomerPayments.Add(this);
						this._ConfirmerId = value.ID;
					}
					else
					{
						this._ConfirmerId = default(Nullable<int>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VoiceCompany_CustomerPayment", Storage="_VoiceCompany", ThisKey="VoiceCompanyId", OtherKey="Id", IsForeignKey=true)]
		public VoiceCompany VoiceCompany
		{
			get
			{
				return this._VoiceCompany.Entity;
			}
			set
			{
				VoiceCompany previousValue = this._VoiceCompany.Entity;
				if (((previousValue != value) 
							|| (this._VoiceCompany.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._VoiceCompany.Entity = null;
						previousValue.CustomerPayments.Remove(this);
					}
					this._VoiceCompany.Entity = value;
					if ((value != null))
					{
						value.CustomerPayments.Add(this);
						this._VoiceCompanyId = value.Id;
					}
					else
					{
						this._VoiceCompanyId = default(Nullable<int>);
					}
					this.SendPropertyChanged("VoiceCompany");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VoiceCompanies")]
	public partial class VoiceCompany : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _CompanyName;
		
		private string _CompanyImage;
		
		private System.Nullable<decimal> _ServiceFees;
		
		private System.Nullable<decimal> _CommissionResellerOrBranch;
		
		private EntitySet<RechargeClientRequest> _RechargeClientRequests;
		
		private EntitySet<RechargeBranchRequest> _RechargeBranchRequests;
		
		private EntitySet<CustomerPayment> _CustomerPayments;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCompanyNameChanging(string value);
    partial void OnCompanyNameChanged();
    partial void OnCompanyImageChanging(string value);
    partial void OnCompanyImageChanged();
    partial void OnServiceFeesChanging(System.Nullable<decimal> value);
    partial void OnServiceFeesChanged();
    partial void OnCommissionResellerOrBranchChanging(System.Nullable<decimal> value);
    partial void OnCommissionResellerOrBranchChanged();
    #endregion
		
		public VoiceCompany()
		{
			this._RechargeClientRequests = new EntitySet<RechargeClientRequest>(new Action<RechargeClientRequest>(this.attach_RechargeClientRequests), new Action<RechargeClientRequest>(this.detach_RechargeClientRequests));
			this._RechargeBranchRequests = new EntitySet<RechargeBranchRequest>(new Action<RechargeBranchRequest>(this.attach_RechargeBranchRequests), new Action<RechargeBranchRequest>(this.detach_RechargeBranchRequests));
			this._CustomerPayments = new EntitySet<CustomerPayment>(new Action<CustomerPayment>(this.attach_CustomerPayments), new Action<CustomerPayment>(this.detach_CustomerPayments));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyName", DbType="NVarChar(150)")]
		public string CompanyName
		{
			get
			{
				return this._CompanyName;
			}
			set
			{
				if ((this._CompanyName != value))
				{
					this.OnCompanyNameChanging(value);
					this.SendPropertyChanging();
					this._CompanyName = value;
					this.SendPropertyChanged("CompanyName");
					this.OnCompanyNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyImage", DbType="NVarChar(150)")]
		public string CompanyImage
		{
			get
			{
				return this._CompanyImage;
			}
			set
			{
				if ((this._CompanyImage != value))
				{
					this.OnCompanyImageChanging(value);
					this.SendPropertyChanging();
					this._CompanyImage = value;
					this.SendPropertyChanged("CompanyImage");
					this.OnCompanyImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceFees", DbType="Money")]
		public System.Nullable<decimal> ServiceFees
		{
			get
			{
				return this._ServiceFees;
			}
			set
			{
				if ((this._ServiceFees != value))
				{
					this.OnServiceFeesChanging(value);
					this.SendPropertyChanging();
					this._ServiceFees = value;
					this.SendPropertyChanged("ServiceFees");
					this.OnServiceFeesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommissionResellerOrBranch", DbType="Money")]
		public System.Nullable<decimal> CommissionResellerOrBranch
		{
			get
			{
				return this._CommissionResellerOrBranch;
			}
			set
			{
				if ((this._CommissionResellerOrBranch != value))
				{
					this.OnCommissionResellerOrBranchChanging(value);
					this.SendPropertyChanging();
					this._CommissionResellerOrBranch = value;
					this.SendPropertyChanged("CommissionResellerOrBranch");
					this.OnCommissionResellerOrBranchChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VoiceCompany_RechargeClientRequest", Storage="_RechargeClientRequests", ThisKey="Id", OtherKey="VoiceCompanyID")]
		public EntitySet<RechargeClientRequest> RechargeClientRequests
		{
			get
			{
				return this._RechargeClientRequests;
			}
			set
			{
				this._RechargeClientRequests.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VoiceCompany_RechargeBranchRequest", Storage="_RechargeBranchRequests", ThisKey="Id", OtherKey="VoiceCompanyId")]
		public EntitySet<RechargeBranchRequest> RechargeBranchRequests
		{
			get
			{
				return this._RechargeBranchRequests;
			}
			set
			{
				this._RechargeBranchRequests.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VoiceCompany_CustomerPayment", Storage="_CustomerPayments", ThisKey="Id", OtherKey="VoiceCompanyId")]
		public EntitySet<CustomerPayment> CustomerPayments
		{
			get
			{
				return this._CustomerPayments;
			}
			set
			{
				this._CustomerPayments.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_RechargeClientRequests(RechargeClientRequest entity)
		{
			this.SendPropertyChanging();
			entity.VoiceCompany = this;
		}
		
		private void detach_RechargeClientRequests(RechargeClientRequest entity)
		{
			this.SendPropertyChanging();
			entity.VoiceCompany = null;
		}
		
		private void attach_RechargeBranchRequests(RechargeBranchRequest entity)
		{
			this.SendPropertyChanging();
			entity.VoiceCompany = this;
		}
		
		private void detach_RechargeBranchRequests(RechargeBranchRequest entity)
		{
			this.SendPropertyChanging();
			entity.VoiceCompany = null;
		}
		
		private void attach_CustomerPayments(CustomerPayment entity)
		{
			this.SendPropertyChanging();
			entity.VoiceCompany = this;
		}
		
		private void detach_CustomerPayments(CustomerPayment entity)
		{
			this.SendPropertyChanging();
			entity.VoiceCompany = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Store")]
	public partial class Store : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _StoreName;
		
		private string _Notes;
		
		private EntitySet<InvoiceHeader> _InvoiceHeaders;
		
		private EntitySet<StoreTransaction> _StoreTransactions;
		
		private EntitySet<RecieveRouter> _RecieveRouters;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnStoreNameChanging(string value);
    partial void OnStoreNameChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    #endregion
		
		public Store()
		{
			this._InvoiceHeaders = new EntitySet<InvoiceHeader>(new Action<InvoiceHeader>(this.attach_InvoiceHeaders), new Action<InvoiceHeader>(this.detach_InvoiceHeaders));
			this._StoreTransactions = new EntitySet<StoreTransaction>(new Action<StoreTransaction>(this.attach_StoreTransactions), new Action<StoreTransaction>(this.detach_StoreTransactions));
			this._RecieveRouters = new EntitySet<RecieveRouter>(new Action<RecieveRouter>(this.attach_RecieveRouters), new Action<RecieveRouter>(this.detach_RecieveRouters));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StoreName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string StoreName
		{
			get
			{
				return this._StoreName;
			}
			set
			{
				if ((this._StoreName != value))
				{
					this.OnStoreNameChanging(value);
					this.SendPropertyChanging();
					this._StoreName = value;
					this.SendPropertyChanged("StoreName");
					this.OnStoreNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(MAX)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Store_InvoiceHeader", Storage="_InvoiceHeaders", ThisKey="Id", OtherKey="StoreId")]
		public EntitySet<InvoiceHeader> InvoiceHeaders
		{
			get
			{
				return this._InvoiceHeaders;
			}
			set
			{
				this._InvoiceHeaders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Store_StoreTransaction", Storage="_StoreTransactions", ThisKey="Id", OtherKey="StoreId")]
		public EntitySet<StoreTransaction> StoreTransactions
		{
			get
			{
				return this._StoreTransactions;
			}
			set
			{
				this._StoreTransactions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Store_RecieveRouter", Storage="_RecieveRouters", ThisKey="Id", OtherKey="StoreId")]
		public EntitySet<RecieveRouter> RecieveRouters
		{
			get
			{
				return this._RecieveRouters;
			}
			set
			{
				this._RecieveRouters.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_InvoiceHeaders(InvoiceHeader entity)
		{
			this.SendPropertyChanging();
			entity.Store = this;
		}
		
		private void detach_InvoiceHeaders(InvoiceHeader entity)
		{
			this.SendPropertyChanging();
			entity.Store = null;
		}
		
		private void attach_StoreTransactions(StoreTransaction entity)
		{
			this.SendPropertyChanging();
			entity.Store = this;
		}
		
		private void detach_StoreTransactions(StoreTransaction entity)
		{
			this.SendPropertyChanging();
			entity.Store = null;
		}
		
		private void attach_RecieveRouters(RecieveRouter entity)
		{
			this.SendPropertyChanging();
			entity.Store = this;
		}
		
		private void detach_RecieveRouters(RecieveRouter entity)
		{
			this.SendPropertyChanging();
			entity.Store = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserSaves")]
	public partial class UserSave : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _SaveId;
		
		private System.Nullable<int> _UserId;
		
		private EntityRef<User> _User;
		
		private EntityRef<Save> _Save;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnSaveIdChanging(System.Nullable<int> value);
    partial void OnSaveIdChanged();
    partial void OnUserIdChanging(System.Nullable<int> value);
    partial void OnUserIdChanged();
    #endregion
		
		public UserSave()
		{
			this._User = default(EntityRef<User>);
			this._Save = default(EntityRef<Save>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SaveId", DbType="Int NOT NULL")]
		public System.Nullable<int> SaveId
		{
			get
			{
				return this._SaveId;
			}
			set
			{
				if ((this._SaveId != value))
				{
					if (this._Save.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSaveIdChanging(value);
					this.SendPropertyChanging();
					this._SaveId = value;
					this.SendPropertyChanged("SaveId");
					this.OnSaveIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL")]
		public System.Nullable<int> UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserSave", Storage="_User", ThisKey="UserId", OtherKey="ID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.UserSaves.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.UserSaves.Add(this);
						this._UserId = value.ID;
					}
					else
					{
						this._UserId = default(Nullable<int>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Save_UserSave", Storage="_Save", ThisKey="SaveId", OtherKey="Id", IsForeignKey=true)]
		public Save Save
		{
			get
			{
				return this._Save.Entity;
			}
			set
			{
				Save previousValue = this._Save.Entity;
				if (((previousValue != value) 
							|| (this._Save.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Save.Entity = null;
						previousValue.UserSaves.Remove(this);
					}
					this._Save.Entity = value;
					if ((value != null))
					{
						value.UserSaves.Add(this);
						this._SaveId = value.Id;
					}
					else
					{
						this._SaveId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Save");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserSavesHistory")]
	public partial class UserSavesHistory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _SaveId;
		
		private System.Nullable<decimal> _amount;
		
		private System.Nullable<int> _ConfirmerUserId;
		
		private System.Nullable<System.DateTime> _Time;
		
		private string _Notes;
		
		private string _Notes2;
		
		private EntityRef<User> _User;
		
		private EntityRef<Save> _Save;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnSaveIdChanging(int value);
    partial void OnSaveIdChanged();
    partial void OnamountChanging(System.Nullable<decimal> value);
    partial void OnamountChanged();
    partial void OnConfirmerUserIdChanging(System.Nullable<int> value);
    partial void OnConfirmerUserIdChanged();
    partial void OnTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnTimeChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnNotes2Changing(string value);
    partial void OnNotes2Changed();
    #endregion
		
		public UserSavesHistory()
		{
			this._User = default(EntityRef<User>);
			this._Save = default(EntityRef<Save>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SaveId", DbType="Int NOT NULL")]
		public int SaveId
		{
			get
			{
				return this._SaveId;
			}
			set
			{
				if ((this._SaveId != value))
				{
					if (this._Save.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSaveIdChanging(value);
					this.SendPropertyChanging();
					this._SaveId = value;
					this.SendPropertyChanged("SaveId");
					this.OnSaveIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_amount", DbType="Decimal(18,3)")]
		public System.Nullable<decimal> amount
		{
			get
			{
				return this._amount;
			}
			set
			{
				if ((this._amount != value))
				{
					this.OnamountChanging(value);
					this.SendPropertyChanging();
					this._amount = value;
					this.SendPropertyChanged("amount");
					this.OnamountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConfirmerUserId", DbType="Int")]
		public System.Nullable<int> ConfirmerUserId
		{
			get
			{
				return this._ConfirmerUserId;
			}
			set
			{
				if ((this._ConfirmerUserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnConfirmerUserIdChanging(value);
					this.SendPropertyChanging();
					this._ConfirmerUserId = value;
					this.SendPropertyChanged("ConfirmerUserId");
					this.OnConfirmerUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time", DbType="DateTime")]
		public System.Nullable<System.DateTime> Time
		{
			get
			{
				return this._Time;
			}
			set
			{
				if ((this._Time != value))
				{
					this.OnTimeChanging(value);
					this.SendPropertyChanging();
					this._Time = value;
					this.SendPropertyChanged("Time");
					this.OnTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(MAX)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes2", DbType="NVarChar(MAX)")]
		public string Notes2
		{
			get
			{
				return this._Notes2;
			}
			set
			{
				if ((this._Notes2 != value))
				{
					this.OnNotes2Changing(value);
					this.SendPropertyChanging();
					this._Notes2 = value;
					this.SendPropertyChanged("Notes2");
					this.OnNotes2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserSavesHistory", Storage="_User", ThisKey="ConfirmerUserId", OtherKey="ID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.UserSavesHistories.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.UserSavesHistories.Add(this);
						this._ConfirmerUserId = value.ID;
					}
					else
					{
						this._ConfirmerUserId = default(Nullable<int>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Save_UserSavesHistory", Storage="_Save", ThisKey="SaveId", OtherKey="Id", IsForeignKey=true)]
		public Save Save
		{
			get
			{
				return this._Save.Entity;
			}
			set
			{
				Save previousValue = this._Save.Entity;
				if (((previousValue != value) 
							|| (this._Save.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Save.Entity = null;
						previousValue.UserSavesHistories.Remove(this);
					}
					this._Save.Entity = value;
					if ((value != null))
					{
						value.UserSavesHistories.Add(this);
						this._SaveId = value.Id;
					}
					else
					{
						this._SaveId = default(int);
					}
					this.SendPropertyChanged("Save");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Saves")]
	public partial class Save : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _SaveName;
		
		private System.Nullable<decimal> _Total;
		
		private int _BranchId;
		
		private EntitySet<UserSave> _UserSaves;
		
		private EntitySet<UserSavesHistory> _UserSavesHistories;
		
		private EntitySet<TransferBetweenSavesRequest> _TransferBetweenSavesRequests;
		
		private EntitySet<TransferBetweenSavesRequest> _TransferBetweenSavesRequests1;
		
		private EntityRef<Branch> _Branch;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnSaveNameChanging(string value);
    partial void OnSaveNameChanged();
    partial void OnTotalChanging(System.Nullable<decimal> value);
    partial void OnTotalChanged();
    partial void OnBranchIdChanging(int value);
    partial void OnBranchIdChanged();
    #endregion
		
		public Save()
		{
			this._UserSaves = new EntitySet<UserSave>(new Action<UserSave>(this.attach_UserSaves), new Action<UserSave>(this.detach_UserSaves));
			this._UserSavesHistories = new EntitySet<UserSavesHistory>(new Action<UserSavesHistory>(this.attach_UserSavesHistories), new Action<UserSavesHistory>(this.detach_UserSavesHistories));
			this._TransferBetweenSavesRequests = new EntitySet<TransferBetweenSavesRequest>(new Action<TransferBetweenSavesRequest>(this.attach_TransferBetweenSavesRequests), new Action<TransferBetweenSavesRequest>(this.detach_TransferBetweenSavesRequests));
			this._TransferBetweenSavesRequests1 = new EntitySet<TransferBetweenSavesRequest>(new Action<TransferBetweenSavesRequest>(this.attach_TransferBetweenSavesRequests1), new Action<TransferBetweenSavesRequest>(this.detach_TransferBetweenSavesRequests1));
			this._Branch = default(EntityRef<Branch>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SaveName", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string SaveName
		{
			get
			{
				return this._SaveName;
			}
			set
			{
				if ((this._SaveName != value))
				{
					this.OnSaveNameChanging(value);
					this.SendPropertyChanging();
					this._SaveName = value;
					this.SendPropertyChanged("SaveName");
					this.OnSaveNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Total", DbType="Decimal(18,3)")]
		public System.Nullable<decimal> Total
		{
			get
			{
				return this._Total;
			}
			set
			{
				if ((this._Total != value))
				{
					this.OnTotalChanging(value);
					this.SendPropertyChanging();
					this._Total = value;
					this.SendPropertyChanged("Total");
					this.OnTotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchId", DbType="Int NOT NULL")]
		public int BranchId
		{
			get
			{
				return this._BranchId;
			}
			set
			{
				if ((this._BranchId != value))
				{
					if (this._Branch.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBranchIdChanging(value);
					this.SendPropertyChanging();
					this._BranchId = value;
					this.SendPropertyChanged("BranchId");
					this.OnBranchIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Save_UserSave", Storage="_UserSaves", ThisKey="Id", OtherKey="SaveId")]
		public EntitySet<UserSave> UserSaves
		{
			get
			{
				return this._UserSaves;
			}
			set
			{
				this._UserSaves.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Save_UserSavesHistory", Storage="_UserSavesHistories", ThisKey="Id", OtherKey="SaveId")]
		public EntitySet<UserSavesHistory> UserSavesHistories
		{
			get
			{
				return this._UserSavesHistories;
			}
			set
			{
				this._UserSavesHistories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Save_TransferBetweenSavesRequest", Storage="_TransferBetweenSavesRequests", ThisKey="Id", OtherKey="FromSave")]
		public EntitySet<TransferBetweenSavesRequest> TransferBetweenSavesRequests
		{
			get
			{
				return this._TransferBetweenSavesRequests;
			}
			set
			{
				this._TransferBetweenSavesRequests.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Save_TransferBetweenSavesRequest1", Storage="_TransferBetweenSavesRequests1", ThisKey="Id", OtherKey="ToSave")]
		public EntitySet<TransferBetweenSavesRequest> TransferBetweenSavesRequests1
		{
			get
			{
				return this._TransferBetweenSavesRequests1;
			}
			set
			{
				this._TransferBetweenSavesRequests1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Branch_Save", Storage="_Branch", ThisKey="BranchId", OtherKey="ID", IsForeignKey=true)]
		public Branch Branch
		{
			get
			{
				return this._Branch.Entity;
			}
			set
			{
				Branch previousValue = this._Branch.Entity;
				if (((previousValue != value) 
							|| (this._Branch.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Branch.Entity = null;
						previousValue.Saves.Remove(this);
					}
					this._Branch.Entity = value;
					if ((value != null))
					{
						value.Saves.Add(this);
						this._BranchId = value.ID;
					}
					else
					{
						this._BranchId = default(int);
					}
					this.SendPropertyChanged("Branch");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_UserSaves(UserSave entity)
		{
			this.SendPropertyChanging();
			entity.Save = this;
		}
		
		private void detach_UserSaves(UserSave entity)
		{
			this.SendPropertyChanging();
			entity.Save = null;
		}
		
		private void attach_UserSavesHistories(UserSavesHistory entity)
		{
			this.SendPropertyChanging();
			entity.Save = this;
		}
		
		private void detach_UserSavesHistories(UserSavesHistory entity)
		{
			this.SendPropertyChanging();
			entity.Save = null;
		}
		
		private void attach_TransferBetweenSavesRequests(TransferBetweenSavesRequest entity)
		{
			this.SendPropertyChanging();
			entity.Save = this;
		}
		
		private void detach_TransferBetweenSavesRequests(TransferBetweenSavesRequest entity)
		{
			this.SendPropertyChanging();
			entity.Save = null;
		}
		
		private void attach_TransferBetweenSavesRequests1(TransferBetweenSavesRequest entity)
		{
			this.SendPropertyChanging();
			entity.Save1 = this;
		}
		
		private void detach_TransferBetweenSavesRequests1(TransferBetweenSavesRequest entity)
		{
			this.SendPropertyChanging();
			entity.Save1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CompareTEData")]
	public partial class CompareTEData : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _CustomerNumber;
		
		private string _CustomerName;
		
		private string _PackageName;
		
		private string _NetAmout;
		
		private string _StartAt;
		
		private string _EndAt;
		
		private string _Description;
		
		private string _PhoneNumber;
		
		private string _Exchange;
		
		private string _OurAmount;
		
		private string _OurStartAt;
		
		private string _OurEndAt;
		
		private System.Nullable<bool> _IsDiffrent;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCustomerNumberChanging(string value);
    partial void OnCustomerNumberChanged();
    partial void OnCustomerNameChanging(string value);
    partial void OnCustomerNameChanged();
    partial void OnPackageNameChanging(string value);
    partial void OnPackageNameChanged();
    partial void OnNetAmoutChanging(string value);
    partial void OnNetAmoutChanged();
    partial void OnStartAtChanging(string value);
    partial void OnStartAtChanged();
    partial void OnEndAtChanging(string value);
    partial void OnEndAtChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnPhoneNumberChanging(string value);
    partial void OnPhoneNumberChanged();
    partial void OnExchangeChanging(string value);
    partial void OnExchangeChanged();
    partial void OnOurAmountChanging(string value);
    partial void OnOurAmountChanged();
    partial void OnOurStartAtChanging(string value);
    partial void OnOurStartAtChanged();
    partial void OnOurEndAtChanging(string value);
    partial void OnOurEndAtChanged();
    partial void OnIsDiffrentChanging(System.Nullable<bool> value);
    partial void OnIsDiffrentChanged();
    #endregion
		
		public CompareTEData()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerNumber", DbType="NVarChar(250)")]
		public string CustomerNumber
		{
			get
			{
				return this._CustomerNumber;
			}
			set
			{
				if ((this._CustomerNumber != value))
				{
					this.OnCustomerNumberChanging(value);
					this.SendPropertyChanging();
					this._CustomerNumber = value;
					this.SendPropertyChanged("CustomerNumber");
					this.OnCustomerNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerName", DbType="NVarChar(250)")]
		public string CustomerName
		{
			get
			{
				return this._CustomerName;
			}
			set
			{
				if ((this._CustomerName != value))
				{
					this.OnCustomerNameChanging(value);
					this.SendPropertyChanging();
					this._CustomerName = value;
					this.SendPropertyChanged("CustomerName");
					this.OnCustomerNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PackageName", DbType="NVarChar(250)")]
		public string PackageName
		{
			get
			{
				return this._PackageName;
			}
			set
			{
				if ((this._PackageName != value))
				{
					this.OnPackageNameChanging(value);
					this.SendPropertyChanging();
					this._PackageName = value;
					this.SendPropertyChanged("PackageName");
					this.OnPackageNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NetAmout", DbType="NVarChar(250)")]
		public string NetAmout
		{
			get
			{
				return this._NetAmout;
			}
			set
			{
				if ((this._NetAmout != value))
				{
					this.OnNetAmoutChanging(value);
					this.SendPropertyChanging();
					this._NetAmout = value;
					this.SendPropertyChanged("NetAmout");
					this.OnNetAmoutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartAt", DbType="NVarChar(250)")]
		public string StartAt
		{
			get
			{
				return this._StartAt;
			}
			set
			{
				if ((this._StartAt != value))
				{
					this.OnStartAtChanging(value);
					this.SendPropertyChanging();
					this._StartAt = value;
					this.SendPropertyChanged("StartAt");
					this.OnStartAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndAt", DbType="NVarChar(250)")]
		public string EndAt
		{
			get
			{
				return this._EndAt;
			}
			set
			{
				if ((this._EndAt != value))
				{
					this.OnEndAtChanging(value);
					this.SendPropertyChanging();
					this._EndAt = value;
					this.SendPropertyChanged("EndAt");
					this.OnEndAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(250)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumber", DbType="NVarChar(250)")]
		public string PhoneNumber
		{
			get
			{
				return this._PhoneNumber;
			}
			set
			{
				if ((this._PhoneNumber != value))
				{
					this.OnPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._PhoneNumber = value;
					this.SendPropertyChanged("PhoneNumber");
					this.OnPhoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Exchange", DbType="NVarChar(250)")]
		public string Exchange
		{
			get
			{
				return this._Exchange;
			}
			set
			{
				if ((this._Exchange != value))
				{
					this.OnExchangeChanging(value);
					this.SendPropertyChanging();
					this._Exchange = value;
					this.SendPropertyChanged("Exchange");
					this.OnExchangeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OurAmount", DbType="NVarChar(250)")]
		public string OurAmount
		{
			get
			{
				return this._OurAmount;
			}
			set
			{
				if ((this._OurAmount != value))
				{
					this.OnOurAmountChanging(value);
					this.SendPropertyChanging();
					this._OurAmount = value;
					this.SendPropertyChanged("OurAmount");
					this.OnOurAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OurStartAt", DbType="NVarChar(250)")]
		public string OurStartAt
		{
			get
			{
				return this._OurStartAt;
			}
			set
			{
				if ((this._OurStartAt != value))
				{
					this.OnOurStartAtChanging(value);
					this.SendPropertyChanging();
					this._OurStartAt = value;
					this.SendPropertyChanged("OurStartAt");
					this.OnOurStartAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OurEndAt", DbType="NVarChar(250)")]
		public string OurEndAt
		{
			get
			{
				return this._OurEndAt;
			}
			set
			{
				if ((this._OurEndAt != value))
				{
					this.OnOurEndAtChanging(value);
					this.SendPropertyChanging();
					this._OurEndAt = value;
					this.SendPropertyChanged("OurEndAt");
					this.OnOurEndAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDiffrent", DbType="Bit")]
		public System.Nullable<bool> IsDiffrent
		{
			get
			{
				return this._IsDiffrent;
			}
			set
			{
				if ((this._IsDiffrent != value))
				{
					this.OnIsDiffrentChanging(value);
					this.SendPropertyChanging();
					this._IsDiffrent = value;
					this.SendPropertyChanged("IsDiffrent");
					this.OnIsDiffrentChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CallMessages")]
	public partial class CallMessage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _MessageText;
		
		private int _User_Id;
		
		private int _WorkOrder_Id;
		
		private System.DateTime _Date;
		
		private EntityRef<User> _User;
		
		private EntityRef<WorkOrder> _WorkOrder;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnMessageTextChanging(string value);
    partial void OnMessageTextChanged();
    partial void OnUser_IdChanging(int value);
    partial void OnUser_IdChanged();
    partial void OnWorkOrder_IdChanging(int value);
    partial void OnWorkOrder_IdChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    #endregion
		
		public CallMessage()
		{
			this._User = default(EntityRef<User>);
			this._WorkOrder = default(EntityRef<WorkOrder>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MessageText", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string MessageText
		{
			get
			{
				return this._MessageText;
			}
			set
			{
				if ((this._MessageText != value))
				{
					this.OnMessageTextChanging(value);
					this.SendPropertyChanging();
					this._MessageText = value;
					this.SendPropertyChanged("MessageText");
					this.OnMessageTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_Id", DbType="Int NOT NULL")]
		public int User_Id
		{
			get
			{
				return this._User_Id;
			}
			set
			{
				if ((this._User_Id != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUser_IdChanging(value);
					this.SendPropertyChanging();
					this._User_Id = value;
					this.SendPropertyChanged("User_Id");
					this.OnUser_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkOrder_Id", DbType="Int NOT NULL")]
		public int WorkOrder_Id
		{
			get
			{
				return this._WorkOrder_Id;
			}
			set
			{
				if ((this._WorkOrder_Id != value))
				{
					if (this._WorkOrder.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWorkOrder_IdChanging(value);
					this.SendPropertyChanging();
					this._WorkOrder_Id = value;
					this.SendPropertyChanged("WorkOrder_Id");
					this.OnWorkOrder_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_CallMessage", Storage="_User", ThisKey="User_Id", OtherKey="ID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.CallMessages.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.CallMessages.Add(this);
						this._User_Id = value.ID;
					}
					else
					{
						this._User_Id = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WorkOrder_CallMessage", Storage="_WorkOrder", ThisKey="WorkOrder_Id", OtherKey="ID", IsForeignKey=true)]
		public WorkOrder WorkOrder
		{
			get
			{
				return this._WorkOrder.Entity;
			}
			set
			{
				WorkOrder previousValue = this._WorkOrder.Entity;
				if (((previousValue != value) 
							|| (this._WorkOrder.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WorkOrder.Entity = null;
						previousValue.CallMessages.Remove(this);
					}
					this._WorkOrder.Entity = value;
					if ((value != null))
					{
						value.CallMessages.Add(this);
						this._WorkOrder_Id = value.ID;
					}
					else
					{
						this._WorkOrder_Id = default(int);
					}
					this.SendPropertyChanged("WorkOrder");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PayingCustomersReseller")]
	public partial class PayingCustomersReseller : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _DemandId;
		
		private System.DateTime _Date;
		
		private int _ResellerId;
		
		private EntityRef<Demand> _Demand;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnDemandIdChanging(int value);
    partial void OnDemandIdChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnResellerIdChanging(int value);
    partial void OnResellerIdChanged();
    #endregion
		
		public PayingCustomersReseller()
		{
			this._Demand = default(EntityRef<Demand>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DemandId", DbType="Int NOT NULL")]
		public int DemandId
		{
			get
			{
				return this._DemandId;
			}
			set
			{
				if ((this._DemandId != value))
				{
					if (this._Demand.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDemandIdChanging(value);
					this.SendPropertyChanging();
					this._DemandId = value;
					this.SendPropertyChanged("DemandId");
					this.OnDemandIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResellerId", DbType="Int NOT NULL")]
		public int ResellerId
		{
			get
			{
				return this._ResellerId;
			}
			set
			{
				if ((this._ResellerId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnResellerIdChanging(value);
					this.SendPropertyChanging();
					this._ResellerId = value;
					this.SendPropertyChanged("ResellerId");
					this.OnResellerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Demand_PayingCustomersReseller", Storage="_Demand", ThisKey="DemandId", OtherKey="Id", IsForeignKey=true)]
		public Demand Demand
		{
			get
			{
				return this._Demand.Entity;
			}
			set
			{
				Demand previousValue = this._Demand.Entity;
				if (((previousValue != value) 
							|| (this._Demand.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Demand.Entity = null;
						previousValue.PayingCustomersResellers.Remove(this);
					}
					this._Demand.Entity = value;
					if ((value != null))
					{
						value.PayingCustomersResellers.Add(this);
						this._DemandId = value.Id;
					}
					else
					{
						this._DemandId = default(int);
					}
					this.SendPropertyChanged("Demand");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_PayingCustomersReseller", Storage="_User", ThisKey="ResellerId", OtherKey="ID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.PayingCustomersResellers.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.PayingCustomersResellers.Add(this);
						this._ResellerId = value.ID;
					}
					else
					{
						this._ResellerId = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UsersTransactions")]
	public partial class UsersTransaction : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _ID;
		
		private System.Nullable<int> _WorkOrderID;
		
		private System.Nullable<int> _ResellerID;
		
		private System.Nullable<int> _BranchID;
		
		private System.Nullable<double> _DepitAmmount;
		
		private System.Nullable<double> _CreditAmmount;
		
		private System.Nullable<System.DateTime> _CreationDate;
		
		private System.Nullable<double> _Total;
		
		private System.Nullable<bool> _IsInvoice;
		
		private System.Nullable<bool> _IsPaid;
		
		private string _Description;
		
		private string _FileName;
		
		private string _VirtualName;
		
		private string _Notes;
		
		private System.Nullable<int> _UserId;
		
		private string _FileUrl;
		
		private EntitySet<Receipt> _Receipts;
		
		private EntityRef<Branch> _Branch;
		
		private EntityRef<User> _User;
		
		private EntityRef<User> _User1;
		
		private EntityRef<WorkOrder> _WorkOrder;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(decimal value);
    partial void OnIDChanged();
    partial void OnWorkOrderIDChanging(System.Nullable<int> value);
    partial void OnWorkOrderIDChanged();
    partial void OnResellerIDChanging(System.Nullable<int> value);
    partial void OnResellerIDChanged();
    partial void OnBranchIDChanging(System.Nullable<int> value);
    partial void OnBranchIDChanged();
    partial void OnDepitAmmountChanging(System.Nullable<double> value);
    partial void OnDepitAmmountChanged();
    partial void OnCreditAmmountChanging(System.Nullable<double> value);
    partial void OnCreditAmmountChanged();
    partial void OnCreationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreationDateChanged();
    partial void OnTotalChanging(System.Nullable<double> value);
    partial void OnTotalChanged();
    partial void OnIsInvoiceChanging(System.Nullable<bool> value);
    partial void OnIsInvoiceChanged();
    partial void OnIsPaidChanging(System.Nullable<bool> value);
    partial void OnIsPaidChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnFileNameChanging(string value);
    partial void OnFileNameChanged();
    partial void OnVirtualNameChanging(string value);
    partial void OnVirtualNameChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnUserIdChanging(System.Nullable<int> value);
    partial void OnUserIdChanged();
    partial void OnFileUrlChanging(string value);
    partial void OnFileUrlChanged();
    #endregion
		
		public UsersTransaction()
		{
			this._Receipts = new EntitySet<Receipt>(new Action<Receipt>(this.attach_Receipts), new Action<Receipt>(this.detach_Receipts));
			this._Branch = default(EntityRef<Branch>);
			this._User = default(EntityRef<User>);
			this._User1 = default(EntityRef<User>);
			this._WorkOrder = default(EntityRef<WorkOrder>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public decimal ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkOrderID", DbType="Int")]
		public System.Nullable<int> WorkOrderID
		{
			get
			{
				return this._WorkOrderID;
			}
			set
			{
				if ((this._WorkOrderID != value))
				{
					if (this._WorkOrder.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWorkOrderIDChanging(value);
					this.SendPropertyChanging();
					this._WorkOrderID = value;
					this.SendPropertyChanged("WorkOrderID");
					this.OnWorkOrderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResellerID", DbType="Int")]
		public System.Nullable<int> ResellerID
		{
			get
			{
				return this._ResellerID;
			}
			set
			{
				if ((this._ResellerID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnResellerIDChanging(value);
					this.SendPropertyChanging();
					this._ResellerID = value;
					this.SendPropertyChanged("ResellerID");
					this.OnResellerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchID", DbType="Int")]
		public System.Nullable<int> BranchID
		{
			get
			{
				return this._BranchID;
			}
			set
			{
				if ((this._BranchID != value))
				{
					if (this._Branch.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBranchIDChanging(value);
					this.SendPropertyChanging();
					this._BranchID = value;
					this.SendPropertyChanged("BranchID");
					this.OnBranchIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepitAmmount", DbType="Float")]
		public System.Nullable<double> DepitAmmount
		{
			get
			{
				return this._DepitAmmount;
			}
			set
			{
				if ((this._DepitAmmount != value))
				{
					this.OnDepitAmmountChanging(value);
					this.SendPropertyChanging();
					this._DepitAmmount = value;
					this.SendPropertyChanged("DepitAmmount");
					this.OnDepitAmmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreditAmmount", DbType="Float")]
		public System.Nullable<double> CreditAmmount
		{
			get
			{
				return this._CreditAmmount;
			}
			set
			{
				if ((this._CreditAmmount != value))
				{
					this.OnCreditAmmountChanging(value);
					this.SendPropertyChanging();
					this._CreditAmmount = value;
					this.SendPropertyChanged("CreditAmmount");
					this.OnCreditAmmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Total", DbType="Float")]
		public System.Nullable<double> Total
		{
			get
			{
				return this._Total;
			}
			set
			{
				if ((this._Total != value))
				{
					this.OnTotalChanging(value);
					this.SendPropertyChanging();
					this._Total = value;
					this.SendPropertyChanged("Total");
					this.OnTotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsInvoice", DbType="Bit")]
		public System.Nullable<bool> IsInvoice
		{
			get
			{
				return this._IsInvoice;
			}
			set
			{
				if ((this._IsInvoice != value))
				{
					this.OnIsInvoiceChanging(value);
					this.SendPropertyChanging();
					this._IsInvoice = value;
					this.SendPropertyChanged("IsInvoice");
					this.OnIsInvoiceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPaid", DbType="Bit")]
		public System.Nullable<bool> IsPaid
		{
			get
			{
				return this._IsPaid;
			}
			set
			{
				if ((this._IsPaid != value))
				{
					this.OnIsPaidChanging(value);
					this.SendPropertyChanging();
					this._IsPaid = value;
					this.SendPropertyChanged("IsPaid");
					this.OnIsPaidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(255)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileName", DbType="NVarChar(255)")]
		public string FileName
		{
			get
			{
				return this._FileName;
			}
			set
			{
				if ((this._FileName != value))
				{
					this.OnFileNameChanging(value);
					this.SendPropertyChanging();
					this._FileName = value;
					this.SendPropertyChanged("FileName");
					this.OnFileNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VirtualName", DbType="NVarChar(255)")]
		public string VirtualName
		{
			get
			{
				return this._VirtualName;
			}
			set
			{
				if ((this._VirtualName != value))
				{
					this.OnVirtualNameChanging(value);
					this.SendPropertyChanging();
					this._VirtualName = value;
					this.SendPropertyChanged("VirtualName");
					this.OnVirtualNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(MAX)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int")]
		public System.Nullable<int> UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._User1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileUrl", DbType="NVarChar(555)")]
		public string FileUrl
		{
			get
			{
				return this._FileUrl;
			}
			set
			{
				if ((this._FileUrl != value))
				{
					this.OnFileUrlChanging(value);
					this.SendPropertyChanging();
					this._FileUrl = value;
					this.SendPropertyChanged("FileUrl");
					this.OnFileUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UsersTransaction_Receipt", Storage="_Receipts", ThisKey="ID", OtherKey="UserTransationID")]
		public EntitySet<Receipt> Receipts
		{
			get
			{
				return this._Receipts;
			}
			set
			{
				this._Receipts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Branch_UsersTransaction", Storage="_Branch", ThisKey="BranchID", OtherKey="ID", IsForeignKey=true)]
		public Branch Branch
		{
			get
			{
				return this._Branch.Entity;
			}
			set
			{
				Branch previousValue = this._Branch.Entity;
				if (((previousValue != value) 
							|| (this._Branch.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Branch.Entity = null;
						previousValue.UsersTransactions.Remove(this);
					}
					this._Branch.Entity = value;
					if ((value != null))
					{
						value.UsersTransactions.Add(this);
						this._BranchID = value.ID;
					}
					else
					{
						this._BranchID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Branch");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UsersTransaction", Storage="_User", ThisKey="ResellerID", OtherKey="ID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.UsersTransactions.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.UsersTransactions.Add(this);
						this._ResellerID = value.ID;
					}
					else
					{
						this._ResellerID = default(Nullable<int>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UsersTransaction1", Storage="_User1", ThisKey="UserId", OtherKey="ID", IsForeignKey=true)]
		public User User1
		{
			get
			{
				return this._User1.Entity;
			}
			set
			{
				User previousValue = this._User1.Entity;
				if (((previousValue != value) 
							|| (this._User1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User1.Entity = null;
						previousValue.UsersTransactions1.Remove(this);
					}
					this._User1.Entity = value;
					if ((value != null))
					{
						value.UsersTransactions1.Add(this);
						this._UserId = value.ID;
					}
					else
					{
						this._UserId = default(Nullable<int>);
					}
					this.SendPropertyChanged("User1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WorkOrder_UsersTransaction", Storage="_WorkOrder", ThisKey="WorkOrderID", OtherKey="ID", IsForeignKey=true)]
		public WorkOrder WorkOrder
		{
			get
			{
				return this._WorkOrder.Entity;
			}
			set
			{
				WorkOrder previousValue = this._WorkOrder.Entity;
				if (((previousValue != value) 
							|| (this._WorkOrder.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WorkOrder.Entity = null;
						previousValue.UsersTransactions.Remove(this);
					}
					this._WorkOrder.Entity = value;
					if ((value != null))
					{
						value.UsersTransactions.Add(this);
						this._WorkOrderID = value.ID;
					}
					else
					{
						this._WorkOrderID = default(Nullable<int>);
					}
					this.SendPropertyChanged("WorkOrder");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Receipts(Receipt entity)
		{
			this.SendPropertyChanging();
			entity.UsersTransaction = this;
		}
		
		private void detach_Receipts(Receipt entity)
		{
			this.SendPropertyChanging();
			entity.UsersTransaction = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OptionSuspendProvider")]
	public partial class OptionSuspendProvider : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _ProviderId;
		
		private EntityRef<ServiceProvider> _ServiceProvider;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnProviderIdChanging(System.Nullable<int> value);
    partial void OnProviderIdChanged();
    #endregion
		
		public OptionSuspendProvider()
		{
			this._ServiceProvider = default(EntityRef<ServiceProvider>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProviderId", DbType="Int")]
		public System.Nullable<int> ProviderId
		{
			get
			{
				return this._ProviderId;
			}
			set
			{
				if ((this._ProviderId != value))
				{
					if (this._ServiceProvider.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProviderIdChanging(value);
					this.SendPropertyChanging();
					this._ProviderId = value;
					this.SendPropertyChanged("ProviderId");
					this.OnProviderIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ServiceProvider_OptionSuspendProvider", Storage="_ServiceProvider", ThisKey="ProviderId", OtherKey="ID", IsForeignKey=true)]
		public ServiceProvider ServiceProvider
		{
			get
			{
				return this._ServiceProvider.Entity;
			}
			set
			{
				ServiceProvider previousValue = this._ServiceProvider.Entity;
				if (((previousValue != value) 
							|| (this._ServiceProvider.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ServiceProvider.Entity = null;
						previousValue.OptionSuspendProviders.Remove(this);
					}
					this._ServiceProvider.Entity = value;
					if ((value != null))
					{
						value.OptionSuspendProviders.Add(this);
						this._ProviderId = value.ID;
					}
					else
					{
						this._ProviderId = default(Nullable<int>);
					}
					this.SendPropertyChanged("ServiceProvider");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RequestDateHistory")]
	public partial class RequestDateHistory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _UserId;
		
		private int _WorkOrderId;
		
		private System.Nullable<System.DateTime> _oldRequestDate;
		
		private System.Nullable<System.DateTime> _newRequestDate;
		
		private System.Nullable<System.DateTime> _ChangeDate;
		
		private EntityRef<User> _User;
		
		private EntityRef<WorkOrder> _WorkOrder;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnWorkOrderIdChanging(int value);
    partial void OnWorkOrderIdChanged();
    partial void OnoldRequestDateChanging(System.Nullable<System.DateTime> value);
    partial void OnoldRequestDateChanged();
    partial void OnnewRequestDateChanging(System.Nullable<System.DateTime> value);
    partial void OnnewRequestDateChanged();
    partial void OnChangeDateChanging(System.Nullable<System.DateTime> value);
    partial void OnChangeDateChanged();
    #endregion
		
		public RequestDateHistory()
		{
			this._User = default(EntityRef<User>);
			this._WorkOrder = default(EntityRef<WorkOrder>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL")]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkOrderId", DbType="Int NOT NULL")]
		public int WorkOrderId
		{
			get
			{
				return this._WorkOrderId;
			}
			set
			{
				if ((this._WorkOrderId != value))
				{
					if (this._WorkOrder.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWorkOrderIdChanging(value);
					this.SendPropertyChanging();
					this._WorkOrderId = value;
					this.SendPropertyChanged("WorkOrderId");
					this.OnWorkOrderIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_oldRequestDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> oldRequestDate
		{
			get
			{
				return this._oldRequestDate;
			}
			set
			{
				if ((this._oldRequestDate != value))
				{
					this.OnoldRequestDateChanging(value);
					this.SendPropertyChanging();
					this._oldRequestDate = value;
					this.SendPropertyChanged("oldRequestDate");
					this.OnoldRequestDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_newRequestDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> newRequestDate
		{
			get
			{
				return this._newRequestDate;
			}
			set
			{
				if ((this._newRequestDate != value))
				{
					this.OnnewRequestDateChanging(value);
					this.SendPropertyChanging();
					this._newRequestDate = value;
					this.SendPropertyChanged("newRequestDate");
					this.OnnewRequestDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangeDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ChangeDate
		{
			get
			{
				return this._ChangeDate;
			}
			set
			{
				if ((this._ChangeDate != value))
				{
					this.OnChangeDateChanging(value);
					this.SendPropertyChanging();
					this._ChangeDate = value;
					this.SendPropertyChanged("ChangeDate");
					this.OnChangeDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_RequestDateHistory", Storage="_User", ThisKey="UserId", OtherKey="ID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.RequestDateHistories.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.RequestDateHistories.Add(this);
						this._UserId = value.ID;
					}
					else
					{
						this._UserId = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WorkOrder_RequestDateHistory", Storage="_WorkOrder", ThisKey="WorkOrderId", OtherKey="ID", IsForeignKey=true)]
		public WorkOrder WorkOrder
		{
			get
			{
				return this._WorkOrder.Entity;
			}
			set
			{
				WorkOrder previousValue = this._WorkOrder.Entity;
				if (((previousValue != value) 
							|| (this._WorkOrder.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WorkOrder.Entity = null;
						previousValue.RequestDateHistories.Remove(this);
					}
					this._WorkOrder.Entity = value;
					if ((value != null))
					{
						value.RequestDateHistories.Add(this);
						this._WorkOrderId = value.ID;
					}
					else
					{
						this._WorkOrderId = default(int);
					}
					this.SendPropertyChanged("WorkOrder");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InvoiceTypes")]
	public partial class InvoiceType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _TypeName;
		
		private EntitySet<InvoiceHeader> _InvoiceHeaders;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTypeNameChanging(string value);
    partial void OnTypeNameChanged();
    #endregion
		
		public InvoiceType()
		{
			this._InvoiceHeaders = new EntitySet<InvoiceHeader>(new Action<InvoiceHeader>(this.attach_InvoiceHeaders), new Action<InvoiceHeader>(this.detach_InvoiceHeaders));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeName", DbType="NVarChar(150)")]
		public string TypeName
		{
			get
			{
				return this._TypeName;
			}
			set
			{
				if ((this._TypeName != value))
				{
					this.OnTypeNameChanging(value);
					this.SendPropertyChanging();
					this._TypeName = value;
					this.SendPropertyChanged("TypeName");
					this.OnTypeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InvoiceType_InvoiceHeader", Storage="_InvoiceHeaders", ThisKey="Id", OtherKey="TypeId")]
		public EntitySet<InvoiceHeader> InvoiceHeaders
		{
			get
			{
				return this._InvoiceHeaders;
			}
			set
			{
				this._InvoiceHeaders.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_InvoiceHeaders(InvoiceHeader entity)
		{
			this.SendPropertyChanging();
			entity.InvoiceType = this;
		}
		
		private void detach_InvoiceHeaders(InvoiceHeader entity)
		{
			this.SendPropertyChanging();
			entity.InvoiceType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InvoiceHeader")]
	public partial class InvoiceHeader : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _InvoiceNumber;
		
		private System.Nullable<int> _SupplierId;
		
		private System.Nullable<System.DateTime> _Date;
		
		private System.Nullable<decimal> _Total;
		
		private System.Nullable<decimal> _Discound;
		
		private System.Nullable<decimal> _Net;
		
		private System.Nullable<decimal> _Paid;
		
		private System.Nullable<decimal> _Remaining;
		
		private System.Nullable<int> _StoreId;
		
		private string _Notes;
		
		private System.Nullable<int> _TypeId;
		
		private System.Nullable<int> _CustomerId;
		
		private EntitySet<InvoiceDetail> _InvoiceDetails;
		
		private EntityRef<InvoiceType> _InvoiceType;
		
		private EntityRef<Store> _Store;
		
		private EntityRef<Customer> _Customer;
		
		private EntityRef<Supplier> _Supplier;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnInvoiceNumberChanging(string value);
    partial void OnInvoiceNumberChanged();
    partial void OnSupplierIdChanging(System.Nullable<int> value);
    partial void OnSupplierIdChanged();
    partial void OninvoiceDateChanging(System.Nullable<System.DateTime> value);
    partial void OninvoiceDateChanged();
    partial void OnTotalChanging(System.Nullable<decimal> value);
    partial void OnTotalChanged();
    partial void OnDiscoundChanging(System.Nullable<decimal> value);
    partial void OnDiscoundChanged();
    partial void OnNetChanging(System.Nullable<decimal> value);
    partial void OnNetChanged();
    partial void OnPaidChanging(System.Nullable<decimal> value);
    partial void OnPaidChanged();
    partial void OnRemainingChanging(System.Nullable<decimal> value);
    partial void OnRemainingChanged();
    partial void OnStoreIdChanging(System.Nullable<int> value);
    partial void OnStoreIdChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnTypeIdChanging(System.Nullable<int> value);
    partial void OnTypeIdChanged();
    partial void OnCustomerIdChanging(System.Nullable<int> value);
    partial void OnCustomerIdChanged();
    #endregion
		
		public InvoiceHeader()
		{
			this._InvoiceDetails = new EntitySet<InvoiceDetail>(new Action<InvoiceDetail>(this.attach_InvoiceDetails), new Action<InvoiceDetail>(this.detach_InvoiceDetails));
			this._InvoiceType = default(EntityRef<InvoiceType>);
			this._Store = default(EntityRef<Store>);
			this._Customer = default(EntityRef<Customer>);
			this._Supplier = default(EntityRef<Supplier>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceNumber", DbType="NVarChar(50)")]
		public string InvoiceNumber
		{
			get
			{
				return this._InvoiceNumber;
			}
			set
			{
				if ((this._InvoiceNumber != value))
				{
					this.OnInvoiceNumberChanging(value);
					this.SendPropertyChanging();
					this._InvoiceNumber = value;
					this.SendPropertyChanged("InvoiceNumber");
					this.OnInvoiceNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierId", DbType="Int")]
		public System.Nullable<int> SupplierId
		{
			get
			{
				return this._SupplierId;
			}
			set
			{
				if ((this._SupplierId != value))
				{
					if (this._Supplier.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSupplierIdChanging(value);
					this.SendPropertyChanging();
					this._SupplierId = value;
					this.SendPropertyChanged("SupplierId");
					this.OnSupplierIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> invoiceDate
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OninvoiceDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("invoiceDate");
					this.OninvoiceDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Total", DbType="Money")]
		public System.Nullable<decimal> Total
		{
			get
			{
				return this._Total;
			}
			set
			{
				if ((this._Total != value))
				{
					this.OnTotalChanging(value);
					this.SendPropertyChanging();
					this._Total = value;
					this.SendPropertyChanged("Total");
					this.OnTotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Discound", DbType="Money")]
		public System.Nullable<decimal> Discound
		{
			get
			{
				return this._Discound;
			}
			set
			{
				if ((this._Discound != value))
				{
					this.OnDiscoundChanging(value);
					this.SendPropertyChanging();
					this._Discound = value;
					this.SendPropertyChanged("Discound");
					this.OnDiscoundChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Net", DbType="Money")]
		public System.Nullable<decimal> Net
		{
			get
			{
				return this._Net;
			}
			set
			{
				if ((this._Net != value))
				{
					this.OnNetChanging(value);
					this.SendPropertyChanging();
					this._Net = value;
					this.SendPropertyChanged("Net");
					this.OnNetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Paid", DbType="Money")]
		public System.Nullable<decimal> Paid
		{
			get
			{
				return this._Paid;
			}
			set
			{
				if ((this._Paid != value))
				{
					this.OnPaidChanging(value);
					this.SendPropertyChanging();
					this._Paid = value;
					this.SendPropertyChanged("Paid");
					this.OnPaidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remaining", DbType="Money")]
		public System.Nullable<decimal> Remaining
		{
			get
			{
				return this._Remaining;
			}
			set
			{
				if ((this._Remaining != value))
				{
					this.OnRemainingChanging(value);
					this.SendPropertyChanging();
					this._Remaining = value;
					this.SendPropertyChanged("Remaining");
					this.OnRemainingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StoreId", DbType="Int")]
		public System.Nullable<int> StoreId
		{
			get
			{
				return this._StoreId;
			}
			set
			{
				if ((this._StoreId != value))
				{
					if (this._Store.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStoreIdChanging(value);
					this.SendPropertyChanging();
					this._StoreId = value;
					this.SendPropertyChanged("StoreId");
					this.OnStoreIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(MAX)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeId", DbType="Int")]
		public System.Nullable<int> TypeId
		{
			get
			{
				return this._TypeId;
			}
			set
			{
				if ((this._TypeId != value))
				{
					if (this._InvoiceType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTypeIdChanging(value);
					this.SendPropertyChanging();
					this._TypeId = value;
					this.SendPropertyChanged("TypeId");
					this.OnTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerId", DbType="Int")]
		public System.Nullable<int> CustomerId
		{
			get
			{
				return this._CustomerId;
			}
			set
			{
				if ((this._CustomerId != value))
				{
					if (this._Customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerIdChanging(value);
					this.SendPropertyChanging();
					this._CustomerId = value;
					this.SendPropertyChanged("CustomerId");
					this.OnCustomerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InvoiceHeader_InvoiceDetail", Storage="_InvoiceDetails", ThisKey="Id", OtherKey="HeadId")]
		public EntitySet<InvoiceDetail> InvoiceDetails
		{
			get
			{
				return this._InvoiceDetails;
			}
			set
			{
				this._InvoiceDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InvoiceType_InvoiceHeader", Storage="_InvoiceType", ThisKey="TypeId", OtherKey="Id", IsForeignKey=true)]
		public InvoiceType InvoiceType
		{
			get
			{
				return this._InvoiceType.Entity;
			}
			set
			{
				InvoiceType previousValue = this._InvoiceType.Entity;
				if (((previousValue != value) 
							|| (this._InvoiceType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._InvoiceType.Entity = null;
						previousValue.InvoiceHeaders.Remove(this);
					}
					this._InvoiceType.Entity = value;
					if ((value != null))
					{
						value.InvoiceHeaders.Add(this);
						this._TypeId = value.Id;
					}
					else
					{
						this._TypeId = default(Nullable<int>);
					}
					this.SendPropertyChanged("InvoiceType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Store_InvoiceHeader", Storage="_Store", ThisKey="StoreId", OtherKey="Id", IsForeignKey=true)]
		public Store Store
		{
			get
			{
				return this._Store.Entity;
			}
			set
			{
				Store previousValue = this._Store.Entity;
				if (((previousValue != value) 
							|| (this._Store.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Store.Entity = null;
						previousValue.InvoiceHeaders.Remove(this);
					}
					this._Store.Entity = value;
					if ((value != null))
					{
						value.InvoiceHeaders.Add(this);
						this._StoreId = value.Id;
					}
					else
					{
						this._StoreId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Store");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_InvoiceHeader", Storage="_Customer", ThisKey="CustomerId", OtherKey="Id", IsForeignKey=true)]
		public Customer Customer
		{
			get
			{
				return this._Customer.Entity;
			}
			set
			{
				Customer previousValue = this._Customer.Entity;
				if (((previousValue != value) 
							|| (this._Customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer.Entity = null;
						previousValue.InvoiceHeaders.Remove(this);
					}
					this._Customer.Entity = value;
					if ((value != null))
					{
						value.InvoiceHeaders.Add(this);
						this._CustomerId = value.Id;
					}
					else
					{
						this._CustomerId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Customer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Supplier_InvoiceHeader", Storage="_Supplier", ThisKey="SupplierId", OtherKey="Id", IsForeignKey=true)]
		public Supplier Supplier
		{
			get
			{
				return this._Supplier.Entity;
			}
			set
			{
				Supplier previousValue = this._Supplier.Entity;
				if (((previousValue != value) 
							|| (this._Supplier.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Supplier.Entity = null;
						previousValue.InvoiceHeaders.Remove(this);
					}
					this._Supplier.Entity = value;
					if ((value != null))
					{
						value.InvoiceHeaders.Add(this);
						this._SupplierId = value.Id;
					}
					else
					{
						this._SupplierId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Supplier");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_InvoiceDetails(InvoiceDetail entity)
		{
			this.SendPropertyChanging();
			entity.InvoiceHeader = this;
		}
		
		private void detach_InvoiceDetails(InvoiceDetail entity)
		{
			this.SendPropertyChanging();
			entity.InvoiceHeader = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Customers")]
	public partial class Customer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _CustomerName;
		
		private string _CustomerPhone;
		
		private string _CustomerMobile;
		
		private string _CustomerAddress;
		
		private string _CustomerEmail;
		
		private System.Nullable<int> _CustomerGovernerateId;
		
		private string _CustomerPersonalId;
		
		private EntitySet<InvoiceHeader> _InvoiceHeaders;
		
		private EntitySet<Account> _Accounts;
		
		private EntityRef<Governorate> _Governorate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCustomerNameChanging(string value);
    partial void OnCustomerNameChanged();
    partial void OnCustomerPhoneChanging(string value);
    partial void OnCustomerPhoneChanged();
    partial void OnCustomerMobileChanging(string value);
    partial void OnCustomerMobileChanged();
    partial void OnCustomerAddressChanging(string value);
    partial void OnCustomerAddressChanged();
    partial void OnCustomerEmailChanging(string value);
    partial void OnCustomerEmailChanged();
    partial void OnCustomerGovernerateIdChanging(System.Nullable<int> value);
    partial void OnCustomerGovernerateIdChanged();
    partial void OnCustomerPersonalIdChanging(string value);
    partial void OnCustomerPersonalIdChanged();
    #endregion
		
		public Customer()
		{
			this._InvoiceHeaders = new EntitySet<InvoiceHeader>(new Action<InvoiceHeader>(this.attach_InvoiceHeaders), new Action<InvoiceHeader>(this.detach_InvoiceHeaders));
			this._Accounts = new EntitySet<Account>(new Action<Account>(this.attach_Accounts), new Action<Account>(this.detach_Accounts));
			this._Governorate = default(EntityRef<Governorate>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerName", DbType="NVarChar(200)")]
		public string CustomerName
		{
			get
			{
				return this._CustomerName;
			}
			set
			{
				if ((this._CustomerName != value))
				{
					this.OnCustomerNameChanging(value);
					this.SendPropertyChanging();
					this._CustomerName = value;
					this.SendPropertyChanged("CustomerName");
					this.OnCustomerNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerPhone", DbType="NVarChar(50)")]
		public string CustomerPhone
		{
			get
			{
				return this._CustomerPhone;
			}
			set
			{
				if ((this._CustomerPhone != value))
				{
					this.OnCustomerPhoneChanging(value);
					this.SendPropertyChanging();
					this._CustomerPhone = value;
					this.SendPropertyChanged("CustomerPhone");
					this.OnCustomerPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerMobile", DbType="NVarChar(50)")]
		public string CustomerMobile
		{
			get
			{
				return this._CustomerMobile;
			}
			set
			{
				if ((this._CustomerMobile != value))
				{
					this.OnCustomerMobileChanging(value);
					this.SendPropertyChanging();
					this._CustomerMobile = value;
					this.SendPropertyChanged("CustomerMobile");
					this.OnCustomerMobileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerAddress", DbType="NVarChar(350)")]
		public string CustomerAddress
		{
			get
			{
				return this._CustomerAddress;
			}
			set
			{
				if ((this._CustomerAddress != value))
				{
					this.OnCustomerAddressChanging(value);
					this.SendPropertyChanging();
					this._CustomerAddress = value;
					this.SendPropertyChanged("CustomerAddress");
					this.OnCustomerAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerEmail", DbType="NVarChar(100)")]
		public string CustomerEmail
		{
			get
			{
				return this._CustomerEmail;
			}
			set
			{
				if ((this._CustomerEmail != value))
				{
					this.OnCustomerEmailChanging(value);
					this.SendPropertyChanging();
					this._CustomerEmail = value;
					this.SendPropertyChanged("CustomerEmail");
					this.OnCustomerEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerGovernerateId", DbType="Int")]
		public System.Nullable<int> CustomerGovernerateId
		{
			get
			{
				return this._CustomerGovernerateId;
			}
			set
			{
				if ((this._CustomerGovernerateId != value))
				{
					if (this._Governorate.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerGovernerateIdChanging(value);
					this.SendPropertyChanging();
					this._CustomerGovernerateId = value;
					this.SendPropertyChanged("CustomerGovernerateId");
					this.OnCustomerGovernerateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerPersonalId", DbType="NVarChar(50)")]
		public string CustomerPersonalId
		{
			get
			{
				return this._CustomerPersonalId;
			}
			set
			{
				if ((this._CustomerPersonalId != value))
				{
					this.OnCustomerPersonalIdChanging(value);
					this.SendPropertyChanging();
					this._CustomerPersonalId = value;
					this.SendPropertyChanged("CustomerPersonalId");
					this.OnCustomerPersonalIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_InvoiceHeader", Storage="_InvoiceHeaders", ThisKey="Id", OtherKey="CustomerId")]
		public EntitySet<InvoiceHeader> InvoiceHeaders
		{
			get
			{
				return this._InvoiceHeaders;
			}
			set
			{
				this._InvoiceHeaders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Account", Storage="_Accounts", ThisKey="Id", OtherKey="CustomerId")]
		public EntitySet<Account> Accounts
		{
			get
			{
				return this._Accounts;
			}
			set
			{
				this._Accounts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Governorate_Customer", Storage="_Governorate", ThisKey="CustomerGovernerateId", OtherKey="ID", IsForeignKey=true)]
		public Governorate Governorate
		{
			get
			{
				return this._Governorate.Entity;
			}
			set
			{
				Governorate previousValue = this._Governorate.Entity;
				if (((previousValue != value) 
							|| (this._Governorate.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Governorate.Entity = null;
						previousValue.Customers.Remove(this);
					}
					this._Governorate.Entity = value;
					if ((value != null))
					{
						value.Customers.Add(this);
						this._CustomerGovernerateId = value.ID;
					}
					else
					{
						this._CustomerGovernerateId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Governorate");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_InvoiceHeaders(InvoiceHeader entity)
		{
			this.SendPropertyChanging();
			entity.Customer = this;
		}
		
		private void detach_InvoiceHeaders(InvoiceHeader entity)
		{
			this.SendPropertyChanging();
			entity.Customer = null;
		}
		
		private void attach_Accounts(Account entity)
		{
			this.SendPropertyChanging();
			entity.Customer = this;
		}
		
		private void detach_Accounts(Account entity)
		{
			this.SendPropertyChanging();
			entity.Customer = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Suppliers")]
	public partial class Supplier : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _SupplierName;
		
		private string _SupplierPhone;
		
		private string _SupplierMobile1;
		
		private string _SupplierMobile2;
		
		private string _SupplierAddress;
		
		private string _SupplierEmail;
		
		private System.Nullable<int> _SupplierGovernerateId;
		
		private string _SupplierPersonalId;
		
		private EntitySet<InvoiceHeader> _InvoiceHeaders;
		
		private EntitySet<Account> _Accounts;
		
		private EntityRef<Governorate> _Governorate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnSupplierNameChanging(string value);
    partial void OnSupplierNameChanged();
    partial void OnSupplierPhoneChanging(string value);
    partial void OnSupplierPhoneChanged();
    partial void OnSupplierMobile1Changing(string value);
    partial void OnSupplierMobile1Changed();
    partial void OnSupplierMobile2Changing(string value);
    partial void OnSupplierMobile2Changed();
    partial void OnSupplierAddressChanging(string value);
    partial void OnSupplierAddressChanged();
    partial void OnSupplierEmailChanging(string value);
    partial void OnSupplierEmailChanged();
    partial void OnSupplierGovernerateIdChanging(System.Nullable<int> value);
    partial void OnSupplierGovernerateIdChanged();
    partial void OnSupplierPersonalIdChanging(string value);
    partial void OnSupplierPersonalIdChanged();
    #endregion
		
		public Supplier()
		{
			this._InvoiceHeaders = new EntitySet<InvoiceHeader>(new Action<InvoiceHeader>(this.attach_InvoiceHeaders), new Action<InvoiceHeader>(this.detach_InvoiceHeaders));
			this._Accounts = new EntitySet<Account>(new Action<Account>(this.attach_Accounts), new Action<Account>(this.detach_Accounts));
			this._Governorate = default(EntityRef<Governorate>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierName", DbType="NVarChar(200)")]
		public string SupplierName
		{
			get
			{
				return this._SupplierName;
			}
			set
			{
				if ((this._SupplierName != value))
				{
					this.OnSupplierNameChanging(value);
					this.SendPropertyChanging();
					this._SupplierName = value;
					this.SendPropertyChanged("SupplierName");
					this.OnSupplierNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierPhone", DbType="NVarChar(50)")]
		public string SupplierPhone
		{
			get
			{
				return this._SupplierPhone;
			}
			set
			{
				if ((this._SupplierPhone != value))
				{
					this.OnSupplierPhoneChanging(value);
					this.SendPropertyChanging();
					this._SupplierPhone = value;
					this.SendPropertyChanged("SupplierPhone");
					this.OnSupplierPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierMobile1", DbType="NVarChar(50)")]
		public string SupplierMobile1
		{
			get
			{
				return this._SupplierMobile1;
			}
			set
			{
				if ((this._SupplierMobile1 != value))
				{
					this.OnSupplierMobile1Changing(value);
					this.SendPropertyChanging();
					this._SupplierMobile1 = value;
					this.SendPropertyChanged("SupplierMobile1");
					this.OnSupplierMobile1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierMobile2", DbType="NVarChar(50)")]
		public string SupplierMobile2
		{
			get
			{
				return this._SupplierMobile2;
			}
			set
			{
				if ((this._SupplierMobile2 != value))
				{
					this.OnSupplierMobile2Changing(value);
					this.SendPropertyChanging();
					this._SupplierMobile2 = value;
					this.SendPropertyChanged("SupplierMobile2");
					this.OnSupplierMobile2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierAddress", DbType="NVarChar(350)")]
		public string SupplierAddress
		{
			get
			{
				return this._SupplierAddress;
			}
			set
			{
				if ((this._SupplierAddress != value))
				{
					this.OnSupplierAddressChanging(value);
					this.SendPropertyChanging();
					this._SupplierAddress = value;
					this.SendPropertyChanged("SupplierAddress");
					this.OnSupplierAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierEmail", DbType="NVarChar(100)")]
		public string SupplierEmail
		{
			get
			{
				return this._SupplierEmail;
			}
			set
			{
				if ((this._SupplierEmail != value))
				{
					this.OnSupplierEmailChanging(value);
					this.SendPropertyChanging();
					this._SupplierEmail = value;
					this.SendPropertyChanged("SupplierEmail");
					this.OnSupplierEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierGovernerateId", DbType="Int")]
		public System.Nullable<int> SupplierGovernerateId
		{
			get
			{
				return this._SupplierGovernerateId;
			}
			set
			{
				if ((this._SupplierGovernerateId != value))
				{
					if (this._Governorate.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSupplierGovernerateIdChanging(value);
					this.SendPropertyChanging();
					this._SupplierGovernerateId = value;
					this.SendPropertyChanged("SupplierGovernerateId");
					this.OnSupplierGovernerateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierPersonalId", DbType="NVarChar(50)")]
		public string SupplierPersonalId
		{
			get
			{
				return this._SupplierPersonalId;
			}
			set
			{
				if ((this._SupplierPersonalId != value))
				{
					this.OnSupplierPersonalIdChanging(value);
					this.SendPropertyChanging();
					this._SupplierPersonalId = value;
					this.SendPropertyChanged("SupplierPersonalId");
					this.OnSupplierPersonalIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Supplier_InvoiceHeader", Storage="_InvoiceHeaders", ThisKey="Id", OtherKey="SupplierId")]
		public EntitySet<InvoiceHeader> InvoiceHeaders
		{
			get
			{
				return this._InvoiceHeaders;
			}
			set
			{
				this._InvoiceHeaders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Supplier_Account", Storage="_Accounts", ThisKey="Id", OtherKey="SupplierId")]
		public EntitySet<Account> Accounts
		{
			get
			{
				return this._Accounts;
			}
			set
			{
				this._Accounts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Governorate_Supplier", Storage="_Governorate", ThisKey="SupplierGovernerateId", OtherKey="ID", IsForeignKey=true)]
		public Governorate Governorate
		{
			get
			{
				return this._Governorate.Entity;
			}
			set
			{
				Governorate previousValue = this._Governorate.Entity;
				if (((previousValue != value) 
							|| (this._Governorate.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Governorate.Entity = null;
						previousValue.Suppliers.Remove(this);
					}
					this._Governorate.Entity = value;
					if ((value != null))
					{
						value.Suppliers.Add(this);
						this._SupplierGovernerateId = value.ID;
					}
					else
					{
						this._SupplierGovernerateId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Governorate");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_InvoiceHeaders(InvoiceHeader entity)
		{
			this.SendPropertyChanging();
			entity.Supplier = this;
		}
		
		private void detach_InvoiceHeaders(InvoiceHeader entity)
		{
			this.SendPropertyChanging();
			entity.Supplier = null;
		}
		
		private void attach_Accounts(Account entity)
		{
			this.SendPropertyChanging();
			entity.Supplier = this;
		}
		
		private void detach_Accounts(Account entity)
		{
			this.SendPropertyChanging();
			entity.Supplier = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StoreTransaction")]
	public partial class StoreTransaction : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _ItemId;
		
		private int _StoreId;
		
		private System.Nullable<decimal> _Quantity;
		
		private System.Nullable<System.DateTime> _Date;
		
		private string _Notes;
		
		private EntityRef<Store> _Store;
		
		private EntityRef<Item> _Item;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnItemIdChanging(int value);
    partial void OnItemIdChanged();
    partial void OnStoreIdChanging(int value);
    partial void OnStoreIdChanged();
    partial void OnQuantityChanging(System.Nullable<decimal> value);
    partial void OnQuantityChanged();
    partial void OnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    #endregion
		
		public StoreTransaction()
		{
			this._Store = default(EntityRef<Store>);
			this._Item = default(EntityRef<Item>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemId", DbType="Int NOT NULL")]
		public int ItemId
		{
			get
			{
				return this._ItemId;
			}
			set
			{
				if ((this._ItemId != value))
				{
					if (this._Item.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnItemIdChanging(value);
					this.SendPropertyChanging();
					this._ItemId = value;
					this.SendPropertyChanged("ItemId");
					this.OnItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StoreId", DbType="Int NOT NULL")]
		public int StoreId
		{
			get
			{
				return this._StoreId;
			}
			set
			{
				if ((this._StoreId != value))
				{
					if (this._Store.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStoreIdChanging(value);
					this.SendPropertyChanging();
					this._StoreId = value;
					this.SendPropertyChanged("StoreId");
					this.OnStoreIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(MAX)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Store_StoreTransaction", Storage="_Store", ThisKey="StoreId", OtherKey="Id", IsForeignKey=true)]
		public Store Store
		{
			get
			{
				return this._Store.Entity;
			}
			set
			{
				Store previousValue = this._Store.Entity;
				if (((previousValue != value) 
							|| (this._Store.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Store.Entity = null;
						previousValue.StoreTransactions.Remove(this);
					}
					this._Store.Entity = value;
					if ((value != null))
					{
						value.StoreTransactions.Add(this);
						this._StoreId = value.Id;
					}
					else
					{
						this._StoreId = default(int);
					}
					this.SendPropertyChanged("Store");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Item_StoreTransaction", Storage="_Item", ThisKey="ItemId", OtherKey="Id", IsForeignKey=true)]
		public Item Item
		{
			get
			{
				return this._Item.Entity;
			}
			set
			{
				Item previousValue = this._Item.Entity;
				if (((previousValue != value) 
							|| (this._Item.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Item.Entity = null;
						previousValue.StoreTransactions.Remove(this);
					}
					this._Item.Entity = value;
					if ((value != null))
					{
						value.StoreTransactions.Add(this);
						this._ItemId = value.Id;
					}
					else
					{
						this._ItemId = default(int);
					}
					this.SendPropertyChanged("Item");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Accounts")]
	public partial class Account : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _CustomerId;
		
		private System.Nullable<int> _SupplierId;
		
		private System.Nullable<decimal> _Amount;
		
		private string _Notes;
		
		private System.Nullable<System.DateTime> _Date;
		
		private string _PaymentComment;
		
		private System.Nullable<int> _UserId;
		
		private System.Nullable<System.DateTime> _Paymentdate;
		
		private System.Nullable<decimal> _Total;
		
		private EntityRef<Customer> _Customer;
		
		private EntityRef<Supplier> _Supplier;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCustomerIdChanging(System.Nullable<int> value);
    partial void OnCustomerIdChanged();
    partial void OnSupplierIdChanging(System.Nullable<int> value);
    partial void OnSupplierIdChanged();
    partial void OnAmountChanging(System.Nullable<decimal> value);
    partial void OnAmountChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateChanged();
    partial void OnPaymentCommentChanging(string value);
    partial void OnPaymentCommentChanged();
    partial void OnUserIdChanging(System.Nullable<int> value);
    partial void OnUserIdChanged();
    partial void OnPaymentdateChanging(System.Nullable<System.DateTime> value);
    partial void OnPaymentdateChanged();
    partial void OnTotalChanging(System.Nullable<decimal> value);
    partial void OnTotalChanged();
    #endregion
		
		public Account()
		{
			this._Customer = default(EntityRef<Customer>);
			this._Supplier = default(EntityRef<Supplier>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerId", DbType="Int")]
		public System.Nullable<int> CustomerId
		{
			get
			{
				return this._CustomerId;
			}
			set
			{
				if ((this._CustomerId != value))
				{
					if (this._Customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerIdChanging(value);
					this.SendPropertyChanging();
					this._CustomerId = value;
					this.SendPropertyChanged("CustomerId");
					this.OnCustomerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierId", DbType="Int")]
		public System.Nullable<int> SupplierId
		{
			get
			{
				return this._SupplierId;
			}
			set
			{
				if ((this._SupplierId != value))
				{
					if (this._Supplier.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSupplierIdChanging(value);
					this.SendPropertyChanging();
					this._SupplierId = value;
					this.SendPropertyChanged("SupplierId");
					this.OnSupplierIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Money")]
		public System.Nullable<decimal> Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(MAX)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentComment", DbType="NVarChar(MAX)")]
		public string PaymentComment
		{
			get
			{
				return this._PaymentComment;
			}
			set
			{
				if ((this._PaymentComment != value))
				{
					this.OnPaymentCommentChanging(value);
					this.SendPropertyChanging();
					this._PaymentComment = value;
					this.SendPropertyChanged("PaymentComment");
					this.OnPaymentCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int")]
		public System.Nullable<int> UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Paymentdate", DbType="DateTime")]
		public System.Nullable<System.DateTime> Paymentdate
		{
			get
			{
				return this._Paymentdate;
			}
			set
			{
				if ((this._Paymentdate != value))
				{
					this.OnPaymentdateChanging(value);
					this.SendPropertyChanging();
					this._Paymentdate = value;
					this.SendPropertyChanged("Paymentdate");
					this.OnPaymentdateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Total", DbType="Money")]
		public System.Nullable<decimal> Total
		{
			get
			{
				return this._Total;
			}
			set
			{
				if ((this._Total != value))
				{
					this.OnTotalChanging(value);
					this.SendPropertyChanging();
					this._Total = value;
					this.SendPropertyChanged("Total");
					this.OnTotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Account", Storage="_Customer", ThisKey="CustomerId", OtherKey="Id", IsForeignKey=true)]
		public Customer Customer
		{
			get
			{
				return this._Customer.Entity;
			}
			set
			{
				Customer previousValue = this._Customer.Entity;
				if (((previousValue != value) 
							|| (this._Customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer.Entity = null;
						previousValue.Accounts.Remove(this);
					}
					this._Customer.Entity = value;
					if ((value != null))
					{
						value.Accounts.Add(this);
						this._CustomerId = value.Id;
					}
					else
					{
						this._CustomerId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Customer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Supplier_Account", Storage="_Supplier", ThisKey="SupplierId", OtherKey="Id", IsForeignKey=true)]
		public Supplier Supplier
		{
			get
			{
				return this._Supplier.Entity;
			}
			set
			{
				Supplier previousValue = this._Supplier.Entity;
				if (((previousValue != value) 
							|| (this._Supplier.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Supplier.Entity = null;
						previousValue.Accounts.Remove(this);
					}
					this._Supplier.Entity = value;
					if ((value != null))
					{
						value.Accounts.Add(this);
						this._SupplierId = value.Id;
					}
					else
					{
						this._SupplierId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Supplier");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Account", Storage="_User", ThisKey="UserId", OtherKey="ID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Accounts.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Accounts.Add(this);
						this._UserId = value.ID;
					}
					else
					{
						this._UserId = default(Nullable<int>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NewResellerRequests")]
	public partial class NewResellerRequest : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _CompanyArabicName;
		
		private string _CompanyEnglishName;
		
		private string _CompanyType;
		
		private string _EmployeeNumbers;
		
		private string _CompanyActivities;
		
		private string _CompanyAddress;
		
		private string _CompanyTelephone;
		
		private string _FaxNumber;
		
		private string _CompanyEmail;
		
		private string _CompanyMobile;
		
		private string _ResellerName;
		
		private string _ResellerNationalNumber;
		
		private string _ResellerMobile;
		
		private string _ResellerEmail;
		
		private string _ResellerUsername;
		
		private string _ResellerPassword;
		
		private int _ResellerCulture;
		
		private System.Nullable<bool> _RequestStatuses;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCompanyArabicNameChanging(string value);
    partial void OnCompanyArabicNameChanged();
    partial void OnCompanyEnglishNameChanging(string value);
    partial void OnCompanyEnglishNameChanged();
    partial void OnCompanyTypeChanging(string value);
    partial void OnCompanyTypeChanged();
    partial void OnEmployeeNumbersChanging(string value);
    partial void OnEmployeeNumbersChanged();
    partial void OnCompanyActivitiesChanging(string value);
    partial void OnCompanyActivitiesChanged();
    partial void OnCompanyAddressChanging(string value);
    partial void OnCompanyAddressChanged();
    partial void OnCompanyTelephoneChanging(string value);
    partial void OnCompanyTelephoneChanged();
    partial void OnFaxNumberChanging(string value);
    partial void OnFaxNumberChanged();
    partial void OnCompanyEmailChanging(string value);
    partial void OnCompanyEmailChanged();
    partial void OnCompanyMobileChanging(string value);
    partial void OnCompanyMobileChanged();
    partial void OnResellerNameChanging(string value);
    partial void OnResellerNameChanged();
    partial void OnResellerNationalNumberChanging(string value);
    partial void OnResellerNationalNumberChanged();
    partial void OnResellerMobileChanging(string value);
    partial void OnResellerMobileChanged();
    partial void OnResellerEmailChanging(string value);
    partial void OnResellerEmailChanged();
    partial void OnResellerUsernameChanging(string value);
    partial void OnResellerUsernameChanged();
    partial void OnResellerPasswordChanging(string value);
    partial void OnResellerPasswordChanged();
    partial void OnResellerCultureChanging(int value);
    partial void OnResellerCultureChanged();
    partial void OnRequestStatusesChanging(System.Nullable<bool> value);
    partial void OnRequestStatusesChanged();
    #endregion
		
		public NewResellerRequest()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyArabicName", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string CompanyArabicName
		{
			get
			{
				return this._CompanyArabicName;
			}
			set
			{
				if ((this._CompanyArabicName != value))
				{
					this.OnCompanyArabicNameChanging(value);
					this.SendPropertyChanging();
					this._CompanyArabicName = value;
					this.SendPropertyChanged("CompanyArabicName");
					this.OnCompanyArabicNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyEnglishName", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string CompanyEnglishName
		{
			get
			{
				return this._CompanyEnglishName;
			}
			set
			{
				if ((this._CompanyEnglishName != value))
				{
					this.OnCompanyEnglishNameChanging(value);
					this.SendPropertyChanging();
					this._CompanyEnglishName = value;
					this.SendPropertyChanged("CompanyEnglishName");
					this.OnCompanyEnglishNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyType", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CompanyType
		{
			get
			{
				return this._CompanyType;
			}
			set
			{
				if ((this._CompanyType != value))
				{
					this.OnCompanyTypeChanging(value);
					this.SendPropertyChanging();
					this._CompanyType = value;
					this.SendPropertyChanged("CompanyType");
					this.OnCompanyTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeNumbers", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string EmployeeNumbers
		{
			get
			{
				return this._EmployeeNumbers;
			}
			set
			{
				if ((this._EmployeeNumbers != value))
				{
					this.OnEmployeeNumbersChanging(value);
					this.SendPropertyChanging();
					this._EmployeeNumbers = value;
					this.SendPropertyChanged("EmployeeNumbers");
					this.OnEmployeeNumbersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyActivities", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string CompanyActivities
		{
			get
			{
				return this._CompanyActivities;
			}
			set
			{
				if ((this._CompanyActivities != value))
				{
					this.OnCompanyActivitiesChanging(value);
					this.SendPropertyChanging();
					this._CompanyActivities = value;
					this.SendPropertyChanged("CompanyActivities");
					this.OnCompanyActivitiesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyAddress", DbType="NVarChar(550) NOT NULL", CanBeNull=false)]
		public string CompanyAddress
		{
			get
			{
				return this._CompanyAddress;
			}
			set
			{
				if ((this._CompanyAddress != value))
				{
					this.OnCompanyAddressChanging(value);
					this.SendPropertyChanging();
					this._CompanyAddress = value;
					this.SendPropertyChanged("CompanyAddress");
					this.OnCompanyAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyTelephone", DbType="NVarChar(50)")]
		public string CompanyTelephone
		{
			get
			{
				return this._CompanyTelephone;
			}
			set
			{
				if ((this._CompanyTelephone != value))
				{
					this.OnCompanyTelephoneChanging(value);
					this.SendPropertyChanging();
					this._CompanyTelephone = value;
					this.SendPropertyChanged("CompanyTelephone");
					this.OnCompanyTelephoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FaxNumber", DbType="NVarChar(50)")]
		public string FaxNumber
		{
			get
			{
				return this._FaxNumber;
			}
			set
			{
				if ((this._FaxNumber != value))
				{
					this.OnFaxNumberChanging(value);
					this.SendPropertyChanging();
					this._FaxNumber = value;
					this.SendPropertyChanged("FaxNumber");
					this.OnFaxNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyEmail", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string CompanyEmail
		{
			get
			{
				return this._CompanyEmail;
			}
			set
			{
				if ((this._CompanyEmail != value))
				{
					this.OnCompanyEmailChanging(value);
					this.SendPropertyChanging();
					this._CompanyEmail = value;
					this.SendPropertyChanged("CompanyEmail");
					this.OnCompanyEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyMobile", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CompanyMobile
		{
			get
			{
				return this._CompanyMobile;
			}
			set
			{
				if ((this._CompanyMobile != value))
				{
					this.OnCompanyMobileChanging(value);
					this.SendPropertyChanging();
					this._CompanyMobile = value;
					this.SendPropertyChanged("CompanyMobile");
					this.OnCompanyMobileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResellerName", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string ResellerName
		{
			get
			{
				return this._ResellerName;
			}
			set
			{
				if ((this._ResellerName != value))
				{
					this.OnResellerNameChanging(value);
					this.SendPropertyChanging();
					this._ResellerName = value;
					this.SendPropertyChanged("ResellerName");
					this.OnResellerNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResellerNationalNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ResellerNationalNumber
		{
			get
			{
				return this._ResellerNationalNumber;
			}
			set
			{
				if ((this._ResellerNationalNumber != value))
				{
					this.OnResellerNationalNumberChanging(value);
					this.SendPropertyChanging();
					this._ResellerNationalNumber = value;
					this.SendPropertyChanged("ResellerNationalNumber");
					this.OnResellerNationalNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResellerMobile", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ResellerMobile
		{
			get
			{
				return this._ResellerMobile;
			}
			set
			{
				if ((this._ResellerMobile != value))
				{
					this.OnResellerMobileChanging(value);
					this.SendPropertyChanging();
					this._ResellerMobile = value;
					this.SendPropertyChanged("ResellerMobile");
					this.OnResellerMobileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResellerEmail", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string ResellerEmail
		{
			get
			{
				return this._ResellerEmail;
			}
			set
			{
				if ((this._ResellerEmail != value))
				{
					this.OnResellerEmailChanging(value);
					this.SendPropertyChanging();
					this._ResellerEmail = value;
					this.SendPropertyChanged("ResellerEmail");
					this.OnResellerEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResellerUsername", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ResellerUsername
		{
			get
			{
				return this._ResellerUsername;
			}
			set
			{
				if ((this._ResellerUsername != value))
				{
					this.OnResellerUsernameChanging(value);
					this.SendPropertyChanging();
					this._ResellerUsername = value;
					this.SendPropertyChanged("ResellerUsername");
					this.OnResellerUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResellerPassword", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ResellerPassword
		{
			get
			{
				return this._ResellerPassword;
			}
			set
			{
				if ((this._ResellerPassword != value))
				{
					this.OnResellerPasswordChanging(value);
					this.SendPropertyChanging();
					this._ResellerPassword = value;
					this.SendPropertyChanged("ResellerPassword");
					this.OnResellerPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResellerCulture", DbType="Int NOT NULL")]
		public int ResellerCulture
		{
			get
			{
				return this._ResellerCulture;
			}
			set
			{
				if ((this._ResellerCulture != value))
				{
					this.OnResellerCultureChanging(value);
					this.SendPropertyChanging();
					this._ResellerCulture = value;
					this.SendPropertyChanged("ResellerCulture");
					this.OnResellerCultureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="RequestStatus", Storage="_RequestStatuses", DbType="Bit")]
		public System.Nullable<bool> RequestStatuses
		{
			get
			{
				return this._RequestStatuses;
			}
			set
			{
				if ((this._RequestStatuses != value))
				{
					this.OnRequestStatusesChanging(value);
					this.SendPropertyChanging();
					this._RequestStatuses = value;
					this.SendPropertyChanged("RequestStatuses");
					this.OnRequestStatusesChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Phones")]
	public partial class Phone : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Phone1;
		
		private string _Name;
		
		private string _Governate;
		
		private int _CallStateId;
		
		private int _EmployeeId;
		
		private System.Nullable<int> _RejectReasonId;
		
		private System.Nullable<System.DateTime> _Appointment;
		
		private string _Offer1;
		
		private string _Offer2;
		
		private string _Comment;
		
		private string _Central;
		
		private string _GovernerateCode;
		
		private string _CancelDate;
		
		private string _OldPackage;
		
		private string _OldCreationDate;
		
		private string _Mobile;
		
		private string _Notes;
		
		private EntitySet<PhoneData> _PhoneDatas;
		
		private EntityRef<CallState> _CallState;
		
		private EntityRef<RejectionReason> _RejectionReason;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnPhone1Changing(string value);
    partial void OnPhone1Changed();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnGovernateChanging(string value);
    partial void OnGovernateChanged();
    partial void OnCallStateIdChanging(int value);
    partial void OnCallStateIdChanged();
    partial void OnEmployeeIdChanging(int value);
    partial void OnEmployeeIdChanged();
    partial void OnRejectReasonIdChanging(System.Nullable<int> value);
    partial void OnRejectReasonIdChanged();
    partial void OnAppointmentChanging(System.Nullable<System.DateTime> value);
    partial void OnAppointmentChanged();
    partial void OnOffer1Changing(string value);
    partial void OnOffer1Changed();
    partial void OnOffer2Changing(string value);
    partial void OnOffer2Changed();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnCentralChanging(string value);
    partial void OnCentralChanged();
    partial void OnGovernerateCodeChanging(string value);
    partial void OnGovernerateCodeChanged();
    partial void OnCancelDateChanging(string value);
    partial void OnCancelDateChanged();
    partial void OnOldPackageChanging(string value);
    partial void OnOldPackageChanged();
    partial void OnOldCreationDateChanging(string value);
    partial void OnOldCreationDateChanged();
    partial void OnMobileChanging(string value);
    partial void OnMobileChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    #endregion
		
		public Phone()
		{
			this._PhoneDatas = new EntitySet<PhoneData>(new Action<PhoneData>(this.attach_PhoneDatas), new Action<PhoneData>(this.detach_PhoneDatas));
			this._CallState = default(EntityRef<CallState>);
			this._RejectionReason = default(EntityRef<RejectionReason>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Phone", Storage="_Phone1", DbType="NVarChar(20)")]
		public string Phone1
		{
			get
			{
				return this._Phone1;
			}
			set
			{
				if ((this._Phone1 != value))
				{
					this.OnPhone1Changing(value);
					this.SendPropertyChanging();
					this._Phone1 = value;
					this.SendPropertyChanged("Phone1");
					this.OnPhone1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(500)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Governate", DbType="NVarChar(500)")]
		public string Governate
		{
			get
			{
				return this._Governate;
			}
			set
			{
				if ((this._Governate != value))
				{
					this.OnGovernateChanging(value);
					this.SendPropertyChanging();
					this._Governate = value;
					this.SendPropertyChanged("Governate");
					this.OnGovernateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CallStateId", DbType="Int NOT NULL")]
		public int CallStateId
		{
			get
			{
				return this._CallStateId;
			}
			set
			{
				if ((this._CallStateId != value))
				{
					if (this._CallState.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCallStateIdChanging(value);
					this.SendPropertyChanging();
					this._CallStateId = value;
					this.SendPropertyChanged("CallStateId");
					this.OnCallStateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeId", DbType="Int NOT NULL")]
		public int EmployeeId
		{
			get
			{
				return this._EmployeeId;
			}
			set
			{
				if ((this._EmployeeId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmployeeIdChanging(value);
					this.SendPropertyChanging();
					this._EmployeeId = value;
					this.SendPropertyChanged("EmployeeId");
					this.OnEmployeeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RejectReasonId", DbType="Int")]
		public System.Nullable<int> RejectReasonId
		{
			get
			{
				return this._RejectReasonId;
			}
			set
			{
				if ((this._RejectReasonId != value))
				{
					if (this._RejectionReason.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRejectReasonIdChanging(value);
					this.SendPropertyChanging();
					this._RejectReasonId = value;
					this.SendPropertyChanged("RejectReasonId");
					this.OnRejectReasonIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Appointment", DbType="DateTime")]
		public System.Nullable<System.DateTime> Appointment
		{
			get
			{
				return this._Appointment;
			}
			set
			{
				if ((this._Appointment != value))
				{
					this.OnAppointmentChanging(value);
					this.SendPropertyChanging();
					this._Appointment = value;
					this.SendPropertyChanged("Appointment");
					this.OnAppointmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Offer1", DbType="NVarChar(2000)")]
		public string Offer1
		{
			get
			{
				return this._Offer1;
			}
			set
			{
				if ((this._Offer1 != value))
				{
					this.OnOffer1Changing(value);
					this.SendPropertyChanging();
					this._Offer1 = value;
					this.SendPropertyChanged("Offer1");
					this.OnOffer1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Offer2", DbType="NVarChar(2000)")]
		public string Offer2
		{
			get
			{
				return this._Offer2;
			}
			set
			{
				if ((this._Offer2 != value))
				{
					this.OnOffer2Changing(value);
					this.SendPropertyChanging();
					this._Offer2 = value;
					this.SendPropertyChanged("Offer2");
					this.OnOffer2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(MAX)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Central", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Central
		{
			get
			{
				return this._Central;
			}
			set
			{
				if ((this._Central != value))
				{
					this.OnCentralChanging(value);
					this.SendPropertyChanging();
					this._Central = value;
					this.SendPropertyChanged("Central");
					this.OnCentralChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GovernerateCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string GovernerateCode
		{
			get
			{
				return this._GovernerateCode;
			}
			set
			{
				if ((this._GovernerateCode != value))
				{
					this.OnGovernerateCodeChanging(value);
					this.SendPropertyChanging();
					this._GovernerateCode = value;
					this.SendPropertyChanged("GovernerateCode");
					this.OnGovernerateCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CancelDate", DbType="NVarChar(50)")]
		public string CancelDate
		{
			get
			{
				return this._CancelDate;
			}
			set
			{
				if ((this._CancelDate != value))
				{
					this.OnCancelDateChanging(value);
					this.SendPropertyChanging();
					this._CancelDate = value;
					this.SendPropertyChanged("CancelDate");
					this.OnCancelDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldPackage", DbType="NVarChar(50)")]
		public string OldPackage
		{
			get
			{
				return this._OldPackage;
			}
			set
			{
				if ((this._OldPackage != value))
				{
					this.OnOldPackageChanging(value);
					this.SendPropertyChanging();
					this._OldPackage = value;
					this.SendPropertyChanged("OldPackage");
					this.OnOldPackageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldCreationDate", DbType="NVarChar(50)")]
		public string OldCreationDate
		{
			get
			{
				return this._OldCreationDate;
			}
			set
			{
				if ((this._OldCreationDate != value))
				{
					this.OnOldCreationDateChanging(value);
					this.SendPropertyChanging();
					this._OldCreationDate = value;
					this.SendPropertyChanged("OldCreationDate");
					this.OnOldCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mobile", DbType="NVarChar(50)")]
		public string Mobile
		{
			get
			{
				return this._Mobile;
			}
			set
			{
				if ((this._Mobile != value))
				{
					this.OnMobileChanging(value);
					this.SendPropertyChanging();
					this._Mobile = value;
					this.SendPropertyChanged("Mobile");
					this.OnMobileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(MAX)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Phone_PhoneData", Storage="_PhoneDatas", ThisKey="Id", OtherKey="PhoneId")]
		public EntitySet<PhoneData> PhoneDatas
		{
			get
			{
				return this._PhoneDatas;
			}
			set
			{
				this._PhoneDatas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CallState_Phone", Storage="_CallState", ThisKey="CallStateId", OtherKey="Id", IsForeignKey=true)]
		public CallState CallState
		{
			get
			{
				return this._CallState.Entity;
			}
			set
			{
				CallState previousValue = this._CallState.Entity;
				if (((previousValue != value) 
							|| (this._CallState.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CallState.Entity = null;
						previousValue.Phones.Remove(this);
					}
					this._CallState.Entity = value;
					if ((value != null))
					{
						value.Phones.Add(this);
						this._CallStateId = value.Id;
					}
					else
					{
						this._CallStateId = default(int);
					}
					this.SendPropertyChanged("CallState");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RejectionReason_Phone", Storage="_RejectionReason", ThisKey="RejectReasonId", OtherKey="Id", IsForeignKey=true)]
		public RejectionReason RejectionReason
		{
			get
			{
				return this._RejectionReason.Entity;
			}
			set
			{
				RejectionReason previousValue = this._RejectionReason.Entity;
				if (((previousValue != value) 
							|| (this._RejectionReason.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RejectionReason.Entity = null;
						previousValue.Phones.Remove(this);
					}
					this._RejectionReason.Entity = value;
					if ((value != null))
					{
						value.Phones.Add(this);
						this._RejectReasonId = value.Id;
					}
					else
					{
						this._RejectReasonId = default(Nullable<int>);
					}
					this.SendPropertyChanged("RejectionReason");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Phone", Storage="_User", ThisKey="EmployeeId", OtherKey="ID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Phones.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Phones.Add(this);
						this._EmployeeId = value.ID;
					}
					else
					{
						this._EmployeeId = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PhoneDatas(PhoneData entity)
		{
			this.SendPropertyChanging();
			entity.Phone = this;
		}
		
		private void detach_PhoneDatas(PhoneData entity)
		{
			this.SendPropertyChanging();
			entity.Phone = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Calender")]
	public partial class Calender : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _UserId;
		
		private string _Event;
		
		private System.DateTime _EventFrom;
		
		private System.DateTime _EventTo;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnEventChanging(string value);
    partial void OnEventChanged();
    partial void OnEventFromChanging(System.DateTime value);
    partial void OnEventFromChanged();
    partial void OnEventToChanging(System.DateTime value);
    partial void OnEventToChanged();
    #endregion
		
		public Calender()
		{
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL")]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Event", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string Event
		{
			get
			{
				return this._Event;
			}
			set
			{
				if ((this._Event != value))
				{
					this.OnEventChanging(value);
					this.SendPropertyChanging();
					this._Event = value;
					this.SendPropertyChanged("Event");
					this.OnEventChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventFrom", DbType="DateTime NOT NULL")]
		public System.DateTime EventFrom
		{
			get
			{
				return this._EventFrom;
			}
			set
			{
				if ((this._EventFrom != value))
				{
					this.OnEventFromChanging(value);
					this.SendPropertyChanging();
					this._EventFrom = value;
					this.SendPropertyChanged("EventFrom");
					this.OnEventFromChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventTo", DbType="DateTime NOT NULL")]
		public System.DateTime EventTo
		{
			get
			{
				return this._EventTo;
			}
			set
			{
				if ((this._EventTo != value))
				{
					this.OnEventToChanging(value);
					this.SendPropertyChanging();
					this._EventTo = value;
					this.SendPropertyChanged("EventTo");
					this.OnEventToChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Calender", Storage="_User", ThisKey="UserId", OtherKey="ID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Calenders.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Calenders.Add(this);
						this._UserId = value.ID;
					}
					else
					{
						this._UserId = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ResellerTransformationRequest")]
	public partial class ResellerTransformationRequest : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _ResellerId;
		
		private int _TransferFrom;
		
		private int _TransferTo;
		
		private decimal _Amount;
		
		private System.Nullable<bool> _Status;
		
		private int _UserId;
		
		private System.Nullable<System.DateTime> _date;
		
		private EntityRef<User> _User;
		
		private EntityRef<User> _User1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnResellerIdChanging(int value);
    partial void OnResellerIdChanged();
    partial void OnTransferFromChanging(int value);
    partial void OnTransferFromChanged();
    partial void OnTransferToChanging(int value);
    partial void OnTransferToChanged();
    partial void OnAmountChanging(decimal value);
    partial void OnAmountChanged();
    partial void OnStatusChanging(System.Nullable<bool> value);
    partial void OnStatusChanged();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OndateChanging(System.Nullable<System.DateTime> value);
    partial void OndateChanged();
    #endregion
		
		public ResellerTransformationRequest()
		{
			this._User = default(EntityRef<User>);
			this._User1 = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResellerId", DbType="Int")]
		public int ResellerId
		{
			get
			{
				return this._ResellerId;
			}
			set
			{
				if ((this._ResellerId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnResellerIdChanging(value);
					this.SendPropertyChanging();
					this._ResellerId = value;
					this.SendPropertyChanged("ResellerId");
					this.OnResellerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransferFrom", DbType="Int")]
		public int TransferFrom
		{
			get
			{
				return this._TransferFrom;
			}
			set
			{
				if ((this._TransferFrom != value))
				{
					this.OnTransferFromChanging(value);
					this.SendPropertyChanging();
					this._TransferFrom = value;
					this.SendPropertyChanged("TransferFrom");
					this.OnTransferFromChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransferTo", DbType="Int")]
		public int TransferTo
		{
			get
			{
				return this._TransferTo;
			}
			set
			{
				if ((this._TransferTo != value))
				{
					this.OnTransferToChanging(value);
					this.SendPropertyChanging();
					this._TransferTo = value;
					this.SendPropertyChanged("TransferTo");
					this.OnTransferToChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(18,2)")]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Bit")]
		public System.Nullable<bool> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int")]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._User1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Date", Storage="_date", DbType="datetime")]
		public System.Nullable<System.DateTime> date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this.OndateChanging(value);
					this.SendPropertyChanging();
					this._date = value;
					this.SendPropertyChanged("date");
					this.OndateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_ResellerTransformationRequest", Storage="_User", ThisKey="ResellerId", OtherKey="ID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.ResellerTransformationRequests.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.ResellerTransformationRequests.Add(this);
						this._ResellerId = value.ID;
					}
					else
					{
						this._ResellerId = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_ResellerTransformationRequest1", Storage="_User1", ThisKey="UserId", OtherKey="ID", IsForeignKey=true)]
		public User User1
		{
			get
			{
				return this._User1.Entity;
			}
			set
			{
				User previousValue = this._User1.Entity;
				if (((previousValue != value) 
							|| (this._User1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User1.Entity = null;
						previousValue.ResellerTransformationRequests1.Remove(this);
					}
					this._User1.Entity = value;
					if ((value != null))
					{
						value.ResellerTransformationRequests1.Add(this);
						this._UserId = value.ID;
					}
					else
					{
						this._UserId = default(int);
					}
					this.SendPropertyChanged("User1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WorkOrderCredit")]
	public partial class WorkOrderCredit : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _WorkOrderId;
		
		private decimal _CreditAmount;
		
		private int _UserId;
		
		private System.DateTime _Time;
		
		private string _Notes;
		
		private EntityRef<User> _User;
		
		private EntityRef<WorkOrder> _WorkOrder;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnWorkOrderIdChanging(int value);
    partial void OnWorkOrderIdChanged();
    partial void OnCreditAmountChanging(decimal value);
    partial void OnCreditAmountChanged();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnTimeChanging(System.DateTime value);
    partial void OnTimeChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    #endregion
		
		public WorkOrderCredit()
		{
			this._User = default(EntityRef<User>);
			this._WorkOrder = default(EntityRef<WorkOrder>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkOrderId", DbType="Int NOT NULL")]
		public int WorkOrderId
		{
			get
			{
				return this._WorkOrderId;
			}
			set
			{
				if ((this._WorkOrderId != value))
				{
					if (this._WorkOrder.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWorkOrderIdChanging(value);
					this.SendPropertyChanging();
					this._WorkOrderId = value;
					this.SendPropertyChanged("WorkOrderId");
					this.OnWorkOrderIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreditAmount", DbType="Decimal(18,3) NOT NULL")]
		public decimal CreditAmount
		{
			get
			{
				return this._CreditAmount;
			}
			set
			{
				if ((this._CreditAmount != value))
				{
					this.OnCreditAmountChanging(value);
					this.SendPropertyChanging();
					this._CreditAmount = value;
					this.SendPropertyChanged("CreditAmount");
					this.OnCreditAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL")]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time", DbType="DateTime NOT NULL")]
		public System.DateTime Time
		{
			get
			{
				return this._Time;
			}
			set
			{
				if ((this._Time != value))
				{
					this.OnTimeChanging(value);
					this.SendPropertyChanging();
					this._Time = value;
					this.SendPropertyChanged("Time");
					this.OnTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(MAX)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_WorkOrderCredit", Storage="_User", ThisKey="UserId", OtherKey="ID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.WorkOrderCredits.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.WorkOrderCredits.Add(this);
						this._UserId = value.ID;
					}
					else
					{
						this._UserId = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WorkOrder_WorkOrderCredit", Storage="_WorkOrder", ThisKey="WorkOrderId", OtherKey="ID", IsForeignKey=true)]
		public WorkOrder WorkOrder
		{
			get
			{
				return this._WorkOrder.Entity;
			}
			set
			{
				WorkOrder previousValue = this._WorkOrder.Entity;
				if (((previousValue != value) 
							|| (this._WorkOrder.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WorkOrder.Entity = null;
						previousValue.WorkOrderCredits.Remove(this);
					}
					this._WorkOrder.Entity = value;
					if ((value != null))
					{
						value.WorkOrderCredits.Add(this);
						this._WorkOrderId = value.ID;
					}
					else
					{
						this._WorkOrderId = default(int);
					}
					this.SendPropertyChanged("WorkOrder");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PersonalEmail")]
	public partial class PersonalEmail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _PersonalMail;
		
		private string _PersonalPassword;
		
		private string _Pop3;
		
		private int _Port;
		
		private int _UserId;
		
		private string _SmtpClient;
		
		private bool _SSL;
		
		private bool _Active;
		
		private string _SenderUserName;
		
		private string _SenderPassWord;
		
		private int _SendPort;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnPersonalMailChanging(string value);
    partial void OnPersonalMailChanged();
    partial void OnPersonalPasswordChanging(string value);
    partial void OnPersonalPasswordChanged();
    partial void OnPop3Changing(string value);
    partial void OnPop3Changed();
    partial void OnPortChanging(int value);
    partial void OnPortChanged();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnSmtpClientChanging(string value);
    partial void OnSmtpClientChanged();
    partial void OnSSLChanging(bool value);
    partial void OnSSLChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    partial void OnSenderUserNameChanging(string value);
    partial void OnSenderUserNameChanged();
    partial void OnSenderPassWordChanging(string value);
    partial void OnSenderPassWordChanged();
    partial void OnSendPortChanging(int value);
    partial void OnSendPortChanged();
    #endregion
		
		public PersonalEmail()
		{
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonalMail", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string PersonalMail
		{
			get
			{
				return this._PersonalMail;
			}
			set
			{
				if ((this._PersonalMail != value))
				{
					this.OnPersonalMailChanging(value);
					this.SendPropertyChanging();
					this._PersonalMail = value;
					this.SendPropertyChanged("PersonalMail");
					this.OnPersonalMailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonalPassword", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string PersonalPassword
		{
			get
			{
				return this._PersonalPassword;
			}
			set
			{
				if ((this._PersonalPassword != value))
				{
					this.OnPersonalPasswordChanging(value);
					this.SendPropertyChanging();
					this._PersonalPassword = value;
					this.SendPropertyChanged("PersonalPassword");
					this.OnPersonalPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pop3", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Pop3
		{
			get
			{
				return this._Pop3;
			}
			set
			{
				if ((this._Pop3 != value))
				{
					this.OnPop3Changing(value);
					this.SendPropertyChanging();
					this._Pop3 = value;
					this.SendPropertyChanged("Pop3");
					this.OnPop3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Port", DbType="Int NOT NULL")]
		public int Port
		{
			get
			{
				return this._Port;
			}
			set
			{
				if ((this._Port != value))
				{
					this.OnPortChanging(value);
					this.SendPropertyChanging();
					this._Port = value;
					this.SendPropertyChanged("Port");
					this.OnPortChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL")]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SmtpClient", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string SmtpClient
		{
			get
			{
				return this._SmtpClient;
			}
			set
			{
				if ((this._SmtpClient != value))
				{
					this.OnSmtpClientChanging(value);
					this.SendPropertyChanging();
					this._SmtpClient = value;
					this.SendPropertyChanged("SmtpClient");
					this.OnSmtpClientChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SSL", DbType="Bit NOT NULL")]
		public bool SSL
		{
			get
			{
				return this._SSL;
			}
			set
			{
				if ((this._SSL != value))
				{
					this.OnSSLChanging(value);
					this.SendPropertyChanging();
					this._SSL = value;
					this.SendPropertyChanged("SSL");
					this.OnSSLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SenderUserName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string SenderUserName
		{
			get
			{
				return this._SenderUserName;
			}
			set
			{
				if ((this._SenderUserName != value))
				{
					this.OnSenderUserNameChanging(value);
					this.SendPropertyChanging();
					this._SenderUserName = value;
					this.SendPropertyChanged("SenderUserName");
					this.OnSenderUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SenderPassWord", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string SenderPassWord
		{
			get
			{
				return this._SenderPassWord;
			}
			set
			{
				if ((this._SenderPassWord != value))
				{
					this.OnSenderPassWordChanging(value);
					this.SendPropertyChanging();
					this._SenderPassWord = value;
					this.SendPropertyChanged("SenderPassWord");
					this.OnSenderPassWordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SendPort", DbType="Int NOT NULL")]
		public int SendPort
		{
			get
			{
				return this._SendPort;
			}
			set
			{
				if ((this._SendPort != value))
				{
					this.OnSendPortChanging(value);
					this.SendPropertyChanging();
					this._SendPort = value;
					this.SendPropertyChanged("SendPort");
					this.OnSendPortChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_PersonalEmail", Storage="_User", ThisKey="UserId", OtherKey="ID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.PersonalEmails.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.PersonalEmails.Add(this);
						this._UserId = value.ID;
					}
					else
					{
						this._UserId = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Fawry")]
	public partial class Fawry : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _FawryID;
		
		private string _PMT_TRANS_ID1;
		
		private string _PMT_TRANS_ID2;
		
		private string _PMT_TRANS_ID3;
		
		private string _PMT_TRANS_ID4;
		
		private System.Nullable<System.DateTime> _PMT_Date;
		
		private System.Nullable<double> _PaidAmount;
		
		private System.Nullable<long> _FK_CustomerID;
		
		private System.Nullable<long> _FK_PaymentID;
		
		private System.Nullable<bool> _PMT_type;
		
		private string _BillingAccount;
		
		private System.Nullable<bool> _IsNew;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFawryIDChanging(long value);
    partial void OnFawryIDChanged();
    partial void OnPMT_TRANS_ID1Changing(string value);
    partial void OnPMT_TRANS_ID1Changed();
    partial void OnPMT_TRANS_ID2Changing(string value);
    partial void OnPMT_TRANS_ID2Changed();
    partial void OnPMT_TRANS_ID3Changing(string value);
    partial void OnPMT_TRANS_ID3Changed();
    partial void OnPMT_TRANS_ID4Changing(string value);
    partial void OnPMT_TRANS_ID4Changed();
    partial void OnPMT_DateChanging(System.Nullable<System.DateTime> value);
    partial void OnPMT_DateChanged();
    partial void OnPaidAmountChanging(System.Nullable<double> value);
    partial void OnPaidAmountChanged();
    partial void OnFK_CustomerIDChanging(System.Nullable<long> value);
    partial void OnFK_CustomerIDChanged();
    partial void OnFK_PaymentIDChanging(System.Nullable<long> value);
    partial void OnFK_PaymentIDChanged();
    partial void OnPMT_typeChanging(System.Nullable<bool> value);
    partial void OnPMT_typeChanged();
    partial void OnBillingAccountChanging(string value);
    partial void OnBillingAccountChanged();
    partial void OnIsNewChanging(System.Nullable<bool> value);
    partial void OnIsNewChanged();
    #endregion
		
		public Fawry()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FawryID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long FawryID
		{
			get
			{
				return this._FawryID;
			}
			set
			{
				if ((this._FawryID != value))
				{
					this.OnFawryIDChanging(value);
					this.SendPropertyChanging();
					this._FawryID = value;
					this.SendPropertyChanged("FawryID");
					this.OnFawryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PMT_TRANS_ID1", DbType="VarChar(50)")]
		public string PMT_TRANS_ID1
		{
			get
			{
				return this._PMT_TRANS_ID1;
			}
			set
			{
				if ((this._PMT_TRANS_ID1 != value))
				{
					this.OnPMT_TRANS_ID1Changing(value);
					this.SendPropertyChanging();
					this._PMT_TRANS_ID1 = value;
					this.SendPropertyChanged("PMT_TRANS_ID1");
					this.OnPMT_TRANS_ID1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PMT_TRANS_ID2", DbType="VarChar(50)")]
		public string PMT_TRANS_ID2
		{
			get
			{
				return this._PMT_TRANS_ID2;
			}
			set
			{
				if ((this._PMT_TRANS_ID2 != value))
				{
					this.OnPMT_TRANS_ID2Changing(value);
					this.SendPropertyChanging();
					this._PMT_TRANS_ID2 = value;
					this.SendPropertyChanged("PMT_TRANS_ID2");
					this.OnPMT_TRANS_ID2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PMT_TRANS_ID3", DbType="VarChar(50)")]
		public string PMT_TRANS_ID3
		{
			get
			{
				return this._PMT_TRANS_ID3;
			}
			set
			{
				if ((this._PMT_TRANS_ID3 != value))
				{
					this.OnPMT_TRANS_ID3Changing(value);
					this.SendPropertyChanging();
					this._PMT_TRANS_ID3 = value;
					this.SendPropertyChanged("PMT_TRANS_ID3");
					this.OnPMT_TRANS_ID3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PMT_TRANS_ID4", DbType="VarChar(50)")]
		public string PMT_TRANS_ID4
		{
			get
			{
				return this._PMT_TRANS_ID4;
			}
			set
			{
				if ((this._PMT_TRANS_ID4 != value))
				{
					this.OnPMT_TRANS_ID4Changing(value);
					this.SendPropertyChanging();
					this._PMT_TRANS_ID4 = value;
					this.SendPropertyChanged("PMT_TRANS_ID4");
					this.OnPMT_TRANS_ID4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PMT_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> PMT_Date
		{
			get
			{
				return this._PMT_Date;
			}
			set
			{
				if ((this._PMT_Date != value))
				{
					this.OnPMT_DateChanging(value);
					this.SendPropertyChanging();
					this._PMT_Date = value;
					this.SendPropertyChanged("PMT_Date");
					this.OnPMT_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaidAmount", DbType="Float")]
		public System.Nullable<double> PaidAmount
		{
			get
			{
				return this._PaidAmount;
			}
			set
			{
				if ((this._PaidAmount != value))
				{
					this.OnPaidAmountChanging(value);
					this.SendPropertyChanging();
					this._PaidAmount = value;
					this.SendPropertyChanged("PaidAmount");
					this.OnPaidAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FK_CustomerID", DbType="BigInt")]
		public System.Nullable<long> FK_CustomerID
		{
			get
			{
				return this._FK_CustomerID;
			}
			set
			{
				if ((this._FK_CustomerID != value))
				{
					this.OnFK_CustomerIDChanging(value);
					this.SendPropertyChanging();
					this._FK_CustomerID = value;
					this.SendPropertyChanged("FK_CustomerID");
					this.OnFK_CustomerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FK_PaymentID", DbType="BigInt")]
		public System.Nullable<long> FK_PaymentID
		{
			get
			{
				return this._FK_PaymentID;
			}
			set
			{
				if ((this._FK_PaymentID != value))
				{
					this.OnFK_PaymentIDChanging(value);
					this.SendPropertyChanging();
					this._FK_PaymentID = value;
					this.SendPropertyChanged("FK_PaymentID");
					this.OnFK_PaymentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PMT_type", DbType="Bit")]
		public System.Nullable<bool> PMT_type
		{
			get
			{
				return this._PMT_type;
			}
			set
			{
				if ((this._PMT_type != value))
				{
					this.OnPMT_typeChanging(value);
					this.SendPropertyChanging();
					this._PMT_type = value;
					this.SendPropertyChanged("PMT_type");
					this.OnPMT_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BillingAccount", DbType="NVarChar(50)")]
		public string BillingAccount
		{
			get
			{
				return this._BillingAccount;
			}
			set
			{
				if ((this._BillingAccount != value))
				{
					this.OnBillingAccountChanging(value);
					this.SendPropertyChanging();
					this._BillingAccount = value;
					this.SendPropertyChanged("BillingAccount");
					this.OnBillingAccountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsNew", DbType="Bit")]
		public System.Nullable<bool> IsNew
		{
			get
			{
				return this._IsNew;
			}
			set
			{
				if ((this._IsNew != value))
				{
					this.OnIsNewChanging(value);
					this.SendPropertyChanging();
					this._IsNew = value;
					this.SendPropertyChanged("IsNew");
					this.OnIsNewChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SPoptionReselleraccount")]
	public partial class SPoptionReselleraccount : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _ProviderId;
		
		private EntityRef<ServiceProvider> _ServiceProvider;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnProviderIdChanging(System.Nullable<int> value);
    partial void OnProviderIdChanged();
    #endregion
		
		public SPoptionReselleraccount()
		{
			this._ServiceProvider = default(EntityRef<ServiceProvider>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProviderId", DbType="Int")]
		public System.Nullable<int> ProviderId
		{
			get
			{
				return this._ProviderId;
			}
			set
			{
				if ((this._ProviderId != value))
				{
					if (this._ServiceProvider.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProviderIdChanging(value);
					this.SendPropertyChanging();
					this._ProviderId = value;
					this.SendPropertyChanged("ProviderId");
					this.OnProviderIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ServiceProvider_SPoptionReselleraccount", Storage="_ServiceProvider", ThisKey="ProviderId", OtherKey="ID", IsForeignKey=true)]
		public ServiceProvider ServiceProvider
		{
			get
			{
				return this._ServiceProvider.Entity;
			}
			set
			{
				ServiceProvider previousValue = this._ServiceProvider.Entity;
				if (((previousValue != value) 
							|| (this._ServiceProvider.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ServiceProvider.Entity = null;
						previousValue.SPoptionReselleraccounts.Remove(this);
					}
					this._ServiceProvider.Entity = value;
					if ((value != null))
					{
						value.SPoptionReselleraccounts.Add(this);
						this._ProviderId = value.ID;
					}
					else
					{
						this._ProviderId = default(Nullable<int>);
					}
					this.SendPropertyChanged("ServiceProvider");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RecieveRouter")]
	public partial class RecieveRouter : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _RouterSerial;
		
		private int _StoreId;
		
		private System.Nullable<int> _CompanyConfirmerUserId;
		
		private System.Nullable<int> _CustomerConfirmerUserId;
		
		private System.Nullable<int> _WorkOrderId;
		
		private System.Nullable<System.DateTime> _CompanyProcessDate;
		
		private System.Nullable<System.DateTime> _CustomerProcessDate;
		
		private string _Attachments;
		
		private System.Nullable<bool> _IsRecieved;
		
		private string _Attachments2;
		
		private string _RouterType;
		
		private System.Nullable<int> _WorkOrderIdRecive;
		
		private EntityRef<Store> _Store;
		
		private EntityRef<User> _User;
		
		private EntityRef<User> _User1;
		
		private EntityRef<WorkOrder> _WorkOrder;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnRouterSerialChanging(string value);
    partial void OnRouterSerialChanged();
    partial void OnStoreIdChanging(int value);
    partial void OnStoreIdChanged();
    partial void OnCompanyConfirmerUserIdChanging(System.Nullable<int> value);
    partial void OnCompanyConfirmerUserIdChanged();
    partial void OnCustomerConfirmerUserIdChanging(System.Nullable<int> value);
    partial void OnCustomerConfirmerUserIdChanged();
    partial void OnWorkOrderIdChanging(System.Nullable<int> value);
    partial void OnWorkOrderIdChanged();
    partial void OnCompanyProcessDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCompanyProcessDateChanged();
    partial void OnCustomerProcessDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCustomerProcessDateChanged();
    partial void OnAttachmentsChanging(string value);
    partial void OnAttachmentsChanged();
    partial void OnIsRecievedChanging(System.Nullable<bool> value);
    partial void OnIsRecievedChanged();
    partial void OnAttachments2Changing(string value);
    partial void OnAttachments2Changed();
    partial void OnRouterTypeChanging(string value);
    partial void OnRouterTypeChanged();
    partial void OnWorkOrderIdReciveChanging(System.Nullable<int> value);
    partial void OnWorkOrderIdReciveChanged();
    #endregion
		
		public RecieveRouter()
		{
			this._Store = default(EntityRef<Store>);
			this._User = default(EntityRef<User>);
			this._User1 = default(EntityRef<User>);
			this._WorkOrder = default(EntityRef<WorkOrder>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RouterSerial", DbType="NVarChar(150)")]
		public string RouterSerial
		{
			get
			{
				return this._RouterSerial;
			}
			set
			{
				if ((this._RouterSerial != value))
				{
					this.OnRouterSerialChanging(value);
					this.SendPropertyChanging();
					this._RouterSerial = value;
					this.SendPropertyChanged("RouterSerial");
					this.OnRouterSerialChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StoreId", DbType="Int NOT NULL")]
		public int StoreId
		{
			get
			{
				return this._StoreId;
			}
			set
			{
				if ((this._StoreId != value))
				{
					if (this._Store.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStoreIdChanging(value);
					this.SendPropertyChanging();
					this._StoreId = value;
					this.SendPropertyChanged("StoreId");
					this.OnStoreIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyConfirmerUserId", DbType="Int")]
		public System.Nullable<int> CompanyConfirmerUserId
		{
			get
			{
				return this._CompanyConfirmerUserId;
			}
			set
			{
				if ((this._CompanyConfirmerUserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyConfirmerUserIdChanging(value);
					this.SendPropertyChanging();
					this._CompanyConfirmerUserId = value;
					this.SendPropertyChanged("CompanyConfirmerUserId");
					this.OnCompanyConfirmerUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerConfirmerUserId", DbType="Int")]
		public System.Nullable<int> CustomerConfirmerUserId
		{
			get
			{
				return this._CustomerConfirmerUserId;
			}
			set
			{
				if ((this._CustomerConfirmerUserId != value))
				{
					if (this._User1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerConfirmerUserIdChanging(value);
					this.SendPropertyChanging();
					this._CustomerConfirmerUserId = value;
					this.SendPropertyChanged("CustomerConfirmerUserId");
					this.OnCustomerConfirmerUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkOrderId", DbType="Int")]
		public System.Nullable<int> WorkOrderId
		{
			get
			{
				return this._WorkOrderId;
			}
			set
			{
				if ((this._WorkOrderId != value))
				{
					if (this._WorkOrder.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWorkOrderIdChanging(value);
					this.SendPropertyChanging();
					this._WorkOrderId = value;
					this.SendPropertyChanged("WorkOrderId");
					this.OnWorkOrderIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyProcessDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CompanyProcessDate
		{
			get
			{
				return this._CompanyProcessDate;
			}
			set
			{
				if ((this._CompanyProcessDate != value))
				{
					this.OnCompanyProcessDateChanging(value);
					this.SendPropertyChanging();
					this._CompanyProcessDate = value;
					this.SendPropertyChanged("CompanyProcessDate");
					this.OnCompanyProcessDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerProcessDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CustomerProcessDate
		{
			get
			{
				return this._CustomerProcessDate;
			}
			set
			{
				if ((this._CustomerProcessDate != value))
				{
					this.OnCustomerProcessDateChanging(value);
					this.SendPropertyChanging();
					this._CustomerProcessDate = value;
					this.SendPropertyChanged("CustomerProcessDate");
					this.OnCustomerProcessDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Attachments", DbType="NVarChar(550)")]
		public string Attachments
		{
			get
			{
				return this._Attachments;
			}
			set
			{
				if ((this._Attachments != value))
				{
					this.OnAttachmentsChanging(value);
					this.SendPropertyChanging();
					this._Attachments = value;
					this.SendPropertyChanged("Attachments");
					this.OnAttachmentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRecieved", DbType="Bit")]
		public System.Nullable<bool> IsRecieved
		{
			get
			{
				return this._IsRecieved;
			}
			set
			{
				if ((this._IsRecieved != value))
				{
					this.OnIsRecievedChanging(value);
					this.SendPropertyChanging();
					this._IsRecieved = value;
					this.SendPropertyChanged("IsRecieved");
					this.OnIsRecievedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Attachments2", DbType="NVarChar(550)")]
		public string Attachments2
		{
			get
			{
				return this._Attachments2;
			}
			set
			{
				if ((this._Attachments2 != value))
				{
					this.OnAttachments2Changing(value);
					this.SendPropertyChanging();
					this._Attachments2 = value;
					this.SendPropertyChanged("Attachments2");
					this.OnAttachments2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RouterType", DbType="NVarChar(150)")]
		public string RouterType
		{
			get
			{
				return this._RouterType;
			}
			set
			{
				if ((this._RouterType != value))
				{
					this.OnRouterTypeChanging(value);
					this.SendPropertyChanging();
					this._RouterType = value;
					this.SendPropertyChanged("RouterType");
					this.OnRouterTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkOrderIdRecive", DbType="Int")]
		public System.Nullable<int> WorkOrderIdRecive
		{
			get
			{
				return this._WorkOrderIdRecive;
			}
			set
			{
				if ((this._WorkOrderIdRecive != value))
				{
					this.OnWorkOrderIdReciveChanging(value);
					this.SendPropertyChanging();
					this._WorkOrderIdRecive = value;
					this.SendPropertyChanged("WorkOrderIdRecive");
					this.OnWorkOrderIdReciveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Store_RecieveRouter", Storage="_Store", ThisKey="StoreId", OtherKey="Id", IsForeignKey=true)]
		public Store Store
		{
			get
			{
				return this._Store.Entity;
			}
			set
			{
				Store previousValue = this._Store.Entity;
				if (((previousValue != value) 
							|| (this._Store.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Store.Entity = null;
						previousValue.RecieveRouters.Remove(this);
					}
					this._Store.Entity = value;
					if ((value != null))
					{
						value.RecieveRouters.Add(this);
						this._StoreId = value.Id;
					}
					else
					{
						this._StoreId = default(int);
					}
					this.SendPropertyChanged("Store");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_RecieveRouter", Storage="_User", ThisKey="CompanyConfirmerUserId", OtherKey="ID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.RecieveRouters.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.RecieveRouters.Add(this);
						this._CompanyConfirmerUserId = value.ID;
					}
					else
					{
						this._CompanyConfirmerUserId = default(Nullable<int>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_RecieveRouter1", Storage="_User1", ThisKey="CustomerConfirmerUserId", OtherKey="ID", IsForeignKey=true)]
		public User User1
		{
			get
			{
				return this._User1.Entity;
			}
			set
			{
				User previousValue = this._User1.Entity;
				if (((previousValue != value) 
							|| (this._User1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User1.Entity = null;
						previousValue.RecieveRouters1.Remove(this);
					}
					this._User1.Entity = value;
					if ((value != null))
					{
						value.RecieveRouters1.Add(this);
						this._CustomerConfirmerUserId = value.ID;
					}
					else
					{
						this._CustomerConfirmerUserId = default(Nullable<int>);
					}
					this.SendPropertyChanged("User1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WorkOrder_RecieveRouter", Storage="_WorkOrder", ThisKey="WorkOrderId", OtherKey="ID", IsForeignKey=true)]
		public WorkOrder WorkOrder
		{
			get
			{
				return this._WorkOrder.Entity;
			}
			set
			{
				WorkOrder previousValue = this._WorkOrder.Entity;
				if (((previousValue != value) 
							|| (this._WorkOrder.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WorkOrder.Entity = null;
						previousValue.RecieveRouters.Remove(this);
					}
					this._WorkOrder.Entity = value;
					if ((value != null))
					{
						value.RecieveRouters.Add(this);
						this._WorkOrderId = value.ID;
					}
					else
					{
						this._WorkOrderId = default(Nullable<int>);
					}
					this.SendPropertyChanged("WorkOrder");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.event")]
	public partial class @event : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _event_id;
		
		private int _UserId;
		
		private string _title;
		
		private string _description;
		
		private System.Nullable<System.DateTime> _event_start;
		
		private System.Nullable<System.DateTime> _event_end;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onevent_idChanging(int value);
    partial void Onevent_idChanged();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OntitleChanging(string value);
    partial void OntitleChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void Onevent_startChanging(System.Nullable<System.DateTime> value);
    partial void Onevent_startChanged();
    partial void Onevent_endChanging(System.Nullable<System.DateTime> value);
    partial void Onevent_endChanged();
    #endregion
		
		public @event()
		{
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_event_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int event_id
		{
			get
			{
				return this._event_id;
			}
			set
			{
				if ((this._event_id != value))
				{
					this.Onevent_idChanging(value);
					this.SendPropertyChanging();
					this._event_id = value;
					this.SendPropertyChanged("event_id");
					this.Onevent_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL")]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_title", DbType="NVarChar(300)")]
		public string title
		{
			get
			{
				return this._title;
			}
			set
			{
				if ((this._title != value))
				{
					this.OntitleChanging(value);
					this.SendPropertyChanging();
					this._title = value;
					this.SendPropertyChanged("title");
					this.OntitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="NVarChar(600)")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_event_start", DbType="DateTime")]
		public System.Nullable<System.DateTime> event_start
		{
			get
			{
				return this._event_start;
			}
			set
			{
				if ((this._event_start != value))
				{
					this.Onevent_startChanging(value);
					this.SendPropertyChanging();
					this._event_start = value;
					this.SendPropertyChanged("event_start");
					this.Onevent_startChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_event_end", DbType="DateTime")]
		public System.Nullable<System.DateTime> event_end
		{
			get
			{
				return this._event_end;
			}
			set
			{
				if ((this._event_end != value))
				{
					this.Onevent_endChanging(value);
					this.SendPropertyChanging();
					this._event_end = value;
					this.SendPropertyChanged("event_end");
					this.Onevent_endChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_event", Storage="_User", ThisKey="UserId", OtherKey="ID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.events.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.events.Add(this);
						this._UserId = value.ID;
					}
					else
					{
						this._UserId = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DisType")]
	public partial class DisType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _TypeName;
		
		private System.Nullable<decimal> _Price;
		
		private EntitySet<DisCard> _DisCards;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTypeNameChanging(string value);
    partial void OnTypeNameChanged();
    partial void OnPriceChanging(System.Nullable<decimal> value);
    partial void OnPriceChanged();
    #endregion
		
		public DisType()
		{
			this._DisCards = new EntitySet<DisCard>(new Action<DisCard>(this.attach_DisCards), new Action<DisCard>(this.detach_DisCards));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeName", DbType="NVarChar(50)")]
		public string TypeName
		{
			get
			{
				return this._TypeName;
			}
			set
			{
				if ((this._TypeName != value))
				{
					this.OnTypeNameChanging(value);
					this.SendPropertyChanging();
					this._TypeName = value;
					this.SendPropertyChanged("TypeName");
					this.OnTypeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DisType_DisCard", Storage="_DisCards", ThisKey="ID", OtherKey="DisTypeID")]
		public EntitySet<DisCard> DisCards
		{
			get
			{
				return this._DisCards;
			}
			set
			{
				this._DisCards.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DisCards(DisCard entity)
		{
			this.SendPropertyChanging();
			entity.DisType = this;
		}
		
		private void detach_DisCards(DisCard entity)
		{
			this.SendPropertyChanging();
			entity.DisType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DisCards")]
	public partial class DisCard : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _WorkOrderID;
		
		private System.Nullable<bool> _Status;
		
		private System.Nullable<int> _DisTypeID;
		
		private System.Nullable<int> _user_id;
		
		private System.Nullable<System.DateTime> _op_date;
		
		private EntityRef<DisType> _DisType;
		
		private EntityRef<User> _User;
		
		private EntityRef<WorkOrder> _WorkOrder;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnWorkOrderIDChanging(System.Nullable<int> value);
    partial void OnWorkOrderIDChanged();
    partial void OnStatusChanging(System.Nullable<bool> value);
    partial void OnStatusChanged();
    partial void OnDisTypeIDChanging(System.Nullable<int> value);
    partial void OnDisTypeIDChanged();
    partial void Onuser_idChanging(System.Nullable<int> value);
    partial void Onuser_idChanged();
    partial void Onop_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onop_dateChanged();
    #endregion
		
		public DisCard()
		{
			this._DisType = default(EntityRef<DisType>);
			this._User = default(EntityRef<User>);
			this._WorkOrder = default(EntityRef<WorkOrder>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkOrderID", DbType="Int")]
		public System.Nullable<int> WorkOrderID
		{
			get
			{
				return this._WorkOrderID;
			}
			set
			{
				if ((this._WorkOrderID != value))
				{
					if (this._WorkOrder.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWorkOrderIDChanging(value);
					this.SendPropertyChanging();
					this._WorkOrderID = value;
					this.SendPropertyChanged("WorkOrderID");
					this.OnWorkOrderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Bit")]
		public System.Nullable<bool> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisTypeID", DbType="Int")]
		public System.Nullable<int> DisTypeID
		{
			get
			{
				return this._DisTypeID;
			}
			set
			{
				if ((this._DisTypeID != value))
				{
					if (this._DisType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDisTypeIDChanging(value);
					this.SendPropertyChanging();
					this._DisTypeID = value;
					this.SendPropertyChanged("DisTypeID");
					this.OnDisTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_id", DbType="Int")]
		public System.Nullable<int> user_id
		{
			get
			{
				return this._user_id;
			}
			set
			{
				if ((this._user_id != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onuser_idChanging(value);
					this.SendPropertyChanging();
					this._user_id = value;
					this.SendPropertyChanged("user_id");
					this.Onuser_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_op_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> op_date
		{
			get
			{
				return this._op_date;
			}
			set
			{
				if ((this._op_date != value))
				{
					this.Onop_dateChanging(value);
					this.SendPropertyChanging();
					this._op_date = value;
					this.SendPropertyChanged("op_date");
					this.Onop_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DisType_DisCard", Storage="_DisType", ThisKey="DisTypeID", OtherKey="ID", IsForeignKey=true)]
		public DisType DisType
		{
			get
			{
				return this._DisType.Entity;
			}
			set
			{
				DisType previousValue = this._DisType.Entity;
				if (((previousValue != value) 
							|| (this._DisType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DisType.Entity = null;
						previousValue.DisCards.Remove(this);
					}
					this._DisType.Entity = value;
					if ((value != null))
					{
						value.DisCards.Add(this);
						this._DisTypeID = value.ID;
					}
					else
					{
						this._DisTypeID = default(Nullable<int>);
					}
					this.SendPropertyChanged("DisType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_DisCard", Storage="_User", ThisKey="user_id", OtherKey="ID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.DisCards.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.DisCards.Add(this);
						this._user_id = value.ID;
					}
					else
					{
						this._user_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WorkOrder_DisCard", Storage="_WorkOrder", ThisKey="WorkOrderID", OtherKey="ID", IsForeignKey=true)]
		public WorkOrder WorkOrder
		{
			get
			{
				return this._WorkOrder.Entity;
			}
			set
			{
				WorkOrder previousValue = this._WorkOrder.Entity;
				if (((previousValue != value) 
							|| (this._WorkOrder.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WorkOrder.Entity = null;
						previousValue.DisCards.Remove(this);
					}
					this._WorkOrder.Entity = value;
					if ((value != null))
					{
						value.DisCards.Add(this);
						this._WorkOrderID = value.ID;
					}
					else
					{
						this._WorkOrderID = default(Nullable<int>);
					}
					this.SendPropertyChanged("WorkOrder");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EmpDayAbsType")]
	public partial class EmpDayAbsType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public EmpDayAbsType()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EmphalfAbsType")]
	public partial class EmphalfAbsType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public EmphalfAbsType()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EmployeeAssemplies")]
	public partial class EmployeeAssemply : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _EmployeeId;
		
		private int _Type;
		
		private decimal _Increase;
		
		private System.DateTime _Time;
		
		private EntityRef<Employe> _Employe;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnEmployeeIdChanging(int value);
    partial void OnEmployeeIdChanged();
    partial void OnTypeChanging(int value);
    partial void OnTypeChanged();
    partial void OnIncreaseChanging(decimal value);
    partial void OnIncreaseChanged();
    partial void OnTimeChanging(System.DateTime value);
    partial void OnTimeChanged();
    #endregion
		
		public EmployeeAssemply()
		{
			this._Employe = default(EntityRef<Employe>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeId", DbType="Int NOT NULL")]
		public int EmployeeId
		{
			get
			{
				return this._EmployeeId;
			}
			set
			{
				if ((this._EmployeeId != value))
				{
					if (this._Employe.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmployeeIdChanging(value);
					this.SendPropertyChanging();
					this._EmployeeId = value;
					this.SendPropertyChanged("EmployeeId");
					this.OnEmployeeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int NOT NULL")]
		public int Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Increase", DbType="Money NOT NULL")]
		public decimal Increase
		{
			get
			{
				return this._Increase;
			}
			set
			{
				if ((this._Increase != value))
				{
					this.OnIncreaseChanging(value);
					this.SendPropertyChanging();
					this._Increase = value;
					this.SendPropertyChanged("Increase");
					this.OnIncreaseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time", DbType="DateTime NOT NULL")]
		public System.DateTime Time
		{
			get
			{
				return this._Time;
			}
			set
			{
				if ((this._Time != value))
				{
					this.OnTimeChanging(value);
					this.SendPropertyChanging();
					this._Time = value;
					this.SendPropertyChanged("Time");
					this.OnTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employe_EmployeeAssemply", Storage="_Employe", ThisKey="EmployeeId", OtherKey="Id", IsForeignKey=true)]
		public Employe Employe
		{
			get
			{
				return this._Employe.Entity;
			}
			set
			{
				Employe previousValue = this._Employe.Entity;
				if (((previousValue != value) 
							|| (this._Employe.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employe.Entity = null;
						previousValue.EmployeeAssemplies.Remove(this);
					}
					this._Employe.Entity = value;
					if ((value != null))
					{
						value.EmployeeAssemplies.Add(this);
						this._EmployeeId = value.Id;
					}
					else
					{
						this._EmployeeId = default(int);
					}
					this.SendPropertyChanged("Employe");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EmployeeDebits")]
	public partial class EmployeeDebit : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _employeeId;
		
		private decimal _Debit;
		
		private System.DateTime _Time;
		
		private int _saveid;
		
		private string _note;
		
		private EntityRef<Employe> _Employe;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnemployeeIdChanging(int value);
    partial void OnemployeeIdChanged();
    partial void OnDebitChanging(decimal value);
    partial void OnDebitChanged();
    partial void OnTimeChanging(System.DateTime value);
    partial void OnTimeChanged();
    partial void OnsaveidChanging(int value);
    partial void OnsaveidChanged();
    partial void OnnoteChanging(string value);
    partial void OnnoteChanged();
    #endregion
		
		public EmployeeDebit()
		{
			this._Employe = default(EntityRef<Employe>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_employeeId", DbType="Int NOT NULL")]
		public int employeeId
		{
			get
			{
				return this._employeeId;
			}
			set
			{
				if ((this._employeeId != value))
				{
					if (this._Employe.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnemployeeIdChanging(value);
					this.SendPropertyChanging();
					this._employeeId = value;
					this.SendPropertyChanged("employeeId");
					this.OnemployeeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Debit", DbType="Money NOT NULL")]
		public decimal Debit
		{
			get
			{
				return this._Debit;
			}
			set
			{
				if ((this._Debit != value))
				{
					this.OnDebitChanging(value);
					this.SendPropertyChanging();
					this._Debit = value;
					this.SendPropertyChanged("Debit");
					this.OnDebitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time", DbType="DateTime NOT NULL")]
		public System.DateTime Time
		{
			get
			{
				return this._Time;
			}
			set
			{
				if ((this._Time != value))
				{
					this.OnTimeChanging(value);
					this.SendPropertyChanging();
					this._Time = value;
					this.SendPropertyChanged("Time");
					this.OnTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_saveid", DbType="Int NOT NULL")]
		public int saveid
		{
			get
			{
				return this._saveid;
			}
			set
			{
				if ((this._saveid != value))
				{
					this.OnsaveidChanging(value);
					this.SendPropertyChanging();
					this._saveid = value;
					this.SendPropertyChanged("saveid");
					this.OnsaveidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_note", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string note
		{
			get
			{
				return this._note;
			}
			set
			{
				if ((this._note != value))
				{
					this.OnnoteChanging(value);
					this.SendPropertyChanging();
					this._note = value;
					this.SendPropertyChanged("note");
					this.OnnoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employe_EmployeeDebit", Storage="_Employe", ThisKey="employeeId", OtherKey="Id", IsForeignKey=true)]
		public Employe Employe
		{
			get
			{
				return this._Employe.Entity;
			}
			set
			{
				Employe previousValue = this._Employe.Entity;
				if (((previousValue != value) 
							|| (this._Employe.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employe.Entity = null;
						previousValue.EmployeeDebits.Remove(this);
					}
					this._Employe.Entity = value;
					if ((value != null))
					{
						value.EmployeeDebits.Add(this);
						this._employeeId = value.Id;
					}
					else
					{
						this._employeeId = default(int);
					}
					this.SendPropertyChanged("Employe");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EmployeeSalaries")]
	public partial class EmployeeSalary : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _employeeId;
		
		private decimal _TotalAbsences;
		
		private decimal _TotalDebits;
		
		private decimal _TotalSalary;
		
		private decimal _Salary;
		
		private decimal _TotalTravels;
		
		private decimal _Awards;
		
		private decimal _FullSalary;
		
		private decimal _Discounts;
		
		private int _Year;
		
		private int _Month;
		
		private EntityRef<Employe> _Employe;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnemployeeIdChanging(int value);
    partial void OnemployeeIdChanged();
    partial void OnTotalAbsencesChanging(decimal value);
    partial void OnTotalAbsencesChanged();
    partial void OnTotalDebitsChanging(decimal value);
    partial void OnTotalDebitsChanged();
    partial void OnTotalSalaryChanging(decimal value);
    partial void OnTotalSalaryChanged();
    partial void OnSalaryChanging(decimal value);
    partial void OnSalaryChanged();
    partial void OnTotalTravelsChanging(decimal value);
    partial void OnTotalTravelsChanged();
    partial void OnAwardsChanging(decimal value);
    partial void OnAwardsChanged();
    partial void OnFullSalaryChanging(decimal value);
    partial void OnFullSalaryChanged();
    partial void OnDiscountsChanging(decimal value);
    partial void OnDiscountsChanged();
    partial void OnYearChanging(int value);
    partial void OnYearChanged();
    partial void OnMonthChanging(int value);
    partial void OnMonthChanged();
    #endregion
		
		public EmployeeSalary()
		{
			this._Employe = default(EntityRef<Employe>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_employeeId", DbType="Int NOT NULL")]
		public int employeeId
		{
			get
			{
				return this._employeeId;
			}
			set
			{
				if ((this._employeeId != value))
				{
					if (this._Employe.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnemployeeIdChanging(value);
					this.SendPropertyChanging();
					this._employeeId = value;
					this.SendPropertyChanged("employeeId");
					this.OnemployeeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalAbsences", DbType="Money NOT NULL")]
		public decimal TotalAbsences
		{
			get
			{
				return this._TotalAbsences;
			}
			set
			{
				if ((this._TotalAbsences != value))
				{
					this.OnTotalAbsencesChanging(value);
					this.SendPropertyChanging();
					this._TotalAbsences = value;
					this.SendPropertyChanged("TotalAbsences");
					this.OnTotalAbsencesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalDebits", DbType="Money NOT NULL")]
		public decimal TotalDebits
		{
			get
			{
				return this._TotalDebits;
			}
			set
			{
				if ((this._TotalDebits != value))
				{
					this.OnTotalDebitsChanging(value);
					this.SendPropertyChanging();
					this._TotalDebits = value;
					this.SendPropertyChanged("TotalDebits");
					this.OnTotalDebitsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalSalary", DbType="Money NOT NULL")]
		public decimal TotalSalary
		{
			get
			{
				return this._TotalSalary;
			}
			set
			{
				if ((this._TotalSalary != value))
				{
					this.OnTotalSalaryChanging(value);
					this.SendPropertyChanging();
					this._TotalSalary = value;
					this.SendPropertyChanged("TotalSalary");
					this.OnTotalSalaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Salary", DbType="Money NOT NULL")]
		public decimal Salary
		{
			get
			{
				return this._Salary;
			}
			set
			{
				if ((this._Salary != value))
				{
					this.OnSalaryChanging(value);
					this.SendPropertyChanging();
					this._Salary = value;
					this.SendPropertyChanged("Salary");
					this.OnSalaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalTravels", DbType="Money NOT NULL")]
		public decimal TotalTravels
		{
			get
			{
				return this._TotalTravels;
			}
			set
			{
				if ((this._TotalTravels != value))
				{
					this.OnTotalTravelsChanging(value);
					this.SendPropertyChanging();
					this._TotalTravels = value;
					this.SendPropertyChanged("TotalTravels");
					this.OnTotalTravelsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Awards", DbType="Money NOT NULL")]
		public decimal Awards
		{
			get
			{
				return this._Awards;
			}
			set
			{
				if ((this._Awards != value))
				{
					this.OnAwardsChanging(value);
					this.SendPropertyChanging();
					this._Awards = value;
					this.SendPropertyChanged("Awards");
					this.OnAwardsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullSalary", DbType="Money NOT NULL")]
		public decimal FullSalary
		{
			get
			{
				return this._FullSalary;
			}
			set
			{
				if ((this._FullSalary != value))
				{
					this.OnFullSalaryChanging(value);
					this.SendPropertyChanging();
					this._FullSalary = value;
					this.SendPropertyChanged("FullSalary");
					this.OnFullSalaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Discounts", DbType="Money NOT NULL")]
		public decimal Discounts
		{
			get
			{
				return this._Discounts;
			}
			set
			{
				if ((this._Discounts != value))
				{
					this.OnDiscountsChanging(value);
					this.SendPropertyChanging();
					this._Discounts = value;
					this.SendPropertyChanged("Discounts");
					this.OnDiscountsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Year", DbType="Int NOT NULL")]
		public int Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this.OnYearChanging(value);
					this.SendPropertyChanging();
					this._Year = value;
					this.SendPropertyChanged("Year");
					this.OnYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Month", DbType="Int NOT NULL")]
		public int Month
		{
			get
			{
				return this._Month;
			}
			set
			{
				if ((this._Month != value))
				{
					this.OnMonthChanging(value);
					this.SendPropertyChanging();
					this._Month = value;
					this.SendPropertyChanged("Month");
					this.OnMonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employe_EmployeeSalary", Storage="_Employe", ThisKey="employeeId", OtherKey="Id", IsForeignKey=true)]
		public Employe Employe
		{
			get
			{
				return this._Employe.Entity;
			}
			set
			{
				Employe previousValue = this._Employe.Entity;
				if (((previousValue != value) 
							|| (this._Employe.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employe.Entity = null;
						previousValue.EmployeeSalaries.Remove(this);
					}
					this._Employe.Entity = value;
					if ((value != null))
					{
						value.EmployeeSalaries.Add(this);
						this._employeeId = value.Id;
					}
					else
					{
						this._employeeId = default(int);
					}
					this.SendPropertyChanged("Employe");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EmployeeSettings")]
	public partial class EmployeeSetting : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _EmplyeeId;
		
		private int _EmployeeDayAbs;
		
		private string _EmployeeDayAbsValue;
		
		private int _EmployeeHalfAbds;
		
		private string _EmployeeHalfAbdsValue;
		
		private int _EmployeeAdd;
		
		private string _EmployeeAddValue;
		
		private EntityRef<Employe> _Employe;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnEmplyeeIdChanging(int value);
    partial void OnEmplyeeIdChanged();
    partial void OnEmployeeDayAbsChanging(int value);
    partial void OnEmployeeDayAbsChanged();
    partial void OnEmployeeDayAbsValueChanging(string value);
    partial void OnEmployeeDayAbsValueChanged();
    partial void OnEmployeeHalfAbdsChanging(int value);
    partial void OnEmployeeHalfAbdsChanged();
    partial void OnEmployeeHalfAbdsValueChanging(string value);
    partial void OnEmployeeHalfAbdsValueChanged();
    partial void OnEmployeeAddChanging(int value);
    partial void OnEmployeeAddChanged();
    partial void OnEmployeeAddValueChanging(string value);
    partial void OnEmployeeAddValueChanged();
    #endregion
		
		public EmployeeSetting()
		{
			this._Employe = default(EntityRef<Employe>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmplyeeId", DbType="Int NOT NULL")]
		public int EmplyeeId
		{
			get
			{
				return this._EmplyeeId;
			}
			set
			{
				if ((this._EmplyeeId != value))
				{
					if (this._Employe.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmplyeeIdChanging(value);
					this.SendPropertyChanging();
					this._EmplyeeId = value;
					this.SendPropertyChanged("EmplyeeId");
					this.OnEmplyeeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeDayAbs", DbType="Int NOT NULL")]
		public int EmployeeDayAbs
		{
			get
			{
				return this._EmployeeDayAbs;
			}
			set
			{
				if ((this._EmployeeDayAbs != value))
				{
					this.OnEmployeeDayAbsChanging(value);
					this.SendPropertyChanging();
					this._EmployeeDayAbs = value;
					this.SendPropertyChanged("EmployeeDayAbs");
					this.OnEmployeeDayAbsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeDayAbsValue", DbType="NVarChar(250)")]
		public string EmployeeDayAbsValue
		{
			get
			{
				return this._EmployeeDayAbsValue;
			}
			set
			{
				if ((this._EmployeeDayAbsValue != value))
				{
					this.OnEmployeeDayAbsValueChanging(value);
					this.SendPropertyChanging();
					this._EmployeeDayAbsValue = value;
					this.SendPropertyChanged("EmployeeDayAbsValue");
					this.OnEmployeeDayAbsValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeHalfAbds", DbType="Int NOT NULL")]
		public int EmployeeHalfAbds
		{
			get
			{
				return this._EmployeeHalfAbds;
			}
			set
			{
				if ((this._EmployeeHalfAbds != value))
				{
					this.OnEmployeeHalfAbdsChanging(value);
					this.SendPropertyChanging();
					this._EmployeeHalfAbds = value;
					this.SendPropertyChanged("EmployeeHalfAbds");
					this.OnEmployeeHalfAbdsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeHalfAbdsValue", DbType="NVarChar(250)")]
		public string EmployeeHalfAbdsValue
		{
			get
			{
				return this._EmployeeHalfAbdsValue;
			}
			set
			{
				if ((this._EmployeeHalfAbdsValue != value))
				{
					this.OnEmployeeHalfAbdsValueChanging(value);
					this.SendPropertyChanging();
					this._EmployeeHalfAbdsValue = value;
					this.SendPropertyChanged("EmployeeHalfAbdsValue");
					this.OnEmployeeHalfAbdsValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeAdd", DbType="Int NOT NULL")]
		public int EmployeeAdd
		{
			get
			{
				return this._EmployeeAdd;
			}
			set
			{
				if ((this._EmployeeAdd != value))
				{
					this.OnEmployeeAddChanging(value);
					this.SendPropertyChanging();
					this._EmployeeAdd = value;
					this.SendPropertyChanged("EmployeeAdd");
					this.OnEmployeeAddChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeAddValue", DbType="NVarChar(250)")]
		public string EmployeeAddValue
		{
			get
			{
				return this._EmployeeAddValue;
			}
			set
			{
				if ((this._EmployeeAddValue != value))
				{
					this.OnEmployeeAddValueChanging(value);
					this.SendPropertyChanging();
					this._EmployeeAddValue = value;
					this.SendPropertyChanged("EmployeeAddValue");
					this.OnEmployeeAddValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employe_EmployeeSetting", Storage="_Employe", ThisKey="EmplyeeId", OtherKey="Id", IsForeignKey=true)]
		public Employe Employe
		{
			get
			{
				return this._Employe.Entity;
			}
			set
			{
				Employe previousValue = this._Employe.Entity;
				if (((previousValue != value) 
							|| (this._Employe.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employe.Entity = null;
						previousValue.EmployeeSettings.Remove(this);
					}
					this._Employe.Entity = value;
					if ((value != null))
					{
						value.EmployeeSettings.Add(this);
						this._EmplyeeId = value.Id;
					}
					else
					{
						this._EmplyeeId = default(int);
					}
					this.SendPropertyChanged("Employe");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EmployeeStates")]
	public partial class EmployeeState : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private EntitySet<HrDaye> _HrDayes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public EmployeeState()
		{
			this._HrDayes = new EntitySet<HrDaye>(new Action<HrDaye>(this.attach_HrDayes), new Action<HrDaye>(this.detach_HrDayes));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EmployeeState_HrDaye", Storage="_HrDayes", ThisKey="Id", OtherKey="StateId")]
		public EntitySet<HrDaye> HrDayes
		{
			get
			{
				return this._HrDayes;
			}
			set
			{
				this._HrDayes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HrDayes(HrDaye entity)
		{
			this.SendPropertyChanging();
			entity.EmployeeState = this;
		}
		
		private void detach_HrDayes(HrDaye entity)
		{
			this.SendPropertyChanging();
			entity.EmployeeState = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Employes")]
	public partial class Employe : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private int _Code;
		
		private string _Address;
		
		private string _Phone;
		
		private string _Mobile;
		
		private string _Email;
		
		private string _Grade;
		
		private string _Spacific;
		
		private string _GradeYear;
		
		private decimal _rent;
		
		private double _Attendance;
		
		private double _Leave;
		
		private System.Nullable<double> _LastDiscount;
		
		private System.DateTime _HiringDate;
		
		private string _Attach1;
		
		private string _Attach2;
		
		private string _Attach3;
		
		private string _Attach4;
		
		private int _Days;
		
		private decimal _insurance;
		
		private EntitySet<EmployeeAssemply> _EmployeeAssemplies;
		
		private EntitySet<EmployeeDebit> _EmployeeDebits;
		
		private EntitySet<EmployeeSalary> _EmployeeSalaries;
		
		private EntitySet<EmployeeSetting> _EmployeeSettings;
		
		private EntitySet<HrDaye> _HrDayes;
		
		private EntitySet<Reward> _Rewards;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCodeChanging(int value);
    partial void OnCodeChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnMobileChanging(string value);
    partial void OnMobileChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnGradeChanging(string value);
    partial void OnGradeChanged();
    partial void OnSpacificChanging(string value);
    partial void OnSpacificChanged();
    partial void OnGradeYearChanging(string value);
    partial void OnGradeYearChanged();
    partial void OnrentChanging(decimal value);
    partial void OnrentChanged();
    partial void OnAttendanceChanging(double value);
    partial void OnAttendanceChanged();
    partial void OnLeaveChanging(double value);
    partial void OnLeaveChanged();
    partial void OnLastDiscountChanging(System.Nullable<double> value);
    partial void OnLastDiscountChanged();
    partial void OnHiringDateChanging(System.DateTime value);
    partial void OnHiringDateChanged();
    partial void OnAttach1Changing(string value);
    partial void OnAttach1Changed();
    partial void OnAttach2Changing(string value);
    partial void OnAttach2Changed();
    partial void OnAttach3Changing(string value);
    partial void OnAttach3Changed();
    partial void OnAttach4Changing(string value);
    partial void OnAttach4Changed();
    partial void OnDaysChanging(int value);
    partial void OnDaysChanged();
    partial void OninsuranceChanging(decimal value);
    partial void OninsuranceChanged();
    #endregion
		
		public Employe()
		{
			this._EmployeeAssemplies = new EntitySet<EmployeeAssemply>(new Action<EmployeeAssemply>(this.attach_EmployeeAssemplies), new Action<EmployeeAssemply>(this.detach_EmployeeAssemplies));
			this._EmployeeDebits = new EntitySet<EmployeeDebit>(new Action<EmployeeDebit>(this.attach_EmployeeDebits), new Action<EmployeeDebit>(this.detach_EmployeeDebits));
			this._EmployeeSalaries = new EntitySet<EmployeeSalary>(new Action<EmployeeSalary>(this.attach_EmployeeSalaries), new Action<EmployeeSalary>(this.detach_EmployeeSalaries));
			this._EmployeeSettings = new EntitySet<EmployeeSetting>(new Action<EmployeeSetting>(this.attach_EmployeeSettings), new Action<EmployeeSetting>(this.detach_EmployeeSettings));
			this._HrDayes = new EntitySet<HrDaye>(new Action<HrDaye>(this.attach_HrDayes), new Action<HrDaye>(this.detach_HrDayes));
			this._Rewards = new EntitySet<Reward>(new Action<Reward>(this.attach_Rewards), new Action<Reward>(this.detach_Rewards));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="Int NOT NULL")]
		public int Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(MAX)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="NVarChar(20)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mobile", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string Mobile
		{
			get
			{
				return this._Mobile;
			}
			set
			{
				if ((this._Mobile != value))
				{
					this.OnMobileChanging(value);
					this.SendPropertyChanging();
					this._Mobile = value;
					this.SendPropertyChanged("Mobile");
					this.OnMobileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(500)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Grade", DbType="NVarChar(500)")]
		public string Grade
		{
			get
			{
				return this._Grade;
			}
			set
			{
				if ((this._Grade != value))
				{
					this.OnGradeChanging(value);
					this.SendPropertyChanging();
					this._Grade = value;
					this.SendPropertyChanged("Grade");
					this.OnGradeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Spacific", DbType="NVarChar(500)")]
		public string Spacific
		{
			get
			{
				return this._Spacific;
			}
			set
			{
				if ((this._Spacific != value))
				{
					this.OnSpacificChanging(value);
					this.SendPropertyChanging();
					this._Spacific = value;
					this.SendPropertyChanged("Spacific");
					this.OnSpacificChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GradeYear", DbType="NVarChar(10)")]
		public string GradeYear
		{
			get
			{
				return this._GradeYear;
			}
			set
			{
				if ((this._GradeYear != value))
				{
					this.OnGradeYearChanging(value);
					this.SendPropertyChanging();
					this._GradeYear = value;
					this.SendPropertyChanged("GradeYear");
					this.OnGradeYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rent", DbType="Money NOT NULL")]
		public decimal rent
		{
			get
			{
				return this._rent;
			}
			set
			{
				if ((this._rent != value))
				{
					this.OnrentChanging(value);
					this.SendPropertyChanging();
					this._rent = value;
					this.SendPropertyChanged("rent");
					this.OnrentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Attendance", DbType="Float NOT NULL")]
		public double Attendance
		{
			get
			{
				return this._Attendance;
			}
			set
			{
				if ((this._Attendance != value))
				{
					this.OnAttendanceChanging(value);
					this.SendPropertyChanging();
					this._Attendance = value;
					this.SendPropertyChanged("Attendance");
					this.OnAttendanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Leave", DbType="Float NOT NULL")]
		public double Leave
		{
			get
			{
				return this._Leave;
			}
			set
			{
				if ((this._Leave != value))
				{
					this.OnLeaveChanging(value);
					this.SendPropertyChanging();
					this._Leave = value;
					this.SendPropertyChanged("Leave");
					this.OnLeaveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastDiscount", DbType="Float")]
		public System.Nullable<double> LastDiscount
		{
			get
			{
				return this._LastDiscount;
			}
			set
			{
				if ((this._LastDiscount != value))
				{
					this.OnLastDiscountChanging(value);
					this.SendPropertyChanging();
					this._LastDiscount = value;
					this.SendPropertyChanged("LastDiscount");
					this.OnLastDiscountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HiringDate", DbType="DateTime NOT NULL")]
		public System.DateTime HiringDate
		{
			get
			{
				return this._HiringDate;
			}
			set
			{
				if ((this._HiringDate != value))
				{
					this.OnHiringDateChanging(value);
					this.SendPropertyChanging();
					this._HiringDate = value;
					this.SendPropertyChanged("HiringDate");
					this.OnHiringDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Attach1", DbType="NVarChar(50)")]
		public string Attach1
		{
			get
			{
				return this._Attach1;
			}
			set
			{
				if ((this._Attach1 != value))
				{
					this.OnAttach1Changing(value);
					this.SendPropertyChanging();
					this._Attach1 = value;
					this.SendPropertyChanged("Attach1");
					this.OnAttach1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Attach2", DbType="NVarChar(50)")]
		public string Attach2
		{
			get
			{
				return this._Attach2;
			}
			set
			{
				if ((this._Attach2 != value))
				{
					this.OnAttach2Changing(value);
					this.SendPropertyChanging();
					this._Attach2 = value;
					this.SendPropertyChanged("Attach2");
					this.OnAttach2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Attach3", DbType="NVarChar(50)")]
		public string Attach3
		{
			get
			{
				return this._Attach3;
			}
			set
			{
				if ((this._Attach3 != value))
				{
					this.OnAttach3Changing(value);
					this.SendPropertyChanging();
					this._Attach3 = value;
					this.SendPropertyChanged("Attach3");
					this.OnAttach3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Attach4", DbType="NVarChar(50)")]
		public string Attach4
		{
			get
			{
				return this._Attach4;
			}
			set
			{
				if ((this._Attach4 != value))
				{
					this.OnAttach4Changing(value);
					this.SendPropertyChanging();
					this._Attach4 = value;
					this.SendPropertyChanged("Attach4");
					this.OnAttach4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Days", DbType="Int NOT NULL")]
		public int Days
		{
			get
			{
				return this._Days;
			}
			set
			{
				if ((this._Days != value))
				{
					this.OnDaysChanging(value);
					this.SendPropertyChanging();
					this._Days = value;
					this.SendPropertyChanged("Days");
					this.OnDaysChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_insurance", DbType="Decimal(18,2) NOT NULL")]
		public decimal insurance
		{
			get
			{
				return this._insurance;
			}
			set
			{
				if ((this._insurance != value))
				{
					this.OninsuranceChanging(value);
					this.SendPropertyChanging();
					this._insurance = value;
					this.SendPropertyChanged("insurance");
					this.OninsuranceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employe_EmployeeAssemply", Storage="_EmployeeAssemplies", ThisKey="Id", OtherKey="EmployeeId")]
		public EntitySet<EmployeeAssemply> EmployeeAssemplies
		{
			get
			{
				return this._EmployeeAssemplies;
			}
			set
			{
				this._EmployeeAssemplies.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employe_EmployeeDebit", Storage="_EmployeeDebits", ThisKey="Id", OtherKey="employeeId")]
		public EntitySet<EmployeeDebit> EmployeeDebits
		{
			get
			{
				return this._EmployeeDebits;
			}
			set
			{
				this._EmployeeDebits.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employe_EmployeeSalary", Storage="_EmployeeSalaries", ThisKey="Id", OtherKey="employeeId")]
		public EntitySet<EmployeeSalary> EmployeeSalaries
		{
			get
			{
				return this._EmployeeSalaries;
			}
			set
			{
				this._EmployeeSalaries.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employe_EmployeeSetting", Storage="_EmployeeSettings", ThisKey="Id", OtherKey="EmplyeeId")]
		public EntitySet<EmployeeSetting> EmployeeSettings
		{
			get
			{
				return this._EmployeeSettings;
			}
			set
			{
				this._EmployeeSettings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employe_HrDaye", Storage="_HrDayes", ThisKey="Id", OtherKey="EmployeeId")]
		public EntitySet<HrDaye> HrDayes
		{
			get
			{
				return this._HrDayes;
			}
			set
			{
				this._HrDayes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employe_Reward", Storage="_Rewards", ThisKey="Id", OtherKey="empid")]
		public EntitySet<Reward> Rewards
		{
			get
			{
				return this._Rewards;
			}
			set
			{
				this._Rewards.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_EmployeeAssemplies(EmployeeAssemply entity)
		{
			this.SendPropertyChanging();
			entity.Employe = this;
		}
		
		private void detach_EmployeeAssemplies(EmployeeAssemply entity)
		{
			this.SendPropertyChanging();
			entity.Employe = null;
		}
		
		private void attach_EmployeeDebits(EmployeeDebit entity)
		{
			this.SendPropertyChanging();
			entity.Employe = this;
		}
		
		private void detach_EmployeeDebits(EmployeeDebit entity)
		{
			this.SendPropertyChanging();
			entity.Employe = null;
		}
		
		private void attach_EmployeeSalaries(EmployeeSalary entity)
		{
			this.SendPropertyChanging();
			entity.Employe = this;
		}
		
		private void detach_EmployeeSalaries(EmployeeSalary entity)
		{
			this.SendPropertyChanging();
			entity.Employe = null;
		}
		
		private void attach_EmployeeSettings(EmployeeSetting entity)
		{
			this.SendPropertyChanging();
			entity.Employe = this;
		}
		
		private void detach_EmployeeSettings(EmployeeSetting entity)
		{
			this.SendPropertyChanging();
			entity.Employe = null;
		}
		
		private void attach_HrDayes(HrDaye entity)
		{
			this.SendPropertyChanging();
			entity.Employe = this;
		}
		
		private void detach_HrDayes(HrDaye entity)
		{
			this.SendPropertyChanging();
			entity.Employe = null;
		}
		
		private void attach_Rewards(Reward entity)
		{
			this.SendPropertyChanging();
			entity.Employe = this;
		}
		
		private void detach_Rewards(Reward entity)
		{
			this.SendPropertyChanging();
			entity.Employe = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HrDayes")]
	public partial class HrDaye : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _EmployeeId;
		
		private int _Code;
		
		private System.DateTime _Time;
		
		private int _StateId;
		
		private System.Nullable<double> _Attendance;
		
		private System.Nullable<double> _Leave;
		
		private EntityRef<EmployeeState> _EmployeeState;
		
		private EntityRef<Employe> _Employe;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnEmployeeIdChanging(int value);
    partial void OnEmployeeIdChanged();
    partial void OnCodeChanging(int value);
    partial void OnCodeChanged();
    partial void OnTimeChanging(System.DateTime value);
    partial void OnTimeChanged();
    partial void OnStateIdChanging(int value);
    partial void OnStateIdChanged();
    partial void OnAttendanceChanging(System.Nullable<double> value);
    partial void OnAttendanceChanged();
    partial void OnLeaveChanging(System.Nullable<double> value);
    partial void OnLeaveChanged();
    #endregion
		
		public HrDaye()
		{
			this._EmployeeState = default(EntityRef<EmployeeState>);
			this._Employe = default(EntityRef<Employe>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeId", DbType="Int NOT NULL")]
		public int EmployeeId
		{
			get
			{
				return this._EmployeeId;
			}
			set
			{
				if ((this._EmployeeId != value))
				{
					if (this._Employe.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmployeeIdChanging(value);
					this.SendPropertyChanging();
					this._EmployeeId = value;
					this.SendPropertyChanged("EmployeeId");
					this.OnEmployeeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="Int NOT NULL")]
		public int Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time", DbType="DateTime NOT NULL")]
		public System.DateTime Time
		{
			get
			{
				return this._Time;
			}
			set
			{
				if ((this._Time != value))
				{
					this.OnTimeChanging(value);
					this.SendPropertyChanging();
					this._Time = value;
					this.SendPropertyChanged("Time");
					this.OnTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateId", DbType="Int NOT NULL")]
		public int StateId
		{
			get
			{
				return this._StateId;
			}
			set
			{
				if ((this._StateId != value))
				{
					if (this._EmployeeState.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStateIdChanging(value);
					this.SendPropertyChanging();
					this._StateId = value;
					this.SendPropertyChanged("StateId");
					this.OnStateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Attendance", DbType="Float")]
		public System.Nullable<double> Attendance
		{
			get
			{
				return this._Attendance;
			}
			set
			{
				if ((this._Attendance != value))
				{
					this.OnAttendanceChanging(value);
					this.SendPropertyChanging();
					this._Attendance = value;
					this.SendPropertyChanged("Attendance");
					this.OnAttendanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Leave", DbType="Float")]
		public System.Nullable<double> Leave
		{
			get
			{
				return this._Leave;
			}
			set
			{
				if ((this._Leave != value))
				{
					this.OnLeaveChanging(value);
					this.SendPropertyChanging();
					this._Leave = value;
					this.SendPropertyChanged("Leave");
					this.OnLeaveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EmployeeState_HrDaye", Storage="_EmployeeState", ThisKey="StateId", OtherKey="Id", IsForeignKey=true)]
		public EmployeeState EmployeeState
		{
			get
			{
				return this._EmployeeState.Entity;
			}
			set
			{
				EmployeeState previousValue = this._EmployeeState.Entity;
				if (((previousValue != value) 
							|| (this._EmployeeState.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EmployeeState.Entity = null;
						previousValue.HrDayes.Remove(this);
					}
					this._EmployeeState.Entity = value;
					if ((value != null))
					{
						value.HrDayes.Add(this);
						this._StateId = value.Id;
					}
					else
					{
						this._StateId = default(int);
					}
					this.SendPropertyChanged("EmployeeState");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employe_HrDaye", Storage="_Employe", ThisKey="EmployeeId", OtherKey="Id", IsForeignKey=true)]
		public Employe Employe
		{
			get
			{
				return this._Employe.Entity;
			}
			set
			{
				Employe previousValue = this._Employe.Entity;
				if (((previousValue != value) 
							|| (this._Employe.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employe.Entity = null;
						previousValue.HrDayes.Remove(this);
					}
					this._Employe.Entity = value;
					if ((value != null))
					{
						value.HrDayes.Add(this);
						this._EmployeeId = value.Id;
					}
					else
					{
						this._EmployeeId = default(int);
					}
					this.SendPropertyChanged("Employe");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Rewards")]
	public partial class Reward : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _empid;
		
		private string _kind;
		
		private decimal _value;
		
		private string _note;
		
		private System.DateTime _date;
		
		private EntityRef<Employe> _Employe;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnempidChanging(int value);
    partial void OnempidChanged();
    partial void OnkindChanging(string value);
    partial void OnkindChanged();
    partial void OnvalueChanging(decimal value);
    partial void OnvalueChanged();
    partial void OnnoteChanging(string value);
    partial void OnnoteChanged();
    partial void OndateChanging(System.DateTime value);
    partial void OndateChanged();
    #endregion
		
		public Reward()
		{
			this._Employe = default(EntityRef<Employe>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_empid", DbType="Int NOT NULL")]
		public int empid
		{
			get
			{
				return this._empid;
			}
			set
			{
				if ((this._empid != value))
				{
					if (this._Employe.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnempidChanging(value);
					this.SendPropertyChanging();
					this._empid = value;
					this.SendPropertyChanged("empid");
					this.OnempidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_kind", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string kind
		{
			get
			{
				return this._kind;
			}
			set
			{
				if ((this._kind != value))
				{
					this.OnkindChanging(value);
					this.SendPropertyChanging();
					this._kind = value;
					this.SendPropertyChanged("kind");
					this.OnkindChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_value", DbType="Decimal(18,2) NOT NULL")]
		public decimal value
		{
			get
			{
				return this._value;
			}
			set
			{
				if ((this._value != value))
				{
					this.OnvalueChanging(value);
					this.SendPropertyChanging();
					this._value = value;
					this.SendPropertyChanged("value");
					this.OnvalueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_note", DbType="NVarChar(50)")]
		public string note
		{
			get
			{
				return this._note;
			}
			set
			{
				if ((this._note != value))
				{
					this.OnnoteChanging(value);
					this.SendPropertyChanging();
					this._note = value;
					this.SendPropertyChanged("note");
					this.OnnoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="DateTime NOT NULL")]
		public System.DateTime date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this.OndateChanging(value);
					this.SendPropertyChanging();
					this._date = value;
					this.SendPropertyChanged("date");
					this.OndateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employe_Reward", Storage="_Employe", ThisKey="empid", OtherKey="Id", IsForeignKey=true)]
		public Employe Employe
		{
			get
			{
				return this._Employe.Entity;
			}
			set
			{
				Employe previousValue = this._Employe.Entity;
				if (((previousValue != value) 
							|| (this._Employe.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employe.Entity = null;
						previousValue.Rewards.Remove(this);
					}
					this._Employe.Entity = value;
					if ((value != null))
					{
						value.Rewards.Add(this);
						this._empid = value.Id;
					}
					else
					{
						this._empid = default(int);
					}
					this.SendPropertyChanged("Employe");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RequestsNotitfications")]
	public partial class RequestsNotitfication : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _WorkOrderId;
		
		private int _RequestId;
		
		private System.Nullable<bool> _Status;
		
		private System.Nullable<System.DateTime> _ProccessDate;
		
		private System.Nullable<int> _UserId;
		
		private string _Notes;
		
		private EntityRef<Request> _Request;
		
		private EntityRef<User> _User;
		
		private EntityRef<WorkOrder> _WorkOrder;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnWorkOrderIdChanging(int value);
    partial void OnWorkOrderIdChanged();
    partial void OnRequestIdChanging(int value);
    partial void OnRequestIdChanged();
    partial void OnStatusChanging(System.Nullable<bool> value);
    partial void OnStatusChanged();
    partial void OnProccessDateChanging(System.Nullable<System.DateTime> value);
    partial void OnProccessDateChanged();
    partial void OnUserIdChanging(System.Nullable<int> value);
    partial void OnUserIdChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    #endregion
		
		public RequestsNotitfication()
		{
			this._Request = default(EntityRef<Request>);
			this._User = default(EntityRef<User>);
			this._WorkOrder = default(EntityRef<WorkOrder>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkOrderId", DbType="Int NOT NULL")]
		public int WorkOrderId
		{
			get
			{
				return this._WorkOrderId;
			}
			set
			{
				if ((this._WorkOrderId != value))
				{
					if (this._WorkOrder.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWorkOrderIdChanging(value);
					this.SendPropertyChanging();
					this._WorkOrderId = value;
					this.SendPropertyChanged("WorkOrderId");
					this.OnWorkOrderIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestId", DbType="Int NOT NULL")]
		public int RequestId
		{
			get
			{
				return this._RequestId;
			}
			set
			{
				if ((this._RequestId != value))
				{
					if (this._Request.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRequestIdChanging(value);
					this.SendPropertyChanging();
					this._RequestId = value;
					this.SendPropertyChanged("RequestId");
					this.OnRequestIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Bit")]
		public System.Nullable<bool> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProccessDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ProccessDate
		{
			get
			{
				return this._ProccessDate;
			}
			set
			{
				if ((this._ProccessDate != value))
				{
					this.OnProccessDateChanging(value);
					this.SendPropertyChanging();
					this._ProccessDate = value;
					this.SendPropertyChanged("ProccessDate");
					this.OnProccessDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int")]
		public System.Nullable<int> UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(500)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_RequestsNotitfication", Storage="_Request", ThisKey="RequestId", OtherKey="ID", IsForeignKey=true)]
		public Request Request
		{
			get
			{
				return this._Request.Entity;
			}
			set
			{
				Request previousValue = this._Request.Entity;
				if (((previousValue != value) 
							|| (this._Request.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Request.Entity = null;
						previousValue.RequestsNotitfications.Remove(this);
					}
					this._Request.Entity = value;
					if ((value != null))
					{
						value.RequestsNotitfications.Add(this);
						this._RequestId = value.ID;
					}
					else
					{
						this._RequestId = default(int);
					}
					this.SendPropertyChanged("Request");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_RequestsNotitfication", Storage="_User", ThisKey="UserId", OtherKey="ID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.RequestsNotitfications.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.RequestsNotitfications.Add(this);
						this._UserId = value.ID;
					}
					else
					{
						this._UserId = default(Nullable<int>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WorkOrder_RequestsNotitfication", Storage="_WorkOrder", ThisKey="WorkOrderId", OtherKey="ID", IsForeignKey=true)]
		public WorkOrder WorkOrder
		{
			get
			{
				return this._WorkOrder.Entity;
			}
			set
			{
				WorkOrder previousValue = this._WorkOrder.Entity;
				if (((previousValue != value) 
							|| (this._WorkOrder.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WorkOrder.Entity = null;
						previousValue.RequestsNotitfications.Remove(this);
					}
					this._WorkOrder.Entity = value;
					if ((value != null))
					{
						value.RequestsNotitfications.Add(this);
						this._WorkOrderId = value.ID;
					}
					else
					{
						this._WorkOrderId = default(int);
					}
					this.SendPropertyChanged("WorkOrder");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BranchesForResellerPayment")]
	public partial class BranchesForResellerPayment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _BranchId;
		
		private EntityRef<Branch> _Branch;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnBranchIdChanging(System.Nullable<int> value);
    partial void OnBranchIdChanged();
    #endregion
		
		public BranchesForResellerPayment()
		{
			this._Branch = default(EntityRef<Branch>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchId", DbType="Int")]
		public System.Nullable<int> BranchId
		{
			get
			{
				return this._BranchId;
			}
			set
			{
				if ((this._BranchId != value))
				{
					if (this._Branch.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBranchIdChanging(value);
					this.SendPropertyChanging();
					this._BranchId = value;
					this.SendPropertyChanged("BranchId");
					this.OnBranchIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Branch_BranchesForResellerPayment", Storage="_Branch", ThisKey="BranchId", OtherKey="ID", IsForeignKey=true)]
		public Branch Branch
		{
			get
			{
				return this._Branch.Entity;
			}
			set
			{
				Branch previousValue = this._Branch.Entity;
				if (((previousValue != value) 
							|| (this._Branch.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Branch.Entity = null;
						previousValue.BranchesForResellerPayments.Remove(this);
					}
					this._Branch.Entity = value;
					if ((value != null))
					{
						value.BranchesForResellerPayments.Add(this);
						this._BranchId = value.ID;
					}
					else
					{
						this._BranchId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Branch");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OptionPortalProviders")]
	public partial class OptionPortalProvider : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _PortalProvidersId;
		
		private EntityRef<ServiceProvider> _ServiceProvider;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnPortalProvidersIdChanging(System.Nullable<int> value);
    partial void OnPortalProvidersIdChanged();
    #endregion
		
		public OptionPortalProvider()
		{
			this._ServiceProvider = default(EntityRef<ServiceProvider>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PortalProvidersId", DbType="Int")]
		public System.Nullable<int> PortalProvidersId
		{
			get
			{
				return this._PortalProvidersId;
			}
			set
			{
				if ((this._PortalProvidersId != value))
				{
					if (this._ServiceProvider.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPortalProvidersIdChanging(value);
					this.SendPropertyChanging();
					this._PortalProvidersId = value;
					this.SendPropertyChanged("PortalProvidersId");
					this.OnPortalProvidersIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ServiceProvider_OptionPortalProvider", Storage="_ServiceProvider", ThisKey="PortalProvidersId", OtherKey="ID", IsForeignKey=true)]
		public ServiceProvider ServiceProvider
		{
			get
			{
				return this._ServiceProvider.Entity;
			}
			set
			{
				ServiceProvider previousValue = this._ServiceProvider.Entity;
				if (((previousValue != value) 
							|| (this._ServiceProvider.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ServiceProvider.Entity = null;
						previousValue.OptionPortalProviders.Remove(this);
					}
					this._ServiceProvider.Entity = value;
					if ((value != null))
					{
						value.OptionPortalProviders.Add(this);
						this._PortalProvidersId = value.ID;
					}
					else
					{
						this._PortalProvidersId = default(Nullable<int>);
					}
					this.SendPropertyChanged("ServiceProvider");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Backups")]
	public partial class Backup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<System.DateTime> _Time;
		
		private string _Url;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnTimeChanged();
    partial void OnUrlChanging(string value);
    partial void OnUrlChanged();
    #endregion
		
		public Backup()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time", DbType="DateTime")]
		public System.Nullable<System.DateTime> Time
		{
			get
			{
				return this._Time;
			}
			set
			{
				if ((this._Time != value))
				{
					this.OnTimeChanging(value);
					this.SendPropertyChanging();
					this._Time = value;
					this.SendPropertyChanged("Time");
					this.OnTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Url", DbType="NVarChar(MAX)")]
		public string Url
		{
			get
			{
				return this._Url;
			}
			set
			{
				if ((this._Url != value))
				{
					this.OnUrlChanging(value);
					this.SendPropertyChanging();
					this._Url = value;
					this.SendPropertyChanged("Url");
					this.OnUrlChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BranchTransformationRequest")]
	public partial class BranchTransformationRequest : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _BranchId;
		
		private int _TransferFrom;
		
		private int _TransferTo;
		
		private decimal _Amount;
		
		private System.Nullable<bool> _Status;
		
		private int _UserId;
		
		private System.Nullable<System.DateTime> _Date;
		
		private EntityRef<User> _User;
		
		private EntityRef<Branch> _Branch;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnBranchIdChanging(int value);
    partial void OnBranchIdChanged();
    partial void OnTransferFromChanging(int value);
    partial void OnTransferFromChanged();
    partial void OnTransferToChanging(int value);
    partial void OnTransferToChanged();
    partial void OnAmountChanging(decimal value);
    partial void OnAmountChanged();
    partial void OnStatusChanging(System.Nullable<bool> value);
    partial void OnStatusChanged();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateChanged();
    #endregion
		
		public BranchTransformationRequest()
		{
			this._User = default(EntityRef<User>);
			this._Branch = default(EntityRef<Branch>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchId", DbType="Int NOT NULL")]
		public int BranchId
		{
			get
			{
				return this._BranchId;
			}
			set
			{
				if ((this._BranchId != value))
				{
					if (this._Branch.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBranchIdChanging(value);
					this.SendPropertyChanging();
					this._BranchId = value;
					this.SendPropertyChanged("BranchId");
					this.OnBranchIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransferFrom", DbType="Int NOT NULL")]
		public int TransferFrom
		{
			get
			{
				return this._TransferFrom;
			}
			set
			{
				if ((this._TransferFrom != value))
				{
					this.OnTransferFromChanging(value);
					this.SendPropertyChanging();
					this._TransferFrom = value;
					this.SendPropertyChanged("TransferFrom");
					this.OnTransferFromChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransferTo", DbType="Int NOT NULL")]
		public int TransferTo
		{
			get
			{
				return this._TransferTo;
			}
			set
			{
				if ((this._TransferTo != value))
				{
					this.OnTransferToChanging(value);
					this.SendPropertyChanging();
					this._TransferTo = value;
					this.SendPropertyChanged("TransferTo");
					this.OnTransferToChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(18,2) NOT NULL")]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Bit")]
		public System.Nullable<bool> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL")]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_BranchTransformationRequest", Storage="_User", ThisKey="UserId", OtherKey="ID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.BranchTransformationRequests.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.BranchTransformationRequests.Add(this);
						this._UserId = value.ID;
					}
					else
					{
						this._UserId = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Branch_BranchTransformationRequest", Storage="_Branch", ThisKey="BranchId", OtherKey="ID", IsForeignKey=true)]
		public Branch Branch
		{
			get
			{
				return this._Branch.Entity;
			}
			set
			{
				Branch previousValue = this._Branch.Entity;
				if (((previousValue != value) 
							|| (this._Branch.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Branch.Entity = null;
						previousValue.BranchTransformationRequests.Remove(this);
					}
					this._Branch.Entity = value;
					if ((value != null))
					{
						value.BranchTransformationRequests.Add(this);
						this._BranchId = value.ID;
					}
					else
					{
						this._BranchId = default(int);
					}
					this.SendPropertyChanged("Branch");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ResellerUnpaidDemandComments")]
	public partial class ResellerUnpaidDemandComment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _DemandId;
		
		private System.Nullable<int> _UserId;
		
		private System.Nullable<System.DateTime> _Date;
		
		private string _Comment;
		
		private EntityRef<Demand> _Demand;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnDemandIdChanging(int value);
    partial void OnDemandIdChanged();
    partial void OnUserIdChanging(System.Nullable<int> value);
    partial void OnUserIdChanged();
    partial void OnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    #endregion
		
		public ResellerUnpaidDemandComment()
		{
			this._Demand = default(EntityRef<Demand>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DemandId", DbType="Int NOT NULL")]
		public int DemandId
		{
			get
			{
				return this._DemandId;
			}
			set
			{
				if ((this._DemandId != value))
				{
					if (this._Demand.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDemandIdChanging(value);
					this.SendPropertyChanging();
					this._DemandId = value;
					this.SendPropertyChanged("DemandId");
					this.OnDemandIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int")]
		public System.Nullable<int> UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(200)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Demand_ResellerUnpaidDemandComment", Storage="_Demand", ThisKey="DemandId", OtherKey="Id", IsForeignKey=true)]
		public Demand Demand
		{
			get
			{
				return this._Demand.Entity;
			}
			set
			{
				Demand previousValue = this._Demand.Entity;
				if (((previousValue != value) 
							|| (this._Demand.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Demand.Entity = null;
						previousValue.ResellerUnpaidDemandComments.Remove(this);
					}
					this._Demand.Entity = value;
					if ((value != null))
					{
						value.ResellerUnpaidDemandComments.Add(this);
						this._DemandId = value.Id;
					}
					else
					{
						this._DemandId = default(int);
					}
					this.SendPropertyChanged("Demand");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_ResellerUnpaidDemandComment", Storage="_User", ThisKey="UserId", OtherKey="ID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.ResellerUnpaidDemandComments.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.ResellerUnpaidDemandComments.Add(this);
						this._UserId = value.ID;
					}
					else
					{
						this._UserId = default(Nullable<int>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BranchInvoiceComments")]
	public partial class BranchInvoiceComment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _DemandId;
		
		private System.Nullable<int> _UserId;
		
		private System.Nullable<System.DateTime> _Date;
		
		private string _Comment;
		
		private EntityRef<Demand> _Demand;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnDemandIdChanging(int value);
    partial void OnDemandIdChanged();
    partial void OnUserIdChanging(System.Nullable<int> value);
    partial void OnUserIdChanged();
    partial void OnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    #endregion
		
		public BranchInvoiceComment()
		{
			this._Demand = default(EntityRef<Demand>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DemandId", DbType="Int NOT NULL")]
		public int DemandId
		{
			get
			{
				return this._DemandId;
			}
			set
			{
				if ((this._DemandId != value))
				{
					if (this._Demand.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDemandIdChanging(value);
					this.SendPropertyChanging();
					this._DemandId = value;
					this.SendPropertyChanged("DemandId");
					this.OnDemandIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int")]
		public System.Nullable<int> UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(200)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Demand_BranchInvoiceComment", Storage="_Demand", ThisKey="DemandId", OtherKey="Id", IsForeignKey=true)]
		public Demand Demand
		{
			get
			{
				return this._Demand.Entity;
			}
			set
			{
				Demand previousValue = this._Demand.Entity;
				if (((previousValue != value) 
							|| (this._Demand.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Demand.Entity = null;
						previousValue.BranchInvoiceComments.Remove(this);
					}
					this._Demand.Entity = value;
					if ((value != null))
					{
						value.BranchInvoiceComments.Add(this);
						this._DemandId = value.Id;
					}
					else
					{
						this._DemandId = default(int);
					}
					this.SendPropertyChanged("Demand");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_BranchInvoiceComment", Storage="_User", ThisKey="UserId", OtherKey="ID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.BranchInvoiceComments.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.BranchInvoiceComments.Add(this);
						this._UserId = value.ID;
					}
					else
					{
						this._UserId = default(Nullable<int>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DeletedCustomersHistory")]
	public partial class DeletedCustomersHistory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _Phone;
		
		private int _UserId;
		
		private System.Nullable<System.DateTime> _DeleteDate;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnDeleteDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDeleteDateChanged();
    #endregion
		
		public DeletedCustomersHistory()
		{
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="NVarChar(18) NOT NULL", CanBeNull=false)]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL")]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> DeleteDate
		{
			get
			{
				return this._DeleteDate;
			}
			set
			{
				if ((this._DeleteDate != value))
				{
					this.OnDeleteDateChanging(value);
					this.SendPropertyChanging();
					this._DeleteDate = value;
					this.SendPropertyChanged("DeleteDate");
					this.OnDeleteDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_DeletedCustomersHistory", Storage="_User", ThisKey="UserId", OtherKey="ID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.DeletedCustomersHistories.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.DeletedCustomersHistories.Add(this);
						this._UserId = value.ID;
					}
					else
					{
						this._UserId = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DistributorOption")]
	public partial class DistributorOption : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<decimal> _CollectionCommission;
		
		private System.Nullable<bool> _ClientActivationSubtract;
		
		private System.Nullable<bool> _SubtractResellerCommission;
		
		private System.Nullable<int> _BoxId;
		
		private EntityRef<Box> _Box;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCollectionCommissionChanging(System.Nullable<decimal> value);
    partial void OnCollectionCommissionChanged();
    partial void OnClientActivationSubtractChanging(System.Nullable<bool> value);
    partial void OnClientActivationSubtractChanged();
    partial void OnSubtractResellerCommissionChanging(System.Nullable<bool> value);
    partial void OnSubtractResellerCommissionChanged();
    partial void OnBoxIdChanging(System.Nullable<int> value);
    partial void OnBoxIdChanged();
    #endregion
		
		public DistributorOption()
		{
			this._Box = default(EntityRef<Box>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CollectionCommission", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> CollectionCommission
		{
			get
			{
				return this._CollectionCommission;
			}
			set
			{
				if ((this._CollectionCommission != value))
				{
					this.OnCollectionCommissionChanging(value);
					this.SendPropertyChanging();
					this._CollectionCommission = value;
					this.SendPropertyChanged("CollectionCommission");
					this.OnCollectionCommissionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientActivationSubtract", DbType="Bit")]
		public System.Nullable<bool> ClientActivationSubtract
		{
			get
			{
				return this._ClientActivationSubtract;
			}
			set
			{
				if ((this._ClientActivationSubtract != value))
				{
					this.OnClientActivationSubtractChanging(value);
					this.SendPropertyChanging();
					this._ClientActivationSubtract = value;
					this.SendPropertyChanged("ClientActivationSubtract");
					this.OnClientActivationSubtractChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubtractResellerCommission", DbType="Bit")]
		public System.Nullable<bool> SubtractResellerCommission
		{
			get
			{
				return this._SubtractResellerCommission;
			}
			set
			{
				if ((this._SubtractResellerCommission != value))
				{
					this.OnSubtractResellerCommissionChanging(value);
					this.SendPropertyChanging();
					this._SubtractResellerCommission = value;
					this.SendPropertyChanged("SubtractResellerCommission");
					this.OnSubtractResellerCommissionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BoxId", DbType="Int")]
		public System.Nullable<int> BoxId
		{
			get
			{
				return this._BoxId;
			}
			set
			{
				if ((this._BoxId != value))
				{
					if (this._Box.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBoxIdChanging(value);
					this.SendPropertyChanging();
					this._BoxId = value;
					this.SendPropertyChanged("BoxId");
					this.OnBoxIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Box_DistributorOption", Storage="_Box", ThisKey="BoxId", OtherKey="ID", IsForeignKey=true)]
		public Box Box
		{
			get
			{
				return this._Box.Entity;
			}
			set
			{
				Box previousValue = this._Box.Entity;
				if (((previousValue != value) 
							|| (this._Box.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Box.Entity = null;
						previousValue.DistributorOptions.Remove(this);
					}
					this._Box.Entity = value;
					if ((value != null))
					{
						value.DistributorOptions.Add(this);
						this._BoxId = value.ID;
					}
					else
					{
						this._BoxId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Box");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DistributorProviders")]
	public partial class DistributorProvider : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _ProviderForDistributorID;
		
		private EntityRef<ServiceProvider> _ServiceProvider;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnProviderForDistributorIDChanging(System.Nullable<int> value);
    partial void OnProviderForDistributorIDChanged();
    #endregion
		
		public DistributorProvider()
		{
			this._ServiceProvider = default(EntityRef<ServiceProvider>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProviderForDistributorID", DbType="Int")]
		public System.Nullable<int> ProviderForDistributorID
		{
			get
			{
				return this._ProviderForDistributorID;
			}
			set
			{
				if ((this._ProviderForDistributorID != value))
				{
					if (this._ServiceProvider.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProviderForDistributorIDChanging(value);
					this.SendPropertyChanging();
					this._ProviderForDistributorID = value;
					this.SendPropertyChanged("ProviderForDistributorID");
					this.OnProviderForDistributorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ServiceProvider_DistributorProvider", Storage="_ServiceProvider", ThisKey="ProviderForDistributorID", OtherKey="ID", IsForeignKey=true)]
		public ServiceProvider ServiceProvider
		{
			get
			{
				return this._ServiceProvider.Entity;
			}
			set
			{
				ServiceProvider previousValue = this._ServiceProvider.Entity;
				if (((previousValue != value) 
							|| (this._ServiceProvider.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ServiceProvider.Entity = null;
						previousValue.DistributorProviders.Remove(this);
					}
					this._ServiceProvider.Entity = value;
					if ((value != null))
					{
						value.DistributorProviders.Add(this);
						this._ProviderForDistributorID = value.ID;
					}
					else
					{
						this._ProviderForDistributorID = default(Nullable<int>);
					}
					this.SendPropertyChanged("ServiceProvider");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.authentication")]
	public partial class authentication : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _UserName;
		
		private string _Password;
		
		private string _Proxy;
		
		private System.Nullable<int> _Port;
		
		private System.Nullable<bool> _UseProxy;
		
		private string _DisUserName;
		
		private string _DisPassword;
		
		private string _DisProxy;
		
		private System.Nullable<int> _DisPort;
		
		private System.Nullable<bool> _DisUseProxy;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnProxyChanging(string value);
    partial void OnProxyChanged();
    partial void OnPortChanging(System.Nullable<int> value);
    partial void OnPortChanged();
    partial void OnUseProxyChanging(System.Nullable<bool> value);
    partial void OnUseProxyChanged();
    partial void OnDisUserNameChanging(string value);
    partial void OnDisUserNameChanged();
    partial void OnDisPasswordChanging(string value);
    partial void OnDisPasswordChanged();
    partial void OnDisProxyChanging(string value);
    partial void OnDisProxyChanged();
    partial void OnDisPortChanging(System.Nullable<int> value);
    partial void OnDisPortChanged();
    partial void OnDisUseProxyChanging(System.Nullable<bool> value);
    partial void OnDisUseProxyChanged();
    #endregion
		
		public authentication()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(50)")]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(MAX)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Proxy", DbType="NVarChar(50)")]
		public string Proxy
		{
			get
			{
				return this._Proxy;
			}
			set
			{
				if ((this._Proxy != value))
				{
					this.OnProxyChanging(value);
					this.SendPropertyChanging();
					this._Proxy = value;
					this.SendPropertyChanged("Proxy");
					this.OnProxyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Port", DbType="Int")]
		public System.Nullable<int> Port
		{
			get
			{
				return this._Port;
			}
			set
			{
				if ((this._Port != value))
				{
					this.OnPortChanging(value);
					this.SendPropertyChanging();
					this._Port = value;
					this.SendPropertyChanged("Port");
					this.OnPortChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UseProxy", DbType="Bit")]
		public System.Nullable<bool> UseProxy
		{
			get
			{
				return this._UseProxy;
			}
			set
			{
				if ((this._UseProxy != value))
				{
					this.OnUseProxyChanging(value);
					this.SendPropertyChanging();
					this._UseProxy = value;
					this.SendPropertyChanged("UseProxy");
					this.OnUseProxyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisUserName", DbType="NVarChar(50)")]
		public string DisUserName
		{
			get
			{
				return this._DisUserName;
			}
			set
			{
				if ((this._DisUserName != value))
				{
					this.OnDisUserNameChanging(value);
					this.SendPropertyChanging();
					this._DisUserName = value;
					this.SendPropertyChanged("DisUserName");
					this.OnDisUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisPassword", DbType="NVarChar(MAX)")]
		public string DisPassword
		{
			get
			{
				return this._DisPassword;
			}
			set
			{
				if ((this._DisPassword != value))
				{
					this.OnDisPasswordChanging(value);
					this.SendPropertyChanging();
					this._DisPassword = value;
					this.SendPropertyChanged("DisPassword");
					this.OnDisPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisProxy", DbType="NVarChar(50)")]
		public string DisProxy
		{
			get
			{
				return this._DisProxy;
			}
			set
			{
				if ((this._DisProxy != value))
				{
					this.OnDisProxyChanging(value);
					this.SendPropertyChanging();
					this._DisProxy = value;
					this.SendPropertyChanged("DisProxy");
					this.OnDisProxyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisPort", DbType="Int")]
		public System.Nullable<int> DisPort
		{
			get
			{
				return this._DisPort;
			}
			set
			{
				if ((this._DisPort != value))
				{
					this.OnDisPortChanging(value);
					this.SendPropertyChanging();
					this._DisPort = value;
					this.SendPropertyChanged("DisPort");
					this.OnDisPortChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisUseProxy", DbType="Bit")]
		public System.Nullable<bool> DisUseProxy
		{
			get
			{
				return this._DisUseProxy;
			}
			set
			{
				if ((this._DisUseProxy != value))
				{
					this.OnDisUseProxyChanging(value);
					this.SendPropertyChanging();
					this._DisUseProxy = value;
					this.SendPropertyChanged("DisUseProxy");
					this.OnDisUseProxyChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ShowPendingRequestsOption")]
	public partial class ShowPendingRequestsOption : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private string _RequestType;
		
		private System.Nullable<bool> _Show;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnRequestTypeChanging(string value);
    partial void OnRequestTypeChanged();
    partial void OnShowChanging(System.Nullable<bool> value);
    partial void OnShowChanged();
    #endregion
		
		public ShowPendingRequestsOption()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestType", DbType="NVarChar(50)")]
		public string RequestType
		{
			get
			{
				return this._RequestType;
			}
			set
			{
				if ((this._RequestType != value))
				{
					this.OnRequestTypeChanging(value);
					this.SendPropertyChanging();
					this._RequestType = value;
					this.SendPropertyChanged("RequestType");
					this.OnRequestTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Show", DbType="Bit")]
		public System.Nullable<bool> Show
		{
			get
			{
				return this._Show;
			}
			set
			{
				if ((this._Show != value))
				{
					this.OnShowChanging(value);
					this.SendPropertyChanging();
					this._Show = value;
					this.SendPropertyChanged("Show");
					this.OnShowChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DistributorPaymentRecord")]
	public partial class DistributorPaymentRecord : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _CustomerPhone;
		
		private string _CustomerName;
		
		private System.Nullable<decimal> _Amount;
		
		private System.Nullable<System.DateTime> _PaidDate;
		
		private System.Nullable<decimal> _ResellerDistributorCommision;
		
		private System.Nullable<decimal> _NormalResellerCommision;
		
		private System.Nullable<int> _UserId;
		
		private System.Nullable<int> _WorkOrderId;
		
		private System.Nullable<int> _BoxId;
		
		private System.Nullable<int> _ResellerId;
		
		private System.Nullable<long> _TransactionNumber;
		
		private EntityRef<Box> _Box;
		
		private EntityRef<User> _User;
		
		private EntityRef<WorkOrder> _WorkOrder;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCustomerPhoneChanging(string value);
    partial void OnCustomerPhoneChanged();
    partial void OnCustomerNameChanging(string value);
    partial void OnCustomerNameChanged();
    partial void OnAmountChanging(System.Nullable<decimal> value);
    partial void OnAmountChanged();
    partial void OnPaidDateChanging(System.Nullable<System.DateTime> value);
    partial void OnPaidDateChanged();
    partial void OnResellerDistributorCommisionChanging(System.Nullable<decimal> value);
    partial void OnResellerDistributorCommisionChanged();
    partial void OnNormalResellerCommisionChanging(System.Nullable<decimal> value);
    partial void OnNormalResellerCommisionChanged();
    partial void OnUserIdChanging(System.Nullable<int> value);
    partial void OnUserIdChanged();
    partial void OnWorkOrderIdChanging(System.Nullable<int> value);
    partial void OnWorkOrderIdChanged();
    partial void OnBoxIdChanging(System.Nullable<int> value);
    partial void OnBoxIdChanged();
    partial void OnResellerIdChanging(System.Nullable<int> value);
    partial void OnResellerIdChanged();
    partial void OnTransactionNumberChanging(System.Nullable<long> value);
    partial void OnTransactionNumberChanged();
    #endregion
		
		public DistributorPaymentRecord()
		{
			this._Box = default(EntityRef<Box>);
			this._User = default(EntityRef<User>);
			this._WorkOrder = default(EntityRef<WorkOrder>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerPhone", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string CustomerPhone
		{
			get
			{
				return this._CustomerPhone;
			}
			set
			{
				if ((this._CustomerPhone != value))
				{
					this.OnCustomerPhoneChanging(value);
					this.SendPropertyChanging();
					this._CustomerPhone = value;
					this.SendPropertyChanged("CustomerPhone");
					this.OnCustomerPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerName", DbType="NVarChar(50)")]
		public string CustomerName
		{
			get
			{
				return this._CustomerName;
			}
			set
			{
				if ((this._CustomerName != value))
				{
					this.OnCustomerNameChanging(value);
					this.SendPropertyChanging();
					this._CustomerName = value;
					this.SendPropertyChanged("CustomerName");
					this.OnCustomerNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaidDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> PaidDate
		{
			get
			{
				return this._PaidDate;
			}
			set
			{
				if ((this._PaidDate != value))
				{
					this.OnPaidDateChanging(value);
					this.SendPropertyChanging();
					this._PaidDate = value;
					this.SendPropertyChanged("PaidDate");
					this.OnPaidDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResellerDistributorCommision", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> ResellerDistributorCommision
		{
			get
			{
				return this._ResellerDistributorCommision;
			}
			set
			{
				if ((this._ResellerDistributorCommision != value))
				{
					this.OnResellerDistributorCommisionChanging(value);
					this.SendPropertyChanging();
					this._ResellerDistributorCommision = value;
					this.SendPropertyChanged("ResellerDistributorCommision");
					this.OnResellerDistributorCommisionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NormalResellerCommision", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> NormalResellerCommision
		{
			get
			{
				return this._NormalResellerCommision;
			}
			set
			{
				if ((this._NormalResellerCommision != value))
				{
					this.OnNormalResellerCommisionChanging(value);
					this.SendPropertyChanging();
					this._NormalResellerCommision = value;
					this.SendPropertyChanged("NormalResellerCommision");
					this.OnNormalResellerCommisionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int")]
		public System.Nullable<int> UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkOrderId", DbType="Int")]
		public System.Nullable<int> WorkOrderId
		{
			get
			{
				return this._WorkOrderId;
			}
			set
			{
				if ((this._WorkOrderId != value))
				{
					if (this._WorkOrder.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWorkOrderIdChanging(value);
					this.SendPropertyChanging();
					this._WorkOrderId = value;
					this.SendPropertyChanged("WorkOrderId");
					this.OnWorkOrderIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BoxId", DbType="Int")]
		public System.Nullable<int> BoxId
		{
			get
			{
				return this._BoxId;
			}
			set
			{
				if ((this._BoxId != value))
				{
					if (this._Box.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBoxIdChanging(value);
					this.SendPropertyChanging();
					this._BoxId = value;
					this.SendPropertyChanged("BoxId");
					this.OnBoxIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResellerId", DbType="Int")]
		public System.Nullable<int> ResellerId
		{
			get
			{
				return this._ResellerId;
			}
			set
			{
				if ((this._ResellerId != value))
				{
					this.OnResellerIdChanging(value);
					this.SendPropertyChanging();
					this._ResellerId = value;
					this.SendPropertyChanged("ResellerId");
					this.OnResellerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionNumber", DbType="BigInt")]
		public System.Nullable<long> TransactionNumber
		{
			get
			{
				return this._TransactionNumber;
			}
			set
			{
				if ((this._TransactionNumber != value))
				{
					this.OnTransactionNumberChanging(value);
					this.SendPropertyChanging();
					this._TransactionNumber = value;
					this.SendPropertyChanged("TransactionNumber");
					this.OnTransactionNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Box_DistributorPaymentRecord", Storage="_Box", ThisKey="BoxId", OtherKey="ID", IsForeignKey=true)]
		public Box Box
		{
			get
			{
				return this._Box.Entity;
			}
			set
			{
				Box previousValue = this._Box.Entity;
				if (((previousValue != value) 
							|| (this._Box.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Box.Entity = null;
						previousValue.DistributorPaymentRecords.Remove(this);
					}
					this._Box.Entity = value;
					if ((value != null))
					{
						value.DistributorPaymentRecords.Add(this);
						this._BoxId = value.ID;
					}
					else
					{
						this._BoxId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Box");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_DistributorPaymentRecord", Storage="_User", ThisKey="UserId", OtherKey="ID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.DistributorPaymentRecords.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.DistributorPaymentRecords.Add(this);
						this._UserId = value.ID;
					}
					else
					{
						this._UserId = default(Nullable<int>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WorkOrder_DistributorPaymentRecord", Storage="_WorkOrder", ThisKey="WorkOrderId", OtherKey="ID", IsForeignKey=true)]
		public WorkOrder WorkOrder
		{
			get
			{
				return this._WorkOrder.Entity;
			}
			set
			{
				WorkOrder previousValue = this._WorkOrder.Entity;
				if (((previousValue != value) 
							|| (this._WorkOrder.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WorkOrder.Entity = null;
						previousValue.DistributorPaymentRecords.Remove(this);
					}
					this._WorkOrder.Entity = value;
					if ((value != null))
					{
						value.DistributorPaymentRecords.Add(this);
						this._WorkOrderId = value.ID;
					}
					else
					{
						this._WorkOrderId = default(Nullable<int>);
					}
					this.SendPropertyChanged("WorkOrder");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ResellerDistributorCommision")]
	public partial class ResellerDistributorCommision : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _ResellerID;
		
		private System.Nullable<decimal> _HisClientCommission;
		
		private System.Nullable<decimal> _OtherClientCommission;
		
		private string _Note;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnResellerIDChanging(int value);
    partial void OnResellerIDChanged();
    partial void OnHisClientCommissionChanging(System.Nullable<decimal> value);
    partial void OnHisClientCommissionChanged();
    partial void OnOtherClientCommissionChanging(System.Nullable<decimal> value);
    partial void OnOtherClientCommissionChanged();
    partial void OnNoteChanging(string value);
    partial void OnNoteChanged();
    #endregion
		
		public ResellerDistributorCommision()
		{
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResellerID", DbType="Int NOT NULL")]
		public int ResellerID
		{
			get
			{
				return this._ResellerID;
			}
			set
			{
				if ((this._ResellerID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnResellerIDChanging(value);
					this.SendPropertyChanging();
					this._ResellerID = value;
					this.SendPropertyChanged("ResellerID");
					this.OnResellerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HisClientCommission", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> HisClientCommission
		{
			get
			{
				return this._HisClientCommission;
			}
			set
			{
				if ((this._HisClientCommission != value))
				{
					this.OnHisClientCommissionChanging(value);
					this.SendPropertyChanging();
					this._HisClientCommission = value;
					this.SendPropertyChanged("HisClientCommission");
					this.OnHisClientCommissionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OtherClientCommission", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> OtherClientCommission
		{
			get
			{
				return this._OtherClientCommission;
			}
			set
			{
				if ((this._OtherClientCommission != value))
				{
					this.OnOtherClientCommissionChanging(value);
					this.SendPropertyChanging();
					this._OtherClientCommission = value;
					this.SendPropertyChanged("OtherClientCommission");
					this.OnOtherClientCommissionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Note", DbType="NVarChar(250)")]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this.OnNoteChanging(value);
					this.SendPropertyChanging();
					this._Note = value;
					this.SendPropertyChanged("Note");
					this.OnNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_ResellerDistributorCommision", Storage="_User", ThisKey="ResellerID", OtherKey="ID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.ResellerDistributorCommisions.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.ResellerDistributorCommisions.Add(this);
						this._ResellerID = value.ID;
					}
					else
					{
						this._ResellerID = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProcessType")]
	public partial class ProcessType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private EntitySet<UserTracking> _UserTrackings;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public ProcessType()
		{
			this._UserTrackings = new EntitySet<UserTracking>(new Action<UserTracking>(this.attach_UserTrackings), new Action<UserTracking>(this.detach_UserTrackings));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProcessType_UserTracking", Storage="_UserTrackings", ThisKey="Id", OtherKey="ProcessTypeId")]
		public EntitySet<UserTracking> UserTrackings
		{
			get
			{
				return this._UserTrackings;
			}
			set
			{
				this._UserTrackings.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_UserTrackings(UserTracking entity)
		{
			this.SendPropertyChanging();
			entity.ProcessType = this;
		}
		
		private void detach_UserTrackings(UserTracking entity)
		{
			this.SendPropertyChanging();
			entity.ProcessType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserTracking")]
	public partial class UserTracking : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _UserId;
		
		private System.Nullable<int> _ProcessTypeId;
		
		private System.Nullable<System.DateTime> _Date;
		
		private string _Note;
		
		private string _Note2;
		
		private System.Nullable<int> _WorkOrderId;
		
		private EntityRef<ProcessType> _ProcessType;
		
		private EntityRef<User> _User;
		
		private EntityRef<WorkOrder> _WorkOrder;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnProcessTypeIdChanging(System.Nullable<int> value);
    partial void OnProcessTypeIdChanged();
    partial void OnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateChanged();
    partial void OnNoteChanging(string value);
    partial void OnNoteChanged();
    partial void OnNote2Changing(string value);
    partial void OnNote2Changed();
    partial void OnWorkOrderIdChanging(System.Nullable<int> value);
    partial void OnWorkOrderIdChanged();
    #endregion
		
		public UserTracking()
		{
			this._ProcessType = default(EntityRef<ProcessType>);
			this._User = default(EntityRef<User>);
			this._WorkOrder = default(EntityRef<WorkOrder>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL")]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProcessTypeId", DbType="Int")]
		public System.Nullable<int> ProcessTypeId
		{
			get
			{
				return this._ProcessTypeId;
			}
			set
			{
				if ((this._ProcessTypeId != value))
				{
					if (this._ProcessType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProcessTypeIdChanging(value);
					this.SendPropertyChanging();
					this._ProcessTypeId = value;
					this.SendPropertyChanged("ProcessTypeId");
					this.OnProcessTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Note", DbType="NVarChar(400)")]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this.OnNoteChanging(value);
					this.SendPropertyChanging();
					this._Note = value;
					this.SendPropertyChanged("Note");
					this.OnNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Note2", DbType="NChar(300)")]
		public string Note2
		{
			get
			{
				return this._Note2;
			}
			set
			{
				if ((this._Note2 != value))
				{
					this.OnNote2Changing(value);
					this.SendPropertyChanging();
					this._Note2 = value;
					this.SendPropertyChanged("Note2");
					this.OnNote2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkOrderId", DbType="Int")]
		public System.Nullable<int> WorkOrderId
		{
			get
			{
				return this._WorkOrderId;
			}
			set
			{
				if ((this._WorkOrderId != value))
				{
					if (this._WorkOrder.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWorkOrderIdChanging(value);
					this.SendPropertyChanging();
					this._WorkOrderId = value;
					this.SendPropertyChanged("WorkOrderId");
					this.OnWorkOrderIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProcessType_UserTracking", Storage="_ProcessType", ThisKey="ProcessTypeId", OtherKey="Id", IsForeignKey=true)]
		public ProcessType ProcessType
		{
			get
			{
				return this._ProcessType.Entity;
			}
			set
			{
				ProcessType previousValue = this._ProcessType.Entity;
				if (((previousValue != value) 
							|| (this._ProcessType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProcessType.Entity = null;
						previousValue.UserTrackings.Remove(this);
					}
					this._ProcessType.Entity = value;
					if ((value != null))
					{
						value.UserTrackings.Add(this);
						this._ProcessTypeId = value.Id;
					}
					else
					{
						this._ProcessTypeId = default(Nullable<int>);
					}
					this.SendPropertyChanged("ProcessType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserTracking", Storage="_User", ThisKey="UserId", OtherKey="ID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.UserTrackings.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.UserTrackings.Add(this);
						this._UserId = value.ID;
					}
					else
					{
						this._UserId = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WorkOrder_UserTracking", Storage="_WorkOrder", ThisKey="WorkOrderId", OtherKey="ID", IsForeignKey=true)]
		public WorkOrder WorkOrder
		{
			get
			{
				return this._WorkOrder.Entity;
			}
			set
			{
				WorkOrder previousValue = this._WorkOrder.Entity;
				if (((previousValue != value) 
							|| (this._WorkOrder.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WorkOrder.Entity = null;
						previousValue.UserTrackings.Remove(this);
					}
					this._WorkOrder.Entity = value;
					if ((value != null))
					{
						value.UserTrackings.Add(this);
						this._WorkOrderId = value.ID;
					}
					else
					{
						this._WorkOrderId = default(Nullable<int>);
					}
					this.SendPropertyChanged("WorkOrder");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Periods")]
	public partial class Period : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Period1;
		
		private EntitySet<WorkOrderRequest> _WorkOrderRequests;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnPeriod1Changing(string value);
    partial void OnPeriod1Changed();
    #endregion
		
		public Period()
		{
			this._WorkOrderRequests = new EntitySet<WorkOrderRequest>(new Action<WorkOrderRequest>(this.attach_WorkOrderRequests), new Action<WorkOrderRequest>(this.detach_WorkOrderRequests));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Period", Storage="_Period1", DbType="NVarChar(6)")]
		public string Period1
		{
			get
			{
				return this._Period1;
			}
			set
			{
				if ((this._Period1 != value))
				{
					this.OnPeriod1Changing(value);
					this.SendPropertyChanging();
					this._Period1 = value;
					this.SendPropertyChanged("Period1");
					this.OnPeriod1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Period_WorkOrderRequest", Storage="_WorkOrderRequests", ThisKey="Id", OtherKey="PeriodId")]
		public EntitySet<WorkOrderRequest> WorkOrderRequests
		{
			get
			{
				return this._WorkOrderRequests;
			}
			set
			{
				this._WorkOrderRequests.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_WorkOrderRequests(WorkOrderRequest entity)
		{
			this.SendPropertyChanging();
			entity.Period = this;
		}
		
		private void detach_WorkOrderRequests(WorkOrderRequest entity)
		{
			this.SendPropertyChanging();
			entity.Period = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WorkOrderRequests")]
	public partial class WorkOrderRequest : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _WorkOrderID;
		
		private System.Nullable<int> _RequestID;
		
		private System.Nullable<System.DateTime> _RequestDate;
		
		private string _Notes;
		
		private System.Nullable<int> _RSID;
		
		private System.Nullable<System.DateTime> _ProcessDate;
		
		private System.Nullable<int> _CurrentPackageID;
		
		private System.Nullable<int> _NewPackageID;
		
		private System.Nullable<int> _ExtraGigaId;
		
		private System.Nullable<int> _NewIpPackageID;
		
		private string _RejectReason;
		
		private System.Nullable<int> _SenderID;
		
		private System.Nullable<int> _ConfirmerID;
		
		private System.Nullable<decimal> _Total;
		
		private System.Nullable<bool> _IsTransfered;
		
		private System.Nullable<int> _DemandId;
		
		private System.Nullable<int> _NewOfferId;
		
		private System.Nullable<bool> _IsProviderRequest;
		
		private System.Nullable<int> _PeriodId;
		
		private EntityRef<Demand> _Demand;
		
		private EntityRef<ExtraGiga> _ExtraGiga;
		
		private EntityRef<IpPackage> _IpPackage;
		
		private EntityRef<Offer> _Offer;
		
		private EntityRef<Period> _Period;
		
		private EntityRef<Request> _Request;
		
		private EntityRef<RequestStatus> _RequestStatus;
		
		private EntityRef<ServicePackage> _ServicePackage;
		
		private EntityRef<ServicePackage> _ServicePackage1;
		
		private EntityRef<User> _User;
		
		private EntityRef<User> _User1;
		
		private EntityRef<WorkOrder> _WorkOrder;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnWorkOrderIDChanging(System.Nullable<int> value);
    partial void OnWorkOrderIDChanged();
    partial void OnRequestIDChanging(System.Nullable<int> value);
    partial void OnRequestIDChanged();
    partial void OnRequestDateChanging(System.Nullable<System.DateTime> value);
    partial void OnRequestDateChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnRSIDChanging(System.Nullable<int> value);
    partial void OnRSIDChanged();
    partial void OnProcessDateChanging(System.Nullable<System.DateTime> value);
    partial void OnProcessDateChanged();
    partial void OnCurrentPackageIDChanging(System.Nullable<int> value);
    partial void OnCurrentPackageIDChanged();
    partial void OnNewPackageIDChanging(System.Nullable<int> value);
    partial void OnNewPackageIDChanged();
    partial void OnExtraGigaIdChanging(System.Nullable<int> value);
    partial void OnExtraGigaIdChanged();
    partial void OnNewIpPackageIDChanging(System.Nullable<int> value);
    partial void OnNewIpPackageIDChanged();
    partial void OnRejectReasonChanging(string value);
    partial void OnRejectReasonChanged();
    partial void OnSenderIDChanging(System.Nullable<int> value);
    partial void OnSenderIDChanged();
    partial void OnConfirmerIDChanging(System.Nullable<int> value);
    partial void OnConfirmerIDChanged();
    partial void OnTotalChanging(System.Nullable<decimal> value);
    partial void OnTotalChanged();
    partial void OnIsTransferedChanging(System.Nullable<bool> value);
    partial void OnIsTransferedChanged();
    partial void OnDemandIdChanging(System.Nullable<int> value);
    partial void OnDemandIdChanged();
    partial void OnNewOfferIdChanging(System.Nullable<int> value);
    partial void OnNewOfferIdChanged();
    partial void OnIsProviderRequestChanging(System.Nullable<bool> value);
    partial void OnIsProviderRequestChanged();
    partial void OnPeriodIdChanging(System.Nullable<int> value);
    partial void OnPeriodIdChanged();
    #endregion
		
		public WorkOrderRequest()
		{
			this._Demand = default(EntityRef<Demand>);
			this._ExtraGiga = default(EntityRef<ExtraGiga>);
			this._IpPackage = default(EntityRef<IpPackage>);
			this._Offer = default(EntityRef<Offer>);
			this._Period = default(EntityRef<Period>);
			this._Request = default(EntityRef<Request>);
			this._RequestStatus = default(EntityRef<RequestStatus>);
			this._ServicePackage = default(EntityRef<ServicePackage>);
			this._ServicePackage1 = default(EntityRef<ServicePackage>);
			this._User = default(EntityRef<User>);
			this._User1 = default(EntityRef<User>);
			this._WorkOrder = default(EntityRef<WorkOrder>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkOrderID", DbType="Int")]
		public System.Nullable<int> WorkOrderID
		{
			get
			{
				return this._WorkOrderID;
			}
			set
			{
				if ((this._WorkOrderID != value))
				{
					if (this._WorkOrder.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWorkOrderIDChanging(value);
					this.SendPropertyChanging();
					this._WorkOrderID = value;
					this.SendPropertyChanged("WorkOrderID");
					this.OnWorkOrderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestID", DbType="Int")]
		public System.Nullable<int> RequestID
		{
			get
			{
				return this._RequestID;
			}
			set
			{
				if ((this._RequestID != value))
				{
					if (this._Request.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRequestIDChanging(value);
					this.SendPropertyChanging();
					this._RequestID = value;
					this.SendPropertyChanged("RequestID");
					this.OnRequestIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> RequestDate
		{
			get
			{
				return this._RequestDate;
			}
			set
			{
				if ((this._RequestDate != value))
				{
					this.OnRequestDateChanging(value);
					this.SendPropertyChanging();
					this._RequestDate = value;
					this.SendPropertyChanged("RequestDate");
					this.OnRequestDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RSID", DbType="Int")]
		public System.Nullable<int> RSID
		{
			get
			{
				return this._RSID;
			}
			set
			{
				if ((this._RSID != value))
				{
					if (this._RequestStatus.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRSIDChanging(value);
					this.SendPropertyChanging();
					this._RSID = value;
					this.SendPropertyChanged("RSID");
					this.OnRSIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProcessDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ProcessDate
		{
			get
			{
				return this._ProcessDate;
			}
			set
			{
				if ((this._ProcessDate != value))
				{
					this.OnProcessDateChanging(value);
					this.SendPropertyChanging();
					this._ProcessDate = value;
					this.SendPropertyChanged("ProcessDate");
					this.OnProcessDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrentPackageID", DbType="Int")]
		public System.Nullable<int> CurrentPackageID
		{
			get
			{
				return this._CurrentPackageID;
			}
			set
			{
				if ((this._CurrentPackageID != value))
				{
					if (this._ServicePackage.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCurrentPackageIDChanging(value);
					this.SendPropertyChanging();
					this._CurrentPackageID = value;
					this.SendPropertyChanged("CurrentPackageID");
					this.OnCurrentPackageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewPackageID", DbType="Int")]
		public System.Nullable<int> NewPackageID
		{
			get
			{
				return this._NewPackageID;
			}
			set
			{
				if ((this._NewPackageID != value))
				{
					if (this._ServicePackage1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNewPackageIDChanging(value);
					this.SendPropertyChanging();
					this._NewPackageID = value;
					this.SendPropertyChanged("NewPackageID");
					this.OnNewPackageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExtraGigaId", DbType="Int")]
		public System.Nullable<int> ExtraGigaId
		{
			get
			{
				return this._ExtraGigaId;
			}
			set
			{
				if ((this._ExtraGigaId != value))
				{
					if (this._ExtraGiga.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnExtraGigaIdChanging(value);
					this.SendPropertyChanging();
					this._ExtraGigaId = value;
					this.SendPropertyChanged("ExtraGigaId");
					this.OnExtraGigaIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewIpPackageID", DbType="Int")]
		public System.Nullable<int> NewIpPackageID
		{
			get
			{
				return this._NewIpPackageID;
			}
			set
			{
				if ((this._NewIpPackageID != value))
				{
					if (this._IpPackage.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNewIpPackageIDChanging(value);
					this.SendPropertyChanging();
					this._NewIpPackageID = value;
					this.SendPropertyChanged("NewIpPackageID");
					this.OnNewIpPackageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RejectReason", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string RejectReason
		{
			get
			{
				return this._RejectReason;
			}
			set
			{
				if ((this._RejectReason != value))
				{
					this.OnRejectReasonChanging(value);
					this.SendPropertyChanging();
					this._RejectReason = value;
					this.SendPropertyChanged("RejectReason");
					this.OnRejectReasonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SenderID", DbType="Int")]
		public System.Nullable<int> SenderID
		{
			get
			{
				return this._SenderID;
			}
			set
			{
				if ((this._SenderID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSenderIDChanging(value);
					this.SendPropertyChanging();
					this._SenderID = value;
					this.SendPropertyChanged("SenderID");
					this.OnSenderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConfirmerID", DbType="Int")]
		public System.Nullable<int> ConfirmerID
		{
			get
			{
				return this._ConfirmerID;
			}
			set
			{
				if ((this._ConfirmerID != value))
				{
					if (this._User1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnConfirmerIDChanging(value);
					this.SendPropertyChanging();
					this._ConfirmerID = value;
					this.SendPropertyChanged("ConfirmerID");
					this.OnConfirmerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Total", DbType="Money")]
		public System.Nullable<decimal> Total
		{
			get
			{
				return this._Total;
			}
			set
			{
				if ((this._Total != value))
				{
					this.OnTotalChanging(value);
					this.SendPropertyChanging();
					this._Total = value;
					this.SendPropertyChanged("Total");
					this.OnTotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsTransfered", DbType="Bit")]
		public System.Nullable<bool> IsTransfered
		{
			get
			{
				return this._IsTransfered;
			}
			set
			{
				if ((this._IsTransfered != value))
				{
					this.OnIsTransferedChanging(value);
					this.SendPropertyChanging();
					this._IsTransfered = value;
					this.SendPropertyChanged("IsTransfered");
					this.OnIsTransferedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DemandId", DbType="Int")]
		public System.Nullable<int> DemandId
		{
			get
			{
				return this._DemandId;
			}
			set
			{
				if ((this._DemandId != value))
				{
					if (this._Demand.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDemandIdChanging(value);
					this.SendPropertyChanging();
					this._DemandId = value;
					this.SendPropertyChanged("DemandId");
					this.OnDemandIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewOfferId", DbType="Int")]
		public System.Nullable<int> NewOfferId
		{
			get
			{
				return this._NewOfferId;
			}
			set
			{
				if ((this._NewOfferId != value))
				{
					if (this._Offer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNewOfferIdChanging(value);
					this.SendPropertyChanging();
					this._NewOfferId = value;
					this.SendPropertyChanged("NewOfferId");
					this.OnNewOfferIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsProviderRequest", DbType="Bit")]
		public System.Nullable<bool> IsProviderRequest
		{
			get
			{
				return this._IsProviderRequest;
			}
			set
			{
				if ((this._IsProviderRequest != value))
				{
					this.OnIsProviderRequestChanging(value);
					this.SendPropertyChanging();
					this._IsProviderRequest = value;
					this.SendPropertyChanged("IsProviderRequest");
					this.OnIsProviderRequestChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PeriodId", DbType="Int")]
		public System.Nullable<int> PeriodId
		{
			get
			{
				return this._PeriodId;
			}
			set
			{
				if ((this._PeriodId != value))
				{
					if (this._Period.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPeriodIdChanging(value);
					this.SendPropertyChanging();
					this._PeriodId = value;
					this.SendPropertyChanged("PeriodId");
					this.OnPeriodIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Demand_WorkOrderRequest", Storage="_Demand", ThisKey="DemandId", OtherKey="Id", IsForeignKey=true)]
		public Demand Demand
		{
			get
			{
				return this._Demand.Entity;
			}
			set
			{
				Demand previousValue = this._Demand.Entity;
				if (((previousValue != value) 
							|| (this._Demand.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Demand.Entity = null;
						previousValue.WorkOrderRequests.Remove(this);
					}
					this._Demand.Entity = value;
					if ((value != null))
					{
						value.WorkOrderRequests.Add(this);
						this._DemandId = value.Id;
					}
					else
					{
						this._DemandId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Demand");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ExtraGiga_WorkOrderRequest", Storage="_ExtraGiga", ThisKey="ExtraGigaId", OtherKey="Id", IsForeignKey=true)]
		public ExtraGiga ExtraGiga
		{
			get
			{
				return this._ExtraGiga.Entity;
			}
			set
			{
				ExtraGiga previousValue = this._ExtraGiga.Entity;
				if (((previousValue != value) 
							|| (this._ExtraGiga.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ExtraGiga.Entity = null;
						previousValue.WorkOrderRequests.Remove(this);
					}
					this._ExtraGiga.Entity = value;
					if ((value != null))
					{
						value.WorkOrderRequests.Add(this);
						this._ExtraGigaId = value.Id;
					}
					else
					{
						this._ExtraGigaId = default(Nullable<int>);
					}
					this.SendPropertyChanged("ExtraGiga");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="IpPackage_WorkOrderRequest", Storage="_IpPackage", ThisKey="NewIpPackageID", OtherKey="ID", IsForeignKey=true)]
		public IpPackage IpPackage
		{
			get
			{
				return this._IpPackage.Entity;
			}
			set
			{
				IpPackage previousValue = this._IpPackage.Entity;
				if (((previousValue != value) 
							|| (this._IpPackage.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._IpPackage.Entity = null;
						previousValue.WorkOrderRequests.Remove(this);
					}
					this._IpPackage.Entity = value;
					if ((value != null))
					{
						value.WorkOrderRequests.Add(this);
						this._NewIpPackageID = value.ID;
					}
					else
					{
						this._NewIpPackageID = default(Nullable<int>);
					}
					this.SendPropertyChanged("IpPackage");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Offer_WorkOrderRequest", Storage="_Offer", ThisKey="NewOfferId", OtherKey="Id", IsForeignKey=true)]
		public Offer Offer
		{
			get
			{
				return this._Offer.Entity;
			}
			set
			{
				Offer previousValue = this._Offer.Entity;
				if (((previousValue != value) 
							|| (this._Offer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Offer.Entity = null;
						previousValue.WorkOrderRequests.Remove(this);
					}
					this._Offer.Entity = value;
					if ((value != null))
					{
						value.WorkOrderRequests.Add(this);
						this._NewOfferId = value.Id;
					}
					else
					{
						this._NewOfferId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Offer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Period_WorkOrderRequest", Storage="_Period", ThisKey="PeriodId", OtherKey="Id", IsForeignKey=true)]
		public Period Period
		{
			get
			{
				return this._Period.Entity;
			}
			set
			{
				Period previousValue = this._Period.Entity;
				if (((previousValue != value) 
							|| (this._Period.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Period.Entity = null;
						previousValue.WorkOrderRequests.Remove(this);
					}
					this._Period.Entity = value;
					if ((value != null))
					{
						value.WorkOrderRequests.Add(this);
						this._PeriodId = value.Id;
					}
					else
					{
						this._PeriodId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Period");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Request_WorkOrderRequest", Storage="_Request", ThisKey="RequestID", OtherKey="ID", IsForeignKey=true)]
		public Request Request
		{
			get
			{
				return this._Request.Entity;
			}
			set
			{
				Request previousValue = this._Request.Entity;
				if (((previousValue != value) 
							|| (this._Request.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Request.Entity = null;
						previousValue.WorkOrderRequests.Remove(this);
					}
					this._Request.Entity = value;
					if ((value != null))
					{
						value.WorkOrderRequests.Add(this);
						this._RequestID = value.ID;
					}
					else
					{
						this._RequestID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Request");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RequestStatus_WorkOrderRequest", Storage="_RequestStatus", ThisKey="RSID", OtherKey="ID", IsForeignKey=true)]
		public RequestStatus RequestStatus
		{
			get
			{
				return this._RequestStatus.Entity;
			}
			set
			{
				RequestStatus previousValue = this._RequestStatus.Entity;
				if (((previousValue != value) 
							|| (this._RequestStatus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RequestStatus.Entity = null;
						previousValue.WorkOrderRequests.Remove(this);
					}
					this._RequestStatus.Entity = value;
					if ((value != null))
					{
						value.WorkOrderRequests.Add(this);
						this._RSID = value.ID;
					}
					else
					{
						this._RSID = default(Nullable<int>);
					}
					this.SendPropertyChanged("RequestStatus");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ServicePackage_WorkOrderRequest", Storage="_ServicePackage", ThisKey="CurrentPackageID", OtherKey="ID", IsForeignKey=true)]
		public ServicePackage ServicePackage
		{
			get
			{
				return this._ServicePackage.Entity;
			}
			set
			{
				ServicePackage previousValue = this._ServicePackage.Entity;
				if (((previousValue != value) 
							|| (this._ServicePackage.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ServicePackage.Entity = null;
						previousValue.WorkOrderRequests.Remove(this);
					}
					this._ServicePackage.Entity = value;
					if ((value != null))
					{
						value.WorkOrderRequests.Add(this);
						this._CurrentPackageID = value.ID;
					}
					else
					{
						this._CurrentPackageID = default(Nullable<int>);
					}
					this.SendPropertyChanged("ServicePackage");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ServicePackage_WorkOrderRequest1", Storage="_ServicePackage1", ThisKey="NewPackageID", OtherKey="ID", IsForeignKey=true)]
		public ServicePackage ServicePackage1
		{
			get
			{
				return this._ServicePackage1.Entity;
			}
			set
			{
				ServicePackage previousValue = this._ServicePackage1.Entity;
				if (((previousValue != value) 
							|| (this._ServicePackage1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ServicePackage1.Entity = null;
						previousValue.WorkOrderRequests1.Remove(this);
					}
					this._ServicePackage1.Entity = value;
					if ((value != null))
					{
						value.WorkOrderRequests1.Add(this);
						this._NewPackageID = value.ID;
					}
					else
					{
						this._NewPackageID = default(Nullable<int>);
					}
					this.SendPropertyChanged("ServicePackage1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_WorkOrderRequest", Storage="_User", ThisKey="SenderID", OtherKey="ID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.WorkOrderRequests.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.WorkOrderRequests.Add(this);
						this._SenderID = value.ID;
					}
					else
					{
						this._SenderID = default(Nullable<int>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_WorkOrderRequest1", Storage="_User1", ThisKey="ConfirmerID", OtherKey="ID", IsForeignKey=true)]
		public User User1
		{
			get
			{
				return this._User1.Entity;
			}
			set
			{
				User previousValue = this._User1.Entity;
				if (((previousValue != value) 
							|| (this._User1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User1.Entity = null;
						previousValue.WorkOrderRequests1.Remove(this);
					}
					this._User1.Entity = value;
					if ((value != null))
					{
						value.WorkOrderRequests1.Add(this);
						this._ConfirmerID = value.ID;
					}
					else
					{
						this._ConfirmerID = default(Nullable<int>);
					}
					this.SendPropertyChanged("User1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WorkOrder_WorkOrderRequest", Storage="_WorkOrder", ThisKey="WorkOrderID", OtherKey="ID", IsForeignKey=true)]
		public WorkOrder WorkOrder
		{
			get
			{
				return this._WorkOrder.Entity;
			}
			set
			{
				WorkOrder previousValue = this._WorkOrder.Entity;
				if (((previousValue != value) 
							|| (this._WorkOrder.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WorkOrder.Entity = null;
						previousValue.WorkOrderRequests.Remove(this);
					}
					this._WorkOrder.Entity = value;
					if ((value != null))
					{
						value.WorkOrderRequests.Add(this);
						this._WorkOrderID = value.ID;
					}
					else
					{
						this._WorkOrderID = default(Nullable<int>);
					}
					this.SendPropertyChanged("WorkOrder");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TransferBetweenSavesRequests")]
	public partial class TransferBetweenSavesRequest : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _FromSave;
		
		private int _ToSave;
		
		private decimal _Amount;
		
		private int _RequestMakerId;
		
		private System.Nullable<int> _ConfirmerUserId;
		
		private System.Nullable<System.DateTime> _RequestDate;
		
		private System.Nullable<bool> _Status;
		
		private System.Nullable<System.DateTime> _ApprovedDate;
		
		private string _RequestMakerNote;
		
		private string _ConfirmerNote;
		
		private EntityRef<Save> _Save;
		
		private EntityRef<Save> _Save1;
		
		private EntityRef<User> _User;
		
		private EntityRef<User> _User1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnFromSaveChanging(int value);
    partial void OnFromSaveChanged();
    partial void OnToSaveChanging(int value);
    partial void OnToSaveChanged();
    partial void OnAmountChanging(decimal value);
    partial void OnAmountChanged();
    partial void OnRequestMakerIdChanging(int value);
    partial void OnRequestMakerIdChanged();
    partial void OnConfirmerUserIdChanging(System.Nullable<int> value);
    partial void OnConfirmerUserIdChanged();
    partial void OnRequestDateChanging(System.Nullable<System.DateTime> value);
    partial void OnRequestDateChanged();
    partial void OnStatusChanging(System.Nullable<bool> value);
    partial void OnStatusChanged();
    partial void OnApprovedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnApprovedDateChanged();
    partial void OnRequestMakerNoteChanging(string value);
    partial void OnRequestMakerNoteChanged();
    partial void OnConfirmerNoteChanging(string value);
    partial void OnConfirmerNoteChanged();
    #endregion
		
		public TransferBetweenSavesRequest()
		{
			this._Save = default(EntityRef<Save>);
			this._Save1 = default(EntityRef<Save>);
			this._User = default(EntityRef<User>);
			this._User1 = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromSave", DbType="Int NOT NULL")]
		public int FromSave
		{
			get
			{
				return this._FromSave;
			}
			set
			{
				if ((this._FromSave != value))
				{
					if (this._Save.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFromSaveChanging(value);
					this.SendPropertyChanging();
					this._FromSave = value;
					this.SendPropertyChanged("FromSave");
					this.OnFromSaveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToSave", DbType="Int NOT NULL")]
		public int ToSave
		{
			get
			{
				return this._ToSave;
			}
			set
			{
				if ((this._ToSave != value))
				{
					if (this._Save1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnToSaveChanging(value);
					this.SendPropertyChanging();
					this._ToSave = value;
					this.SendPropertyChanged("ToSave");
					this.OnToSaveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(9,2) NOT NULL")]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestMakerId", DbType="Int NOT NULL")]
		public int RequestMakerId
		{
			get
			{
				return this._RequestMakerId;
			}
			set
			{
				if ((this._RequestMakerId != value))
				{
					if (this._User1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRequestMakerIdChanging(value);
					this.SendPropertyChanging();
					this._RequestMakerId = value;
					this.SendPropertyChanged("RequestMakerId");
					this.OnRequestMakerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConfirmerUserId", DbType="Int")]
		public System.Nullable<int> ConfirmerUserId
		{
			get
			{
				return this._ConfirmerUserId;
			}
			set
			{
				if ((this._ConfirmerUserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnConfirmerUserIdChanging(value);
					this.SendPropertyChanging();
					this._ConfirmerUserId = value;
					this.SendPropertyChanged("ConfirmerUserId");
					this.OnConfirmerUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> RequestDate
		{
			get
			{
				return this._RequestDate;
			}
			set
			{
				if ((this._RequestDate != value))
				{
					this.OnRequestDateChanging(value);
					this.SendPropertyChanging();
					this._RequestDate = value;
					this.SendPropertyChanged("RequestDate");
					this.OnRequestDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Bit")]
		public System.Nullable<bool> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApprovedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ApprovedDate
		{
			get
			{
				return this._ApprovedDate;
			}
			set
			{
				if ((this._ApprovedDate != value))
				{
					this.OnApprovedDateChanging(value);
					this.SendPropertyChanging();
					this._ApprovedDate = value;
					this.SendPropertyChanged("ApprovedDate");
					this.OnApprovedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestMakerNote", DbType="NVarChar(150)")]
		public string RequestMakerNote
		{
			get
			{
				return this._RequestMakerNote;
			}
			set
			{
				if ((this._RequestMakerNote != value))
				{
					this.OnRequestMakerNoteChanging(value);
					this.SendPropertyChanging();
					this._RequestMakerNote = value;
					this.SendPropertyChanged("RequestMakerNote");
					this.OnRequestMakerNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConfirmerNote", DbType="NVarChar(150)")]
		public string ConfirmerNote
		{
			get
			{
				return this._ConfirmerNote;
			}
			set
			{
				if ((this._ConfirmerNote != value))
				{
					this.OnConfirmerNoteChanging(value);
					this.SendPropertyChanging();
					this._ConfirmerNote = value;
					this.SendPropertyChanged("ConfirmerNote");
					this.OnConfirmerNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Save_TransferBetweenSavesRequest", Storage="_Save", ThisKey="FromSave", OtherKey="Id", IsForeignKey=true)]
		public Save Save
		{
			get
			{
				return this._Save.Entity;
			}
			set
			{
				Save previousValue = this._Save.Entity;
				if (((previousValue != value) 
							|| (this._Save.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Save.Entity = null;
						previousValue.TransferBetweenSavesRequests.Remove(this);
					}
					this._Save.Entity = value;
					if ((value != null))
					{
						value.TransferBetweenSavesRequests.Add(this);
						this._FromSave = value.Id;
					}
					else
					{
						this._FromSave = default(int);
					}
					this.SendPropertyChanged("Save");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Save_TransferBetweenSavesRequest1", Storage="_Save1", ThisKey="ToSave", OtherKey="Id", IsForeignKey=true)]
		public Save Save1
		{
			get
			{
				return this._Save1.Entity;
			}
			set
			{
				Save previousValue = this._Save1.Entity;
				if (((previousValue != value) 
							|| (this._Save1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Save1.Entity = null;
						previousValue.TransferBetweenSavesRequests1.Remove(this);
					}
					this._Save1.Entity = value;
					if ((value != null))
					{
						value.TransferBetweenSavesRequests1.Add(this);
						this._ToSave = value.Id;
					}
					else
					{
						this._ToSave = default(int);
					}
					this.SendPropertyChanged("Save1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_TransferBetweenSavesRequest", Storage="_User", ThisKey="ConfirmerUserId", OtherKey="ID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.TransferBetweenSavesRequests.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.TransferBetweenSavesRequests.Add(this);
						this._ConfirmerUserId = value.ID;
					}
					else
					{
						this._ConfirmerUserId = default(Nullable<int>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_TransferBetweenSavesRequest1", Storage="_User1", ThisKey="RequestMakerId", OtherKey="ID", IsForeignKey=true)]
		public User User1
		{
			get
			{
				return this._User1.Entity;
			}
			set
			{
				User previousValue = this._User1.Entity;
				if (((previousValue != value) 
							|| (this._User1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User1.Entity = null;
						previousValue.TransferBetweenSavesRequests1.Remove(this);
					}
					this._User1.Entity = value;
					if ((value != null))
					{
						value.TransferBetweenSavesRequests1.Add(this);
						this._RequestMakerId = value.ID;
					}
					else
					{
						this._RequestMakerId = default(int);
					}
					this.SendPropertyChanged("User1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Options")]
	public partial class Option : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private bool _IncludeGovernorateInSearch;
		
		private bool _MergeGovernorateWithPhoneInCreateCustomer;
		
		private int _SuspendDaysCount;
		
		private System.Nullable<bool> _WidthOfReciept;
		
		private bool _DiscoundFromBranchCredit;
		
		private System.Nullable<int> _FromDay;
		
		private System.Nullable<int> _ToDay;
		
		private System.Nullable<int> _TimeDifference;
		
		private bool _DiscoundfromResellerandBranch;
		
		private bool _UploadFielsToNewCustomer;
		
		private bool _Allowminuscredit;
		
		private bool _ShowStatistic;
		
		private bool _IntallationDiscound;
		
		private System.Nullable<int> _DaysOfUnpaidDemandsLimit;
		
		private System.Nullable<int> _AlertWayOfUnpaidDemand;
		
		private string _ReminderMessage;
		
		private System.Nullable<int> _ReminderToUserId;
		
		private System.Nullable<bool> _ActiveCulture;
		
		private System.Nullable<bool> _SendMessageAfterOperations;
		
		private System.Nullable<bool> _ShowCounters;
		
		private System.Nullable<bool> _ShowRequestsInSearch;
		
		private System.Nullable<bool> _ValidationOnCustomerPhone;
		
		private System.Nullable<bool> _ShowAllDemandOfPR;
		
		private System.Nullable<bool> _FawryService;
		
		private string _FawryType;
		
		private System.Nullable<bool> _updatedemandnextmonth;
		
		private System.Nullable<bool> _AutoSuspendCustomersUnderReseller;
		
		private System.Nullable<bool> _ShowDeductionWithFixedRequestDateInCD;
		
		private System.Nullable<int> _PortalRelayDays;
		
		private System.Nullable<bool> _PreventUnsusForCustomerHasIndebtedness;
		
		private System.Nullable<bool> _PreventSuspendBeforeMonthFromReActive;
		
		private System.Nullable<int> _ConvertFromPackageType;
		
		private System.Nullable<int> _ConvertToPackageType;
		
		private System.Nullable<decimal> _ConversionDebt;
		
		private System.Nullable<int> _Day1;
		
		private System.Nullable<int> _Day2;
		
		private System.Nullable<int> _Day3;
		
		private System.Nullable<int> _Day4;
		
		private System.Nullable<int> _Day5;
		
		private System.Nullable<int> _Day6;
		
		private System.Nullable<int> _Percentage1;
		
		private System.Nullable<int> _Percentage2;
		
		private System.Nullable<int> _Percentage3;
		
		private System.Nullable<int> _Percentage4;
		
		private System.Nullable<int> _Percentage5;
		
		private System.Nullable<int> _Percentage6;
		
		private System.Nullable<bool> _IsResellerPaymentActive;
		
		private System.Nullable<bool> _AutoResellerPayment;
		
		private System.Nullable<bool> _AutoBranchPayment;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnIncludeGovernorateInSearchChanging(bool value);
    partial void OnIncludeGovernorateInSearchChanged();
    partial void OnMergeGovernorateWithPhoneInCreateCustomerChanging(bool value);
    partial void OnMergeGovernorateWithPhoneInCreateCustomerChanged();
    partial void OnSuspendDaysCountChanging(int value);
    partial void OnSuspendDaysCountChanged();
    partial void OnWidthOfRecieptChanging(System.Nullable<bool> value);
    partial void OnWidthOfRecieptChanged();
    partial void OnDiscoundFromBranchCreditChanging(bool value);
    partial void OnDiscoundFromBranchCreditChanged();
    partial void OnFromDayChanging(System.Nullable<int> value);
    partial void OnFromDayChanged();
    partial void OnToDayChanging(System.Nullable<int> value);
    partial void OnToDayChanged();
    partial void OnTimeDifferenceChanging(System.Nullable<int> value);
    partial void OnTimeDifferenceChanged();
    partial void OnDiscoundfromResellerandBranchChanging(bool value);
    partial void OnDiscoundfromResellerandBranchChanged();
    partial void OnUploadFielsToNewCustomerChanging(bool value);
    partial void OnUploadFielsToNewCustomerChanged();
    partial void OnAllowminuscreditChanging(bool value);
    partial void OnAllowminuscreditChanged();
    partial void OnShowStatisticChanging(bool value);
    partial void OnShowStatisticChanged();
    partial void OnIntallationDiscoundChanging(bool value);
    partial void OnIntallationDiscoundChanged();
    partial void OnDaysOfUnpaidDemandsLimitChanging(System.Nullable<int> value);
    partial void OnDaysOfUnpaidDemandsLimitChanged();
    partial void OnAlertWayOfUnpaidDemandChanging(System.Nullable<int> value);
    partial void OnAlertWayOfUnpaidDemandChanged();
    partial void OnReminderMessageChanging(string value);
    partial void OnReminderMessageChanged();
    partial void OnReminderToUserIdChanging(System.Nullable<int> value);
    partial void OnReminderToUserIdChanged();
    partial void OnActiveCultureChanging(System.Nullable<bool> value);
    partial void OnActiveCultureChanged();
    partial void OnSendMessageAfterOperationsChanging(System.Nullable<bool> value);
    partial void OnSendMessageAfterOperationsChanged();
    partial void OnShowCountersChanging(System.Nullable<bool> value);
    partial void OnShowCountersChanged();
    partial void OnShowRequestsInSearchChanging(System.Nullable<bool> value);
    partial void OnShowRequestsInSearchChanged();
    partial void OnValidationOnCustomerPhoneChanging(System.Nullable<bool> value);
    partial void OnValidationOnCustomerPhoneChanged();
    partial void OnShowAllDemandOfPRChanging(System.Nullable<bool> value);
    partial void OnShowAllDemandOfPRChanged();
    partial void OnFawryServiceChanging(System.Nullable<bool> value);
    partial void OnFawryServiceChanged();
    partial void OnFawryTypeChanging(string value);
    partial void OnFawryTypeChanged();
    partial void OnupdatedemandnextmonthChanging(System.Nullable<bool> value);
    partial void OnupdatedemandnextmonthChanged();
    partial void OnAutoSuspendCustomersUnderResellerChanging(System.Nullable<bool> value);
    partial void OnAutoSuspendCustomersUnderResellerChanged();
    partial void OnShowDeductionWithFixedRequestDateInCDChanging(System.Nullable<bool> value);
    partial void OnShowDeductionWithFixedRequestDateInCDChanged();
    partial void OnPortalRelayDaysChanging(System.Nullable<int> value);
    partial void OnPortalRelayDaysChanged();
    partial void OnPreventUnsusForCustomerHasIndebtednessChanging(System.Nullable<bool> value);
    partial void OnPreventUnsusForCustomerHasIndebtednessChanged();
    partial void OnPreventSuspendBeforeMonthFromReActiveChanging(System.Nullable<bool> value);
    partial void OnPreventSuspendBeforeMonthFromReActiveChanged();
    partial void OnConvertFromPackageTypeChanging(System.Nullable<int> value);
    partial void OnConvertFromPackageTypeChanged();
    partial void OnConvertToPackageTypeChanging(System.Nullable<int> value);
    partial void OnConvertToPackageTypeChanged();
    partial void OnConversionDebtChanging(System.Nullable<decimal> value);
    partial void OnConversionDebtChanged();
    partial void OnDay1Changing(System.Nullable<int> value);
    partial void OnDay1Changed();
    partial void OnDay2Changing(System.Nullable<int> value);
    partial void OnDay2Changed();
    partial void OnDay3Changing(System.Nullable<int> value);
    partial void OnDay3Changed();
    partial void OnDay4Changing(System.Nullable<int> value);
    partial void OnDay4Changed();
    partial void OnDay5Changing(System.Nullable<int> value);
    partial void OnDay5Changed();
    partial void OnDay6Changing(System.Nullable<int> value);
    partial void OnDay6Changed();
    partial void OnPercentage1Changing(System.Nullable<int> value);
    partial void OnPercentage1Changed();
    partial void OnPercentage2Changing(System.Nullable<int> value);
    partial void OnPercentage2Changed();
    partial void OnPercentage3Changing(System.Nullable<int> value);
    partial void OnPercentage3Changed();
    partial void OnPercentage4Changing(System.Nullable<int> value);
    partial void OnPercentage4Changed();
    partial void OnPercentage5Changing(System.Nullable<int> value);
    partial void OnPercentage5Changed();
    partial void OnPercentage6Changing(System.Nullable<int> value);
    partial void OnPercentage6Changed();
    partial void OnIsResellerPaymentActiveChanging(System.Nullable<bool> value);
    partial void OnIsResellerPaymentActiveChanged();
    partial void OnAutoResellerPaymentChanging(System.Nullable<bool> value);
    partial void OnAutoResellerPaymentChanged();
    partial void OnAutoBranchPaymentChanging(System.Nullable<bool> value);
    partial void OnAutoBranchPaymentChanged();
    #endregion
		
		public Option()
		{
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IncludeGovernorateInSearch", DbType="Bit NOT NULL")]
		public bool IncludeGovernorateInSearch
		{
			get
			{
				return this._IncludeGovernorateInSearch;
			}
			set
			{
				if ((this._IncludeGovernorateInSearch != value))
				{
					this.OnIncludeGovernorateInSearchChanging(value);
					this.SendPropertyChanging();
					this._IncludeGovernorateInSearch = value;
					this.SendPropertyChanged("IncludeGovernorateInSearch");
					this.OnIncludeGovernorateInSearchChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MergeGovernorateWithPhoneInCreateCustomer", DbType="Bit NOT NULL")]
		public bool MergeGovernorateWithPhoneInCreateCustomer
		{
			get
			{
				return this._MergeGovernorateWithPhoneInCreateCustomer;
			}
			set
			{
				if ((this._MergeGovernorateWithPhoneInCreateCustomer != value))
				{
					this.OnMergeGovernorateWithPhoneInCreateCustomerChanging(value);
					this.SendPropertyChanging();
					this._MergeGovernorateWithPhoneInCreateCustomer = value;
					this.SendPropertyChanged("MergeGovernorateWithPhoneInCreateCustomer");
					this.OnMergeGovernorateWithPhoneInCreateCustomerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SuspendDaysCount", DbType="Int NOT NULL")]
		public int SuspendDaysCount
		{
			get
			{
				return this._SuspendDaysCount;
			}
			set
			{
				if ((this._SuspendDaysCount != value))
				{
					this.OnSuspendDaysCountChanging(value);
					this.SendPropertyChanging();
					this._SuspendDaysCount = value;
					this.SendPropertyChanged("SuspendDaysCount");
					this.OnSuspendDaysCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WidthOfReciept", DbType="Bit")]
		public System.Nullable<bool> WidthOfReciept
		{
			get
			{
				return this._WidthOfReciept;
			}
			set
			{
				if ((this._WidthOfReciept != value))
				{
					this.OnWidthOfRecieptChanging(value);
					this.SendPropertyChanging();
					this._WidthOfReciept = value;
					this.SendPropertyChanged("WidthOfReciept");
					this.OnWidthOfRecieptChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscoundFromBranchCredit", DbType="Bit NOT NULL")]
		public bool DiscoundFromBranchCredit
		{
			get
			{
				return this._DiscoundFromBranchCredit;
			}
			set
			{
				if ((this._DiscoundFromBranchCredit != value))
				{
					this.OnDiscoundFromBranchCreditChanging(value);
					this.SendPropertyChanging();
					this._DiscoundFromBranchCredit = value;
					this.SendPropertyChanged("DiscoundFromBranchCredit");
					this.OnDiscoundFromBranchCreditChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromDay", DbType="Int")]
		public System.Nullable<int> FromDay
		{
			get
			{
				return this._FromDay;
			}
			set
			{
				if ((this._FromDay != value))
				{
					this.OnFromDayChanging(value);
					this.SendPropertyChanging();
					this._FromDay = value;
					this.SendPropertyChanged("FromDay");
					this.OnFromDayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToDay", DbType="Int")]
		public System.Nullable<int> ToDay
		{
			get
			{
				return this._ToDay;
			}
			set
			{
				if ((this._ToDay != value))
				{
					this.OnToDayChanging(value);
					this.SendPropertyChanging();
					this._ToDay = value;
					this.SendPropertyChanged("ToDay");
					this.OnToDayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeDifference", DbType="Int")]
		public System.Nullable<int> TimeDifference
		{
			get
			{
				return this._TimeDifference;
			}
			set
			{
				if ((this._TimeDifference != value))
				{
					this.OnTimeDifferenceChanging(value);
					this.SendPropertyChanging();
					this._TimeDifference = value;
					this.SendPropertyChanged("TimeDifference");
					this.OnTimeDifferenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscoundfromResellerandBranch", DbType="Bit NOT NULL")]
		public bool DiscoundfromResellerandBranch
		{
			get
			{
				return this._DiscoundfromResellerandBranch;
			}
			set
			{
				if ((this._DiscoundfromResellerandBranch != value))
				{
					this.OnDiscoundfromResellerandBranchChanging(value);
					this.SendPropertyChanging();
					this._DiscoundfromResellerandBranch = value;
					this.SendPropertyChanged("DiscoundfromResellerandBranch");
					this.OnDiscoundfromResellerandBranchChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UploadFielsToNewCustomer", DbType="Bit NOT NULL")]
		public bool UploadFielsToNewCustomer
		{
			get
			{
				return this._UploadFielsToNewCustomer;
			}
			set
			{
				if ((this._UploadFielsToNewCustomer != value))
				{
					this.OnUploadFielsToNewCustomerChanging(value);
					this.SendPropertyChanging();
					this._UploadFielsToNewCustomer = value;
					this.SendPropertyChanged("UploadFielsToNewCustomer");
					this.OnUploadFielsToNewCustomerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Allowminuscredit", DbType="Bit NOT NULL")]
		public bool Allowminuscredit
		{
			get
			{
				return this._Allowminuscredit;
			}
			set
			{
				if ((this._Allowminuscredit != value))
				{
					this.OnAllowminuscreditChanging(value);
					this.SendPropertyChanging();
					this._Allowminuscredit = value;
					this.SendPropertyChanged("Allowminuscredit");
					this.OnAllowminuscreditChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShowStatistic", DbType="Bit NOT NULL")]
		public bool ShowStatistic
		{
			get
			{
				return this._ShowStatistic;
			}
			set
			{
				if ((this._ShowStatistic != value))
				{
					this.OnShowStatisticChanging(value);
					this.SendPropertyChanging();
					this._ShowStatistic = value;
					this.SendPropertyChanged("ShowStatistic");
					this.OnShowStatisticChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IntallationDiscound", DbType="Bit NOT NULL")]
		public bool IntallationDiscound
		{
			get
			{
				return this._IntallationDiscound;
			}
			set
			{
				if ((this._IntallationDiscound != value))
				{
					this.OnIntallationDiscoundChanging(value);
					this.SendPropertyChanging();
					this._IntallationDiscound = value;
					this.SendPropertyChanged("IntallationDiscound");
					this.OnIntallationDiscoundChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DaysOfUnpaidDemandsLimit", DbType="Int")]
		public System.Nullable<int> DaysOfUnpaidDemandsLimit
		{
			get
			{
				return this._DaysOfUnpaidDemandsLimit;
			}
			set
			{
				if ((this._DaysOfUnpaidDemandsLimit != value))
				{
					this.OnDaysOfUnpaidDemandsLimitChanging(value);
					this.SendPropertyChanging();
					this._DaysOfUnpaidDemandsLimit = value;
					this.SendPropertyChanged("DaysOfUnpaidDemandsLimit");
					this.OnDaysOfUnpaidDemandsLimitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AlertWayOfUnpaidDemand", DbType="Int")]
		public System.Nullable<int> AlertWayOfUnpaidDemand
		{
			get
			{
				return this._AlertWayOfUnpaidDemand;
			}
			set
			{
				if ((this._AlertWayOfUnpaidDemand != value))
				{
					this.OnAlertWayOfUnpaidDemandChanging(value);
					this.SendPropertyChanging();
					this._AlertWayOfUnpaidDemand = value;
					this.SendPropertyChanged("AlertWayOfUnpaidDemand");
					this.OnAlertWayOfUnpaidDemandChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReminderMessage", DbType="NVarChar(500)")]
		public string ReminderMessage
		{
			get
			{
				return this._ReminderMessage;
			}
			set
			{
				if ((this._ReminderMessage != value))
				{
					this.OnReminderMessageChanging(value);
					this.SendPropertyChanging();
					this._ReminderMessage = value;
					this.SendPropertyChanged("ReminderMessage");
					this.OnReminderMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReminderToUserId", DbType="Int")]
		public System.Nullable<int> ReminderToUserId
		{
			get
			{
				return this._ReminderToUserId;
			}
			set
			{
				if ((this._ReminderToUserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnReminderToUserIdChanging(value);
					this.SendPropertyChanging();
					this._ReminderToUserId = value;
					this.SendPropertyChanged("ReminderToUserId");
					this.OnReminderToUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActiveCulture", DbType="Bit")]
		public System.Nullable<bool> ActiveCulture
		{
			get
			{
				return this._ActiveCulture;
			}
			set
			{
				if ((this._ActiveCulture != value))
				{
					this.OnActiveCultureChanging(value);
					this.SendPropertyChanging();
					this._ActiveCulture = value;
					this.SendPropertyChanged("ActiveCulture");
					this.OnActiveCultureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SendMessageAfterOperations", DbType="Bit")]
		public System.Nullable<bool> SendMessageAfterOperations
		{
			get
			{
				return this._SendMessageAfterOperations;
			}
			set
			{
				if ((this._SendMessageAfterOperations != value))
				{
					this.OnSendMessageAfterOperationsChanging(value);
					this.SendPropertyChanging();
					this._SendMessageAfterOperations = value;
					this.SendPropertyChanged("SendMessageAfterOperations");
					this.OnSendMessageAfterOperationsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShowCounters", DbType="Bit")]
		public System.Nullable<bool> ShowCounters
		{
			get
			{
				return this._ShowCounters;
			}
			set
			{
				if ((this._ShowCounters != value))
				{
					this.OnShowCountersChanging(value);
					this.SendPropertyChanging();
					this._ShowCounters = value;
					this.SendPropertyChanged("ShowCounters");
					this.OnShowCountersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShowRequestsInSearch", DbType="Bit")]
		public System.Nullable<bool> ShowRequestsInSearch
		{
			get
			{
				return this._ShowRequestsInSearch;
			}
			set
			{
				if ((this._ShowRequestsInSearch != value))
				{
					this.OnShowRequestsInSearchChanging(value);
					this.SendPropertyChanging();
					this._ShowRequestsInSearch = value;
					this.SendPropertyChanged("ShowRequestsInSearch");
					this.OnShowRequestsInSearchChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ValidationOnCustomerPhone", DbType="Bit")]
		public System.Nullable<bool> ValidationOnCustomerPhone
		{
			get
			{
				return this._ValidationOnCustomerPhone;
			}
			set
			{
				if ((this._ValidationOnCustomerPhone != value))
				{
					this.OnValidationOnCustomerPhoneChanging(value);
					this.SendPropertyChanging();
					this._ValidationOnCustomerPhone = value;
					this.SendPropertyChanged("ValidationOnCustomerPhone");
					this.OnValidationOnCustomerPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShowAllDemandOfPR", DbType="Bit")]
		public System.Nullable<bool> ShowAllDemandOfPR
		{
			get
			{
				return this._ShowAllDemandOfPR;
			}
			set
			{
				if ((this._ShowAllDemandOfPR != value))
				{
					this.OnShowAllDemandOfPRChanging(value);
					this.SendPropertyChanging();
					this._ShowAllDemandOfPR = value;
					this.SendPropertyChanged("ShowAllDemandOfPR");
					this.OnShowAllDemandOfPRChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FawryService", DbType="Bit")]
		public System.Nullable<bool> FawryService
		{
			get
			{
				return this._FawryService;
			}
			set
			{
				if ((this._FawryService != value))
				{
					this.OnFawryServiceChanging(value);
					this.SendPropertyChanging();
					this._FawryService = value;
					this.SendPropertyChanged("FawryService");
					this.OnFawryServiceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FawryType", DbType="NVarChar(250)")]
		public string FawryType
		{
			get
			{
				return this._FawryType;
			}
			set
			{
				if ((this._FawryType != value))
				{
					this.OnFawryTypeChanging(value);
					this.SendPropertyChanging();
					this._FawryType = value;
					this.SendPropertyChanged("FawryType");
					this.OnFawryTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_updatedemandnextmonth", DbType="Bit")]
		public System.Nullable<bool> updatedemandnextmonth
		{
			get
			{
				return this._updatedemandnextmonth;
			}
			set
			{
				if ((this._updatedemandnextmonth != value))
				{
					this.OnupdatedemandnextmonthChanging(value);
					this.SendPropertyChanging();
					this._updatedemandnextmonth = value;
					this.SendPropertyChanged("updatedemandnextmonth");
					this.OnupdatedemandnextmonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AutoSuspendCustomersUnderReseller", DbType="Bit")]
		public System.Nullable<bool> AutoSuspendCustomersUnderReseller
		{
			get
			{
				return this._AutoSuspendCustomersUnderReseller;
			}
			set
			{
				if ((this._AutoSuspendCustomersUnderReseller != value))
				{
					this.OnAutoSuspendCustomersUnderResellerChanging(value);
					this.SendPropertyChanging();
					this._AutoSuspendCustomersUnderReseller = value;
					this.SendPropertyChanged("AutoSuspendCustomersUnderReseller");
					this.OnAutoSuspendCustomersUnderResellerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShowDeductionWithFixedRequestDateInCD", DbType="Bit")]
		public System.Nullable<bool> ShowDeductionWithFixedRequestDateInCD
		{
			get
			{
				return this._ShowDeductionWithFixedRequestDateInCD;
			}
			set
			{
				if ((this._ShowDeductionWithFixedRequestDateInCD != value))
				{
					this.OnShowDeductionWithFixedRequestDateInCDChanging(value);
					this.SendPropertyChanging();
					this._ShowDeductionWithFixedRequestDateInCD = value;
					this.SendPropertyChanged("ShowDeductionWithFixedRequestDateInCD");
					this.OnShowDeductionWithFixedRequestDateInCDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PortalRelayDays", DbType="Int")]
		public System.Nullable<int> PortalRelayDays
		{
			get
			{
				return this._PortalRelayDays;
			}
			set
			{
				if ((this._PortalRelayDays != value))
				{
					this.OnPortalRelayDaysChanging(value);
					this.SendPropertyChanging();
					this._PortalRelayDays = value;
					this.SendPropertyChanged("PortalRelayDays");
					this.OnPortalRelayDaysChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreventUnsusForCustomerHasIndebtedness", DbType="Bit")]
		public System.Nullable<bool> PreventUnsusForCustomerHasIndebtedness
		{
			get
			{
				return this._PreventUnsusForCustomerHasIndebtedness;
			}
			set
			{
				if ((this._PreventUnsusForCustomerHasIndebtedness != value))
				{
					this.OnPreventUnsusForCustomerHasIndebtednessChanging(value);
					this.SendPropertyChanging();
					this._PreventUnsusForCustomerHasIndebtedness = value;
					this.SendPropertyChanged("PreventUnsusForCustomerHasIndebtedness");
					this.OnPreventUnsusForCustomerHasIndebtednessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreventSuspendBeforeMonthFromReActive", DbType="Bit")]
		public System.Nullable<bool> PreventSuspendBeforeMonthFromReActive
		{
			get
			{
				return this._PreventSuspendBeforeMonthFromReActive;
			}
			set
			{
				if ((this._PreventSuspendBeforeMonthFromReActive != value))
				{
					this.OnPreventSuspendBeforeMonthFromReActiveChanging(value);
					this.SendPropertyChanging();
					this._PreventSuspendBeforeMonthFromReActive = value;
					this.SendPropertyChanged("PreventSuspendBeforeMonthFromReActive");
					this.OnPreventSuspendBeforeMonthFromReActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConvertFromPackageType", DbType="Int")]
		public System.Nullable<int> ConvertFromPackageType
		{
			get
			{
				return this._ConvertFromPackageType;
			}
			set
			{
				if ((this._ConvertFromPackageType != value))
				{
					this.OnConvertFromPackageTypeChanging(value);
					this.SendPropertyChanging();
					this._ConvertFromPackageType = value;
					this.SendPropertyChanged("ConvertFromPackageType");
					this.OnConvertFromPackageTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConvertToPackageType", DbType="Int")]
		public System.Nullable<int> ConvertToPackageType
		{
			get
			{
				return this._ConvertToPackageType;
			}
			set
			{
				if ((this._ConvertToPackageType != value))
				{
					this.OnConvertToPackageTypeChanging(value);
					this.SendPropertyChanging();
					this._ConvertToPackageType = value;
					this.SendPropertyChanged("ConvertToPackageType");
					this.OnConvertToPackageTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConversionDebt", DbType="Decimal(12,2)")]
		public System.Nullable<decimal> ConversionDebt
		{
			get
			{
				return this._ConversionDebt;
			}
			set
			{
				if ((this._ConversionDebt != value))
				{
					this.OnConversionDebtChanging(value);
					this.SendPropertyChanging();
					this._ConversionDebt = value;
					this.SendPropertyChanged("ConversionDebt");
					this.OnConversionDebtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Day1", DbType="Int")]
		public System.Nullable<int> Day1
		{
			get
			{
				return this._Day1;
			}
			set
			{
				if ((this._Day1 != value))
				{
					this.OnDay1Changing(value);
					this.SendPropertyChanging();
					this._Day1 = value;
					this.SendPropertyChanged("Day1");
					this.OnDay1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Day2", DbType="Int")]
		public System.Nullable<int> Day2
		{
			get
			{
				return this._Day2;
			}
			set
			{
				if ((this._Day2 != value))
				{
					this.OnDay2Changing(value);
					this.SendPropertyChanging();
					this._Day2 = value;
					this.SendPropertyChanged("Day2");
					this.OnDay2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Day3", DbType="Int")]
		public System.Nullable<int> Day3
		{
			get
			{
				return this._Day3;
			}
			set
			{
				if ((this._Day3 != value))
				{
					this.OnDay3Changing(value);
					this.SendPropertyChanging();
					this._Day3 = value;
					this.SendPropertyChanged("Day3");
					this.OnDay3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Day4", DbType="Int")]
		public System.Nullable<int> Day4
		{
			get
			{
				return this._Day4;
			}
			set
			{
				if ((this._Day4 != value))
				{
					this.OnDay4Changing(value);
					this.SendPropertyChanging();
					this._Day4 = value;
					this.SendPropertyChanged("Day4");
					this.OnDay4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Day5", DbType="Int")]
		public System.Nullable<int> Day5
		{
			get
			{
				return this._Day5;
			}
			set
			{
				if ((this._Day5 != value))
				{
					this.OnDay5Changing(value);
					this.SendPropertyChanging();
					this._Day5 = value;
					this.SendPropertyChanged("Day5");
					this.OnDay5Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Day6", DbType="Int")]
		public System.Nullable<int> Day6
		{
			get
			{
				return this._Day6;
			}
			set
			{
				if ((this._Day6 != value))
				{
					this.OnDay6Changing(value);
					this.SendPropertyChanging();
					this._Day6 = value;
					this.SendPropertyChanged("Day6");
					this.OnDay6Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Percentage1", DbType="Int")]
		public System.Nullable<int> Percentage1
		{
			get
			{
				return this._Percentage1;
			}
			set
			{
				if ((this._Percentage1 != value))
				{
					this.OnPercentage1Changing(value);
					this.SendPropertyChanging();
					this._Percentage1 = value;
					this.SendPropertyChanged("Percentage1");
					this.OnPercentage1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Percentage2", DbType="Int")]
		public System.Nullable<int> Percentage2
		{
			get
			{
				return this._Percentage2;
			}
			set
			{
				if ((this._Percentage2 != value))
				{
					this.OnPercentage2Changing(value);
					this.SendPropertyChanging();
					this._Percentage2 = value;
					this.SendPropertyChanged("Percentage2");
					this.OnPercentage2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Percentage3", DbType="Int")]
		public System.Nullable<int> Percentage3
		{
			get
			{
				return this._Percentage3;
			}
			set
			{
				if ((this._Percentage3 != value))
				{
					this.OnPercentage3Changing(value);
					this.SendPropertyChanging();
					this._Percentage3 = value;
					this.SendPropertyChanged("Percentage3");
					this.OnPercentage3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Percentage4", DbType="Int")]
		public System.Nullable<int> Percentage4
		{
			get
			{
				return this._Percentage4;
			}
			set
			{
				if ((this._Percentage4 != value))
				{
					this.OnPercentage4Changing(value);
					this.SendPropertyChanging();
					this._Percentage4 = value;
					this.SendPropertyChanged("Percentage4");
					this.OnPercentage4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Percentage5", DbType="Int")]
		public System.Nullable<int> Percentage5
		{
			get
			{
				return this._Percentage5;
			}
			set
			{
				if ((this._Percentage5 != value))
				{
					this.OnPercentage5Changing(value);
					this.SendPropertyChanging();
					this._Percentage5 = value;
					this.SendPropertyChanged("Percentage5");
					this.OnPercentage5Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Percentage6", DbType="Int")]
		public System.Nullable<int> Percentage6
		{
			get
			{
				return this._Percentage6;
			}
			set
			{
				if ((this._Percentage6 != value))
				{
					this.OnPercentage6Changing(value);
					this.SendPropertyChanging();
					this._Percentage6 = value;
					this.SendPropertyChanged("Percentage6");
					this.OnPercentage6Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsResellerPaymentActive", DbType="Bit")]
		public System.Nullable<bool> IsResellerPaymentActive
		{
			get
			{
				return this._IsResellerPaymentActive;
			}
			set
			{
				if ((this._IsResellerPaymentActive != value))
				{
					this.OnIsResellerPaymentActiveChanging(value);
					this.SendPropertyChanging();
					this._IsResellerPaymentActive = value;
					this.SendPropertyChanged("IsResellerPaymentActive");
					this.OnIsResellerPaymentActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AutoResellerPayment", DbType="Bit")]
		public System.Nullable<bool> AutoResellerPayment
		{
			get
			{
				return this._AutoResellerPayment;
			}
			set
			{
				if ((this._AutoResellerPayment != value))
				{
					this.OnAutoResellerPaymentChanging(value);
					this.SendPropertyChanging();
					this._AutoResellerPayment = value;
					this.SendPropertyChanged("AutoResellerPayment");
					this.OnAutoResellerPaymentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AutoBranchPayment", DbType="Bit")]
		public System.Nullable<bool> AutoBranchPayment
		{
			get
			{
				return this._AutoBranchPayment;
			}
			set
			{
				if ((this._AutoBranchPayment != value))
				{
					this.OnAutoBranchPaymentChanging(value);
					this.SendPropertyChanging();
					this._AutoBranchPayment = value;
					this.SendPropertyChanged("AutoBranchPayment");
					this.OnAutoBranchPaymentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Option", Storage="_User", ThisKey="ReminderToUserId", OtherKey="ID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Options.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Options.Add(this);
						this._ReminderToUserId = value.ID;
					}
					else
					{
						this._ReminderToUserId = default(Nullable<int>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Item")]
	public partial class Item : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _ItemName;
		
		private decimal _PurchasPrice;
		
		private decimal _SellPrice;
		
		private decimal _FirstBalance;
		
		private string _Code;
		
		private EntitySet<StoreTransaction> _StoreTransactions;
		
		private EntitySet<InvoiceDetail> _InvoiceDetails;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnItemNameChanging(string value);
    partial void OnItemNameChanged();
    partial void OnPurchasPriceChanging(decimal value);
    partial void OnPurchasPriceChanged();
    partial void OnSellPriceChanging(decimal value);
    partial void OnSellPriceChanged();
    partial void OnFirstBalanceChanging(decimal value);
    partial void OnFirstBalanceChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    #endregion
		
		public Item()
		{
			this._StoreTransactions = new EntitySet<StoreTransaction>(new Action<StoreTransaction>(this.attach_StoreTransactions), new Action<StoreTransaction>(this.detach_StoreTransactions));
			this._InvoiceDetails = new EntitySet<InvoiceDetail>(new Action<InvoiceDetail>(this.attach_InvoiceDetails), new Action<InvoiceDetail>(this.detach_InvoiceDetails));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemName", DbType="NVarChar(150)")]
		public string ItemName
		{
			get
			{
				return this._ItemName;
			}
			set
			{
				if ((this._ItemName != value))
				{
					this.OnItemNameChanging(value);
					this.SendPropertyChanging();
					this._ItemName = value;
					this.SendPropertyChanged("ItemName");
					this.OnItemNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchasPrice", DbType="Money NOT NULL")]
		public decimal PurchasPrice
		{
			get
			{
				return this._PurchasPrice;
			}
			set
			{
				if ((this._PurchasPrice != value))
				{
					this.OnPurchasPriceChanging(value);
					this.SendPropertyChanging();
					this._PurchasPrice = value;
					this.SendPropertyChanged("PurchasPrice");
					this.OnPurchasPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SellPrice", DbType="Money NOT NULL")]
		public decimal SellPrice
		{
			get
			{
				return this._SellPrice;
			}
			set
			{
				if ((this._SellPrice != value))
				{
					this.OnSellPriceChanging(value);
					this.SendPropertyChanging();
					this._SellPrice = value;
					this.SendPropertyChanged("SellPrice");
					this.OnSellPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstBalance", DbType="Money NOT NULL")]
		public decimal FirstBalance
		{
			get
			{
				return this._FirstBalance;
			}
			set
			{
				if ((this._FirstBalance != value))
				{
					this.OnFirstBalanceChanging(value);
					this.SendPropertyChanging();
					this._FirstBalance = value;
					this.SendPropertyChanged("FirstBalance");
					this.OnFirstBalanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(MAX)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Item_StoreTransaction", Storage="_StoreTransactions", ThisKey="Id", OtherKey="ItemId")]
		public EntitySet<StoreTransaction> StoreTransactions
		{
			get
			{
				return this._StoreTransactions;
			}
			set
			{
				this._StoreTransactions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Item_InvoiceDetail", Storage="_InvoiceDetails", ThisKey="Id", OtherKey="ItemId")]
		public EntitySet<InvoiceDetail> InvoiceDetails
		{
			get
			{
				return this._InvoiceDetails;
			}
			set
			{
				this._InvoiceDetails.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_StoreTransactions(StoreTransaction entity)
		{
			this.SendPropertyChanging();
			entity.Item = this;
		}
		
		private void detach_StoreTransactions(StoreTransaction entity)
		{
			this.SendPropertyChanging();
			entity.Item = null;
		}
		
		private void attach_InvoiceDetails(InvoiceDetail entity)
		{
			this.SendPropertyChanging();
			entity.Item = this;
		}
		
		private void detach_InvoiceDetails(InvoiceDetail entity)
		{
			this.SendPropertyChanging();
			entity.Item = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InvoiceDetails")]
	public partial class InvoiceDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _ItemId;
		
		private System.Nullable<decimal> _Quantity;
		
		private System.Nullable<int> _HeadId;
		
		private System.Nullable<decimal> _itemprice;
		
		private EntityRef<Item> _Item;
		
		private EntityRef<InvoiceHeader> _InvoiceHeader;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnItemIdChanging(System.Nullable<int> value);
    partial void OnItemIdChanged();
    partial void OnQuantityChanging(System.Nullable<decimal> value);
    partial void OnQuantityChanged();
    partial void OnHeadIdChanging(System.Nullable<int> value);
    partial void OnHeadIdChanged();
    partial void OnitempriceChanging(System.Nullable<decimal> value);
    partial void OnitempriceChanged();
    #endregion
		
		public InvoiceDetail()
		{
			this._Item = default(EntityRef<Item>);
			this._InvoiceHeader = default(EntityRef<InvoiceHeader>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemId", DbType="Int")]
		public System.Nullable<int> ItemId
		{
			get
			{
				return this._ItemId;
			}
			set
			{
				if ((this._ItemId != value))
				{
					if (this._Item.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnItemIdChanging(value);
					this.SendPropertyChanging();
					this._ItemId = value;
					this.SendPropertyChanged("ItemId");
					this.OnItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Decimal(8,2)")]
		public System.Nullable<decimal> Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HeadId", DbType="Int")]
		public System.Nullable<int> HeadId
		{
			get
			{
				return this._HeadId;
			}
			set
			{
				if ((this._HeadId != value))
				{
					if (this._InvoiceHeader.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHeadIdChanging(value);
					this.SendPropertyChanging();
					this._HeadId = value;
					this.SendPropertyChanged("HeadId");
					this.OnHeadIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_itemprice", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> itemprice
		{
			get
			{
				return this._itemprice;
			}
			set
			{
				if ((this._itemprice != value))
				{
					this.OnitempriceChanging(value);
					this.SendPropertyChanging();
					this._itemprice = value;
					this.SendPropertyChanged("itemprice");
					this.OnitempriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Item_InvoiceDetail", Storage="_Item", ThisKey="ItemId", OtherKey="Id", IsForeignKey=true)]
		public Item Item
		{
			get
			{
				return this._Item.Entity;
			}
			set
			{
				Item previousValue = this._Item.Entity;
				if (((previousValue != value) 
							|| (this._Item.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Item.Entity = null;
						previousValue.InvoiceDetails.Remove(this);
					}
					this._Item.Entity = value;
					if ((value != null))
					{
						value.InvoiceDetails.Add(this);
						this._ItemId = value.Id;
					}
					else
					{
						this._ItemId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Item");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InvoiceHeader_InvoiceDetail", Storage="_InvoiceHeader", ThisKey="HeadId", OtherKey="Id", IsForeignKey=true)]
		public InvoiceHeader InvoiceHeader
		{
			get
			{
				return this._InvoiceHeader.Entity;
			}
			set
			{
				InvoiceHeader previousValue = this._InvoiceHeader.Entity;
				if (((previousValue != value) 
							|| (this._InvoiceHeader.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._InvoiceHeader.Entity = null;
						previousValue.InvoiceDetails.Remove(this);
					}
					this._InvoiceHeader.Entity = value;
					if ((value != null))
					{
						value.InvoiceDetails.Add(this);
						this._HeadId = value.Id;
					}
					else
					{
						this._HeadId = default(Nullable<int>);
					}
					this.SendPropertyChanged("InvoiceHeader");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FawryPaymentRecord")]
	public partial class FawryPaymentRecord : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Fptn;
		
		private string _CustomerPhone;
		
		private System.Nullable<int> _DemandId;
		
		private EntityRef<Demand> _Demand;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnFptnChanging(string value);
    partial void OnFptnChanged();
    partial void OnCustomerPhoneChanging(string value);
    partial void OnCustomerPhoneChanged();
    partial void OnDemandIdChanging(System.Nullable<int> value);
    partial void OnDemandIdChanged();
    #endregion
		
		public FawryPaymentRecord()
		{
			this._Demand = default(EntityRef<Demand>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fptn", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Fptn
		{
			get
			{
				return this._Fptn;
			}
			set
			{
				if ((this._Fptn != value))
				{
					this.OnFptnChanging(value);
					this.SendPropertyChanging();
					this._Fptn = value;
					this.SendPropertyChanged("Fptn");
					this.OnFptnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerPhone", DbType="NVarChar(15)")]
		public string CustomerPhone
		{
			get
			{
				return this._CustomerPhone;
			}
			set
			{
				if ((this._CustomerPhone != value))
				{
					this.OnCustomerPhoneChanging(value);
					this.SendPropertyChanging();
					this._CustomerPhone = value;
					this.SendPropertyChanged("CustomerPhone");
					this.OnCustomerPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DemandId", DbType="Int")]
		public System.Nullable<int> DemandId
		{
			get
			{
				return this._DemandId;
			}
			set
			{
				if ((this._DemandId != value))
				{
					if (this._Demand.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDemandIdChanging(value);
					this.SendPropertyChanging();
					this._DemandId = value;
					this.SendPropertyChanged("DemandId");
					this.OnDemandIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Demand_FawryPaymentRecord", Storage="_Demand", ThisKey="DemandId", OtherKey="Id", IsForeignKey=true)]
		public Demand Demand
		{
			get
			{
				return this._Demand.Entity;
			}
			set
			{
				Demand previousValue = this._Demand.Entity;
				if (((previousValue != value) 
							|| (this._Demand.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Demand.Entity = null;
						previousValue.FawryPaymentRecords.Remove(this);
					}
					this._Demand.Entity = value;
					if ((value != null))
					{
						value.FawryPaymentRecords.Add(this);
						this._DemandId = value.Id;
					}
					else
					{
						this._DemandId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Demand");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
